<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>com.nightonke.boommenu.BMBShadow</name>
        <comment>Created by Weiping Huang at 19:09 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>dispatchDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHorizontalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>onResolvePointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnFocusChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnFocusChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>setOnLongClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLongClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.LayoutAnimationController</type>
            </parameter>
        </method>
        <method>
            <name>indexOfChild</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setOnDragListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnDragListener</type>
            </parameter>
        </method>
        <method>
            <name>setAlwaysDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getHandler</name>
            <comment></comment>
            <returntype>android.os.Handler</returntype>
        </method>
        <method>
            <name>isNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTextAlignment</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>cleanupLayoutState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>postOnAnimationDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getScrollIndicators</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLayoutDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusableInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>stopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getNestedScrollAxes</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onCreateDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addChildrenForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>dispatchPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>refreshDrawableState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setChildrenDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isLayoutRequested</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>showContextMenuForChild</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getKeepScreenOn</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onFilterTouchEventForSecurity</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>requestLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSaveEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLayoutDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getApplicationWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>isInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>clearDisappearingChildren</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredHeightAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performContextClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getFocusables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibleDisplayFrame</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getSuggestedMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>performClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>addStatesFromChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasNestedScrollingParent</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>checkLayoutParams</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>onKeyPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>findViewsWithText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>fitSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>onDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>updateViewLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>onAttachedToWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isImportantForAccessibility</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSaveInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>clearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setClipToPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setOnScrollChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnScrollChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onStartNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>callOnClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTransitionGroup</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildAt</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotCacheDrawing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateOutline</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onDrawScrollBars</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>hasTransientState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>setMeasuredDimension</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSystemUiVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyShortcut</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getPointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
        </method>
        <method>
            <name>onViewAdded</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>restoreHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>detachViewFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getElevation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>announceForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>invalidateDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setFocusableInTouchMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>post</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>setClipBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getClipBounds</name>
            <comment></comment>
            <returntype>android.graphics.Rect</returntype>
        </method>
        <method>
            <name>dispatchVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>buildDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onOverScrolled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>attachLayoutAnimationParameters</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPointerIcon</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.PointerIcon</type>
            </parameter>
        </method>
        <method>
            <name>getBottomFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPaddingEnd</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTextAlignment</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTextDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasureAllChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPersistentDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyLongPress</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDescendantFocusability</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setCameraDistance</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeDetachedView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getCameraDistance</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTouchscreenBlocksFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.os.Parcelable</type>
            </parameter>
        </method>
        <method>
            <name>getBottomPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getContentDescription</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOverScrollMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>setOnTouchListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnTouchListener</type>
            </parameter>
        </method>
        <method>
            <name>saveHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>cancelDragAndDrop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTextAlignmentResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBackgroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>setNextFocusDownId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarStyle</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotDraw</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOverlay</name>
            <comment></comment>
            <returntype>android.view.ViewGroupOverlay</returntype>
        </method>
        <method>
            <name>getClipToPadding</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getScrollBarStyle</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>invalidateChildInParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>hasFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDrawForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShadowEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postDelayed</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.AccessibilityDelegate</type>
            </parameter>
        </method>
        <method>
            <name>getContextMenuInfo</name>
            <comment></comment>
            <returntype>android.view.ContextMenu.ContextMenuInfo</returntype>
        </method>
        <method>
            <name>setOutlineProvider</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewOutlineProvider</type>
            </parameter>
        </method>
        <method>
            <name>setBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onProvideVirtualStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>destroyDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getLayoutParams</name>
            <comment></comment>
            <returntype>android.view.ViewGroup.LayoutParams</returntype>
        </method>
        <method>
            <name>clearShadow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setScrollIndicators</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onAnimationEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>detachViewsFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRotationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getRootWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
        </method>
        <method>
            <name>getRotationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>drawChild</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setShadowColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeViewsInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onAnimationStart</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>changed</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLongClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setTransitionGroup</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clearAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getOverScrollMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getParentForAccessibility</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>verifyDrawable</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setOnClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericPointerEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocusFromTouch</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getForegroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>onSizeChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>w</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>h</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>oldw</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>oldh</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericFocusedEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheQuality</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setShadowCornerRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowCornerRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bringChildToFront</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>offsetRectIntoDescendantCoords</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>isHovered</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>childDrawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>resolveSizeAndState</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>requestRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>measureChildWithMargins</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLocationOnScreen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setMotionEventSplittingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startDragAndDrop</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLayerType</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>startLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLayoutMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getTransitionName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>getTouchables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>setScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startActionMode</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>isLaidOut</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setKeepScreenOn</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onKeyUp</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayerType</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>buildLayer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>isShown</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getClipToOutline</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>addView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isAttachedToWindow</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onScreenStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onNestedScrollAccepted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setMeasureAllChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPivotX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShadowOffsetX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPivotY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasWindowFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScaleX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onSaveInstanceState</name>
            <comment></comment>
            <returntype>android.os.Parcelable</returntype>
        </method>
        <method>
            <name>setScaleY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onRequestSendAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>setShadowOffsetY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isChildrenDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getTextDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setForegroundGravity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusUpId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onNestedPreScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getRotation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isChildrenDrawingOrderEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>combineMeasuredStates</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutAnimationListener</name>
            <comment></comment>
            <returntype>android.view.animation.Animation.AnimationListener</returntype>
        </method>
        <method>
            <name>dispatchDrawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>scheduleLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getLayoutTransition</name>
            <comment></comment>
            <returntype>android.animation.LayoutTransition</returntype>
        </method>
        <method>
            <name>setTransitionName</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEventPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>onCreateInputConnection</name>
            <comment></comment>
            <returntype>android.view.inputmethod.InputConnection</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.inputmethod.EditorInfo</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingTime</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>findViewWithTag</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>drawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setFadingEdgeLength</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEventUnchecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>isActivated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScaleY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getForeground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getScaleX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isAccessibilityFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>removeViews</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startDrag</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLabelFor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setMinimumWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRequestFocusInDescendants</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>onConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>performAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>onDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingRelative</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCreateContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCache</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>setShadowRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>canAnimate</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>performHapticFeedback</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>generateDefaultLayoutParams</name>
            <comment></comment>
            <returntype>android.widget.FrameLayout.LayoutParams</returntype>
        </method>
        <method>
            <name>setStaticTransformationsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeViewInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isAnimationCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getTranslationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getTranslationZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTag</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnContextClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnContextClickListener</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundGravity</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isAlwaysDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getKeyDispatcherState</name>
            <comment></comment>
            <returntype>android.view.KeyEvent.DispatcherState</returntype>
        </method>
        <method>
            <name>onScrollChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>onMeasure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>getRightFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnApplyWindowInsetsListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnApplyWindowInsetsListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetLeftAndRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRootView</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>requestSendAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>isClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDetachedFromWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getDisplay</name>
            <comment></comment>
            <returntype>android.view.Display</returntype>
        </method>
        <method>
            <name>isPaddingOffsetRequired</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildStaticTransformation</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>playSoundEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchDelegate</name>
            <comment></comment>
            <returntype>android.view.TouchDelegate</returntype>
        </method>
        <method>
            <name>generateLayoutParams</name>
            <comment></comment>
            <returntype>android.widget.FrameLayout.LayoutParams</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.AttributeSet</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>isOpaque</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getChildVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>isLongClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>animate</name>
            <comment></comment>
            <returntype>android.view.ViewPropertyAnimator</returntype>
        </method>
        <method>
            <name>getClipChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setStateListAnimator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.StateListAnimator</type>
            </parameter>
        </method>
        <method>
            <name>getMatrix</name>
            <comment></comment>
            <returntype>android.graphics.Matrix</returntype>
        </method>
        <method>
            <name>isHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>jumpDrawablesToCurrentState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onStopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getTopFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getLeftPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setRotation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addViewInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>notifySubtreeAccessibilityStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>scrollTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutAnimationListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation.AnimationListener</type>
            </parameter>
        </method>
        <method>
            <name>setPivotX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPivotY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overScrollBy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg8</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>updateDragShadow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
        </method>
        <method>
            <name>startNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotCacheDrawing</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>focusableViewAvailable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>measureChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>computeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getFocusedChild</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>isScrollContainer</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getScrollX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTopPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getScrollY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeAllViews</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDirty</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setForegroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isSaveEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getResources</name>
            <comment></comment>
            <returntype>android.content.res.Resources</returntype>
        </method>
        <method>
            <name>setOnKeyListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnKeyListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetTopAndBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isSelected</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getFocusedRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowSystemUiVisiblityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowAttachCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setMinimumHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>getPersistentDrawingCache</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setDescendantFocusability</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onInterceptHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>forceLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchscreenBlocksFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestDisallowInterceptTouchEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onKeyMultiple</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onWindowSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityNodeInfo</type>
            </parameter>
        </method>
        <method>
            <name>setLabelFor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>focusSearch</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>endViewTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getOutlineProvider</name>
            <comment></comment>
            <returntype>android.view.ViewOutlineProvider</returntype>
        </method>
        <method>
            <name>getNextFocusForwardId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLocalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>canResolveTextDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getImportantForAccessibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>gatherTransparentRegion</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Region</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.LayoutAnimationController</returntype>
        </method>
        <method>
            <name>dispatchKeyShortcutEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.LayoutTransition</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getChildMeasureSpec</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getOnFocusChangeListener</name>
            <comment></comment>
            <returntype>android.view.View.OnFocusChangeListener</returntype>
        </method>
        <method>
            <name>isFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTextDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusDownId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>measure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setClipToOutline</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setNextFocusRightId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLeftFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>removeAllViewsInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>unscheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>onFinishInflate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>requestApplyInsets</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>awakenScrollBars</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>generateViewId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeViewAt</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setHovered</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startViewTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setClipChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getStateListAnimator</name>
            <comment></comment>
            <returntype>android.animation.StateListAnimator</returntype>
        </method>
        <method>
            <name>onVisibilityAggregated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onSetAlpha</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingStart</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>getMeasuredWidthAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAddStatesFromChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setImportantForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>shouldDelayChildPressedState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>findFocus</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>dispatchFreezeSelfOnly</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>addOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>canScrollHorizontally</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHitRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>removeOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>drawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>layout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceHasOverlappingRendering</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getBaseline</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setChildrenDrawingOrderEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getGlobalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheQuality</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isHardwareAccelerated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getConsiderGoneChildrenWhenMeasuring</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestUnbufferedDispatch</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setHasTransientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>scheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>addOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>getVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHorizontalScrollbarHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>computeHorizontalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>findViewById</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityClassName</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOnSystemUiVisibilityChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnSystemUiVisibilityChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>removeCallbacks</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>performLongClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setRotationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRotationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>requestFitSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLayerPaint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>showContextMenu</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchThawSelfOnly</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>measureChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onCancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasOnClickListeners</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setOnHierarchyChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.OnHierarchyChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>setFocusable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>attachViewToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>setScrollContainer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getBackgroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>setAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>addFocusables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isContextClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>computeVerticalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setOnGenericMotionListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnGenericMotionListener</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusLeftId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRtlPropertiesChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutParams</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>computeSystemWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalScrollbarWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setContentDescription</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setOnCreateContextMenuListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnCreateContextMenuListener</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>offsetDescendantRectToMyCoords</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setAnimationCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isPaddingRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTranslationZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setElevation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>canResolveLayoutDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusUpId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTranslationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getDefaultSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isTemporarilyDetached</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>dispatchUnhandledMove</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForegroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>mergeDrawableStates</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getViewTreeObserver</name>
            <comment></comment>
            <returntype>android.view.ViewTreeObserver</returntype>
        </method>
        <method>
            <name>getChildDrawingOrder</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>canScrollVertically</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContextClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onViewRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSolidColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAlpha</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getSuggestedMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startActionModeForChild</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>requestTransparentRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getRightPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelLongPress</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInEditMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setTouchDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.TouchDelegate</type>
            </parameter>
        </method>
        <method>
            <name>detachAllViewsFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isMotionEventSplittingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onHoverChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusRightId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>requestChildRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusForwardId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>requestChildFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>childHasTransientStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onInterceptTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>onKeyDown</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getWindowSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getLocationInWindow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setOnHoverListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnHoverListener</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityNodeProvider</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeProvider</returntype>
        </method>
        <method>
            <name>recomputeViewAttributes</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeInfo</returntype>
        </method>
        <method>
            <name>onNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>setChildrenDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusLeftId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>checkInputConnectionProxy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>debug</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCheckIsTextEditor</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setFitsSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>createContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addTouchables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>getX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>canResolveTextAlignment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchNestedPreScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
        </method>
        <method>
            <name>getBackground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getFitsSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowId</name>
            <comment></comment>
            <returntype>android.view.WindowId</returntype>
        </method>
        <field>
            <name>SCROLL_INDICATOR_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_FORWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE_STICKY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LIGHT_STATUS_BAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_GRAVITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_ASSERTIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_WRITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_HARDWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_TOO_SMALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>KEEP_SCREEN_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INVISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_LOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_BEFORE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>CLIP_TO_PADDING_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_SOFTWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_MODE_CLIP_BOUNDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_OPAQUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_UP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_CONTENT_DESCRIPTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_NO_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>EMPTY_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSABLES_ALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_STABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_DOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BACKWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_HIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_HEIGHT_STATE_SHIFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_AFTER_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TRANSLATION_Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TRANSLATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TRANSLATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>PERSISTENT_ALL_CACHES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_POLITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALPHA</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BLOCK_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_READ</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATUS_BAR_HIDDEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SOUND_EFFECTS_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_LAYOUT_FLAGS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAPTIC_FEEDBACK_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LOW_PROFILE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_MODE_OPTICAL_BOUNDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSABLES_TOUCH_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_OFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>STATUS_BAR_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_ANY_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_SCROLLING_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>MEASURED_SIZE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_ANIMATION_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_YES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VIEW_LOG_TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomMenuButton</name>
        <comment>Created by Weiping Huang at 14:33 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>dispatchDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHorizontalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>onResolvePointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnFocusChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnFocusChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>setOnLongClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLongClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.LayoutAnimationController</type>
            </parameter>
        </method>
        <method>
            <name>indexOfChild</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setOnDragListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnDragListener</type>
            </parameter>
        </method>
        <method>
            <name>setAlwaysDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getHandler</name>
            <comment></comment>
            <returntype>android.os.Handler</returntype>
        </method>
        <method>
            <name>isNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTextAlignment</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getButtonTopMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>cleanupLayoutState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>postOnAnimationDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getHamHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getScrollIndicators</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLayoutDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusableInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getShadowRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>setHamHeight</name>
            <comment>Set the height of hams in BMB.
hamHeight: height of ham</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hamHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>stopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getNestedScrollAxes</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onCreateDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonRightMargin</name>
            <comment>Set the right-alignment margin between screen and buttons.
buttonRightMargin: Right-alignment margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonRightMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addChildrenForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>dispatchPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>refreshDrawableState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setChildrenDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setCancelable</name>
            <comment>Whether the BMB is cancelable. If the BMB is cancelable, then when after the boom
 animation of booming, you can re-boom BMB by clicking the background.
cancelable: whether the BMB is cancelable</comment>
            <returntype>void</returntype>
            <parameter>
                <name>cancelable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isLayoutRequested</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>showContextMenuForChild</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getKeepScreenOn</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onFilterTouchEventForSecurity</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>requestLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onButtonClick</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>boomButton</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButton</type>
            </parameter>
        </method>
        <method>
            <name>onHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getButtonLeftMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setSaveEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLayoutDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getApplicationWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>addBuilder</name>
            <comment>Add a builder to bmb, notice that @needToLayout will be called.
builder: builder</comment>
            <returntype>void</returntype>
            <parameter>
                <name>builder</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>isInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>clearDisappearingChildren</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredHeightAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performContextClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getFocusables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibleDisplayFrame</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getSuggestedMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPiecePlaceEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</returntype>
        </method>
        <method>
            <name>getHideScaleEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setPiecePlaceEnum</name>
            <comment>Set the piece-place-enum, notice that @requestLayout() will be called.
piecePlaceEnum: piece-place-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>piecePlaceEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShareLine1Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHideMoveEaseEnum</name>
            <comment>Set the ease type of movement when every boom-button is re-booming.
hideMoveEaseEnum: ease type of movement when re-booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideMoveEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>addStatesFromChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasNestedScrollingParent</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>checkLayoutParams</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>onKeyPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>findViewsWithText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>fitSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>onDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>updateViewLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>onAttachedToWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isImportantForAccessibility</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSaveInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>clearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setClipToPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setOnScrollChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnScrollChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onStartNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>callOnClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTransitionGroup</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildAt</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotCacheDrawing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateOutline</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onDrawScrollBars</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>hasTransientState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setHideDuration</name>
            <comment>Set the duration of every boom-button when re-booming.
 Notice that this is not the total duration of the re-boom animation.
 For example, if there are 5 boom-buttons, delay of re-boom animation is 100ms
 and duration of every re-boom animation is 1000ms. Then the total duration of
 all re-boom animations is 1000ms + 4 * 100ms = 1400ms.
hideDuration: duration of every boom-button when booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideDuration</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>isBackPressListened</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setMeasuredDimension</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSystemUiVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyShortcut</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHamWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShowDuration</name>
            <comment>Set the duration of every boom-button when booming.
 Notice that this is not the total duration of the boom animation.
 For example, if there are 5 boom-buttons, delay of boom animation is 100ms
 and duration of every boom animation is 1000ms. Then the total duration of
 all boom animations is 1000ms + 4 * 100ms = 1400ms.
showDuration: duration of every boom-button when booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>showDuration</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>getPointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
        </method>
        <method>
            <name>onViewAdded</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>restoreHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>detachViewFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getElevation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>announceForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>invalidateDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setFocusableInTouchMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>post</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>setClipBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getClipBounds</name>
            <comment></comment>
            <returntype>android.graphics.Rect</returntype>
        </method>
        <method>
            <name>dispatchVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>buildDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onOverScrolled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getHideRotateEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setShowRotateEaseEnum</name>
            <comment>Set the ease type of rotate-animation when every boom-button is booming.
showRotateEaseEnum: ease type of rotate-animation when booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>showRotateEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>setPieceHorizontalMargin</name>
            <comment>Set the horizontal margin between pieces(dots, blocks or hams) in BMB.
pieceHorizontalMargin: horizontal margin between pieces</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceHorizontalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>attachLayoutAnimationParameters</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPointerIcon</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.PointerIcon</type>
            </parameter>
        </method>
        <method>
            <name>getBottomFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPaddingEnd</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isInList</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getTextAlignment</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isAutoHide</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTextDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasureAllChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setPersistentDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonBottomMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShareLineLength</name>
            <comment>Set the length of share-lines in BMB, only works when piece-place-enum is Share.
shareLineLength: length of share-lines, in pixel</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLineLength</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyLongPress</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDescendantFocusability</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setCameraDistance</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>removeDetachedView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getCameraDistance</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTouchscreenBlocksFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.os.Parcelable</type>
            </parameter>
        </method>
        <method>
            <name>getBottomPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getContentDescription</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOverScrollMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>setOnTouchListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnTouchListener</type>
            </parameter>
        </method>
        <method>
            <name>getButtonEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.ButtonEnum</returntype>
        </method>
        <method>
            <name>saveHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>setRotateDegree</name>
            <comment>Set the rotate degree of rotate-animation of every boom-button.
rotateDegree: rotate degree</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rotateDegree</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>cancelDragAndDrop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTextAlignmentResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHideDuration</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>getBackgroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>setNextFocusDownId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarStyle</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotDraw</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOverlay</name>
            <comment></comment>
            <returntype>android.view.ViewGroupOverlay</returntype>
        </method>
        <method>
            <name>getClipToPadding</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getScrollBarStyle</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>invalidateChildInParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>hasFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isReBoomed</name>
            <comment>Whether the BMB has finished ReBooming.
Return type: @return:whether the BMB has finished ReBooming</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDrawForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShadowEffect</name>
            <comment>Whether BMB should have a shadow-effect.
 Notice that when you set @backgroundEffect to false, this value will set to false too.
shadowEffect: shadow-effect</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setDimColor</name>
            <comment>Set the dim-color of the background when the BMB booms.
dimColor: dim-color of background</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dimColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setButtonEnum</name>
            <comment>Set the button-enum for bmb, notice that @requestLayout() and @clearBuilders() will
 be called.
buttonEnum: button-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonEnum</name>
                <type EnumType="true">com.nightonke.boommenu.ButtonEnum</type>
            </parameter>
        </method>
        <method>
            <name>postDelayed</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>getButtonPlaceEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</returntype>
        </method>
        <method>
            <name>getShowMoveEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setAccessibilityDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.AccessibilityDelegate</type>
            </parameter>
        </method>
        <method>
            <name>getContextMenuInfo</name>
            <comment></comment>
            <returntype>android.view.ContextMenu.ContextMenuInfo</returntype>
        </method>
        <method>
            <name>setOutlineProvider</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewOutlineProvider</type>
            </parameter>
        </method>
        <method>
            <name>setBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setRippleEffect</name>
            <comment>Whether the BMB should have a ripple-effect.
 The ripple effect is disable below LOLLIPOP.
rippleEffect: ripple effect</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setButtonInclinedMargin</name>
            <comment>Set the inclined-margin between buttons.
buttonInclinedMargin: Inclined-margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonInclinedMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onProvideVirtualStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>destroyDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getLayoutParams</name>
            <comment></comment>
            <returntype>android.view.ViewGroup.LayoutParams</returntype>
        </method>
        <method>
            <name>getPieceInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollIndicators</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isShadowEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onAnimationEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setButtonLeftMargin</name>
            <comment>Set the left-alignment margin between screen and buttons.
buttonLeftMargin: Left-alignment margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonLeftMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>detachViewsFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRotationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getDimColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getRootWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
        </method>
        <method>
            <name>getRotationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>drawChild</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getButtonHorizontalMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShadowColor</name>
            <comment>Set the color of shadow.
shadowColor: color of shadow</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeViewsInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onAnimationStart</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>changed</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLongClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>getShadowOffsetX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTransitionGroup</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clearAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getOverScrollMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getParentForAccessibility</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>getButtonVerticalMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isInFragment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>verifyDrawable</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setOnClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnClickListener</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericPointerEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocusFromTouch</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getForegroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>getShadowOffsetY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onSizeChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericFocusedEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheQuality</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>bringChildToFront</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getNormalColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>offsetRectIntoDescendantCoords</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>isHovered</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>childDrawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>resolveSizeAndState</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>requestRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>measureChildWithMargins</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLocationOnScreen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setMotionEventSplittingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setShareLine2Color</name>
            <comment>Set the color of share-line 2(the below), only works when piece-place-enum is Share.
shareLine2Color: color of share-line 2</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLine2Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShowDuration</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>startDragAndDrop</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLayerType</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>startLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLayoutMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getTransitionName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>getTouchables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>setScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getButtonInclinedMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>startActionMode</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>isLaidOut</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setKeepScreenOn</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getHideMoveEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>onKeyUp</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayerType</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>buildLayer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setCacheOptimization</name>
            <comment>Whether use cache optimization to avoid multi-creating boom-buttons.
cacheOptimization: cache optimization</comment>
            <returntype>void</returntype>
            <parameter>
                <name>cacheOptimization</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getRotateDegree</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>isShown</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getClipToOutline</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>setShareLineWidth</name>
            <comment>Set the width of share-lines in BMB, only works when piece-place-enum is Share.
shareLineWidth: width of share-lines, in pixel</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLineWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isAttachedToWindow</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onScreenStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onNestedScrollAccepted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setMeasureAllChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPivotX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShadowOffsetX</name>
            <comment>Set the BMB's shadow offset in the x-axis.
shadowOffsetX: x-axis shadow offset</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPivotY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasWindowFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScaleX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onSaveInstanceState</name>
            <comment></comment>
            <returntype>android.os.Parcelable</returntype>
        </method>
        <method>
            <name>isBoomInWholeScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScaleY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onRequestSendAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>setShadowOffsetY</name>
            <comment>Set the BMB's shadow offset in the y-axis.
shadowOffsetY: y-axis shadow offset</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isChildrenDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getTextDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setForegroundGravity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusUpId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onNestedPreScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getRotation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getShareLineWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isChildrenDrawingOrderEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>combineMeasuredStates</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setHideScaleEaseEnum</name>
            <comment>Set the ease type of scale-animation when every boom-button is re-booming.
hideScaleEaseEnum: ease type of scale-animation when re-booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideScaleEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>dispatchProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutAnimationListener</name>
            <comment></comment>
            <returntype>android.view.animation.Animation.AnimationListener</returntype>
        </method>
        <method>
            <name>dispatchDrawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>scheduleLayoutAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isCancelable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLayoutTransition</name>
            <comment></comment>
            <returntype>android.animation.LayoutTransition</returntype>
        </method>
        <method>
            <name>setTransitionName</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEventPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>onCreateInputConnection</name>
            <comment></comment>
            <returntype>android.view.inputmethod.InputConnection</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.inputmethod.EditorInfo</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingTime</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>findViewWithTag</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>drawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setFadingEdgeLength</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShowDelay</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>sendAccessibilityEventUnchecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>isActivated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScaleY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getForeground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getScaleX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isAccessibilityFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>removeViews</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startDrag</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLabelFor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setMinimumWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRequestFocusInDescendants</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>onConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>performAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>onDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingRelative</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCreateContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShowMoveEaseEnum</name>
            <comment>Set the ease type of movement when every boom-button is booming.
showMoveEaseEnum: ease type of movement when booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>showMoveEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCache</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>setShadowRadius</name>
            <comment>Set the shadow-radius of BMB, please notice that the "radius" here means the extra
 radius of BMB.
 For example, if the radius of BMB is 30dp and the shadow-radius is 5dp, then the
 radius of shadow-circle behind the BMB if 35dp.
shadowRadius: extra shadow radius</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>canAnimate</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>performHapticFeedback</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>generateDefaultLayoutParams</name>
            <comment></comment>
            <returntype>android.widget.FrameLayout.LayoutParams</returntype>
        </method>
        <method>
            <name>setStaticTransformationsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setButtonBottomMargin</name>
            <comment>Set the bottom-alignment margin between screen and buttons.
buttonBottomMargin: Bottom-alignment margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonBottomMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeViewInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isAnimationCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getTranslationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getTranslationZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTag</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnContextClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnContextClickListener</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBackgroundEffect</name>
            <comment>Whether the BMB should have a background effect. Use this when you don't want the
 circle background of BMB.
 It can be useful when you want to use BMB in actionbar of in list-view.
 Please notice that, when BMB does not have a background effect, it does not
 have shadow effect, either.
backgroundEffect: background effect</comment>
            <returntype>void</returntype>
            <parameter>
                <name>backgroundEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundGravity</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isAlwaysDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getKeyDispatcherState</name>
            <comment></comment>
            <returntype>android.view.KeyEvent.DispatcherState</returntype>
        </method>
        <method>
            <name>onScrollChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>onMeasure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>getRightFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnApplyWindowInsetsListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnApplyWindowInsetsListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetLeftAndRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRootView</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>requestSendAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>getShareLine2Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDetachedFromWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setInFragment</name>
            <comment>When BMB is used in fragment, it must be setInFragment(true).
inFragment: use BMB in fragment</comment>
            <returntype>void</returntype>
            <parameter>
                <name>inFragment</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getDisplay</name>
            <comment></comment>
            <returntype>android.view.Display</returntype>
        </method>
        <method>
            <name>isPaddingOffsetRequired</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getChildStaticTransformation</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.animation.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>playSoundEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchDelegate</name>
            <comment></comment>
            <returntype>android.view.TouchDelegate</returntype>
        </method>
        <method>
            <name>generateLayoutParams</name>
            <comment></comment>
            <returntype>android.widget.FrameLayout.LayoutParams</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.AttributeSet</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getFrames</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>isOpaque</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getChildVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>isLongClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>animate</name>
            <comment></comment>
            <returntype>android.view.ViewPropertyAnimator</returntype>
        </method>
        <method>
            <name>getClipChildren</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setStateListAnimator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.StateListAnimator</type>
            </parameter>
        </method>
        <method>
            <name>getMatrix</name>
            <comment></comment>
            <returntype>android.graphics.Matrix</returntype>
        </method>
        <method>
            <name>getDotRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>jumpDrawablesToCurrentState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onStopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setDotRadius</name>
            <comment>Set the radius of dots in BMB.
dotRadius: radius of dot</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dotRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setUnableColor</name>
            <comment>Set the color of BMB at unable-state.
unableColor: the color of BMB at unable-state</comment>
            <returntype>void</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTopFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getLeftPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setRotation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>addViewInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>notifySubtreeAccessibilityStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>scrollTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearChildFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutAnimationListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation.AnimationListener</type>
            </parameter>
        </method>
        <method>
            <name>setPivotX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPivotY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overScrollBy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg8</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>updateDragShadow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
        </method>
        <method>
            <name>startNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setHideDelay</name>
            <comment>Delay of every boom-button.
hideDelay: delay of every boom-button</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideDelay</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotCacheDrawing</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>focusableViewAvailable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>measureChild</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>computeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHideRotateEaseEnum</name>
            <comment>Set the ease type of rotate-animation when every boom-button is re-booming.
hideRotateEaseEnum: ease type of rotate-animation when re-booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideRotateEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>getFocusedChild</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>isScrollContainer</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setHamWidth</name>
            <comment>Set the width of hams in BMB.
hamWidth: width of ham</comment>
            <returntype>void</returntype>
            <parameter>
                <name>hamWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getScrollX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTopPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getScrollY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeAllViews</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isDirty</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setForegroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isSaveEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getResources</name>
            <comment></comment>
            <returntype>android.content.res.Resources</returntype>
        </method>
        <method>
            <name>setOnKeyListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnKeyListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetTopAndBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPieceHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setWillNotDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isSelected</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setHighlightedColor</name>
            <comment>Set the color of BMB at highlighted-state.
highlightedColor: the color of BMB at highlighted-state</comment>
            <returntype>void</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getFocusedRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowSystemUiVisiblityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowAttachCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAutoHide</name>
            <comment>Whether the BMB is auto-hide. If the BMB is auto-hide, then when after the boom
 animation of booming, you can click one of the boom-buttons to re-boom BMB.
autoHide: whether the BMB is auto-hide</comment>
            <returntype>void</returntype>
            <parameter>
                <name>autoHide</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>cancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setMinimumHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>getPersistentDrawingCache</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setEnable</name>
            <comment>Set enable attribute of the boom-button at index.
index: index of the boom-button
enable: whether the boom-button should be enable</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>enable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPieceVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getButtonPlaceAlignmentEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</returntype>
        </method>
        <method>
            <name>setDescendantFocusability</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHideDelay</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>onInterceptHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getShowScaleEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>reboomImmediately</name>
            <comment>Re-boom the BMB with duration 0!</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setButtonVerticalMargin</name>
            <comment>Set the vertical-margin between buttons.
buttonVerticalMargin: vertical-margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonVerticalMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>forceLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setBottomHamButtonTopMargin</name>
            <comment>Set the top-margin of bottom ham-boom-button. This method is used when the bottom
 ham-boom-button has different meaning compared with others. For example, the bottom
 ham-boom-button maybe used as a "cancel" selection.
bottomHamButtonTopMargin: top-margin of bottom ham-boom-button</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bottomHamButtonTopMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchscreenBlocksFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestDisallowInterceptTouchEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onKeyMultiple</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onWindowSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityNodeInfo</type>
            </parameter>
        </method>
        <method>
            <name>setLabelFor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>focusSearch</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>endViewTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setShowDelay</name>
            <comment>Delay of every boom-button.
showDelay: delay of every boom-button</comment>
            <returntype>void</returntype>
            <parameter>
                <name>showDelay</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>getOutlineProvider</name>
            <comment></comment>
            <returntype>android.view.ViewOutlineProvider</returntype>
        </method>
        <method>
            <name>getNextFocusForwardId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLocalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>canResolveTextDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getImportantForAccessibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>gatherTransparentRegion</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Region</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setBoomInWholeScreen</name>
            <comment>Whether the BMB should boom in the whole screen.
 If this value is false, then BMB will boom its boom-buttons to its parent-view.
boomInWholeScreen: boom in the whole screen</comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomInWholeScreen</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.LayoutAnimationController</returntype>
        </method>
        <method>
            <name>dispatchKeyShortcutEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.LayoutTransition</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getChildMeasureSpec</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getOnFocusChangeListener</name>
            <comment></comment>
            <returntype>android.view.View.OnFocusChangeListener</returntype>
        </method>
        <method>
            <name>isFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTextDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusDownId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>measure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setClipToOutline</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOrderEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</returntype>
        </method>
        <method>
            <name>setNextFocusRightId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLeftFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setButtonPlaceEnum</name>
            <comment>Set the button-place-enum.
buttonPlaceEnum: button-place-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonPlaceEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</type>
            </parameter>
        </method>
        <method>
            <name>removeAllViewsInLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>unscheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>onFinishInflate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isBackgroundEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestApplyInsets</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>awakenScrollBars</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>generateViewId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeViewAt</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>boom</name>
            <comment>Boom the BMB!</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHovered</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startViewTransition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setClipChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getStateListAnimator</name>
            <comment></comment>
            <returntype>android.animation.StateListAnimator</returntype>
        </method>
        <method>
            <name>onVisibilityAggregated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>isRippleEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onSetAlpha</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingStart</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>getMeasuredWidthAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAddStatesFromChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setImportantForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>shouldDelayChildPressedState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>findFocus</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>dispatchFreezeSelfOnly</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>addOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>canScrollHorizontally</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonRadius</name>
            <comment>Set the radius of BMB, if you use this method to set the size of BMB,
 then you should set the width and height of BMB in .xml file to "wrap-content".
buttonRadius: radius of BMB</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHitRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>removeOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>drawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>layout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceHasOverlappingRendering</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getShareLineLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getBaseline</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setChildrenDrawingOrderEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getGlobalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheQuality</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isHardwareAccelerated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getConsiderGoneChildrenWhenMeasuring</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestUnbufferedDispatch</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setHasTransientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>scheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>addOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>getVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHorizontalScrollbarHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>computeHorizontalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>findViewById</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isCacheOptimization</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getAccessibilityClassName</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOnSystemUiVisibilityChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnSystemUiVisibilityChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>removeCallbacks</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>performLongClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getUnableColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setRotationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRotationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>clearBuilders</name>
            <comment>Remove all builders, notice that @needToLayout will NOT be called.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>requestFitSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setButtonHorizontalMargin</name>
            <comment>Set the horizontal-margin between buttons.
buttonHorizontalMargin: horizontal-margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonHorizontalMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setLayerPaint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>showContextMenu</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOnBoomListener</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.OnBoomListener</returntype>
        </method>
        <method>
            <name>dispatchThawSelfOnly</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>measureChildren</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPieceInclinedMargin</name>
            <comment>Set the inclined margin between pieces(dots, blocks or hams) in BMB.
pieceInclinedMargin: inclined margin between pieces</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceInclinedMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasOnClickListeners</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setOnHierarchyChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.OnHierarchyChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>setFocusable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setBoomEnum</name>
            <comment>Set the boom-enum for BMB.
boomEnum: boom-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</type>
            </parameter>
        </method>
        <method>
            <name>attachViewToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>setScrollContainer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getBackgroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>isBoomed</name>
            <comment>Whether the BMB has finished booming.
Return type: @return:whether the BMB has finished booming</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPieceVerticalMargin</name>
            <comment>Set the vertical margin between pieces(dots, blocks or hams) in BMB.
pieceVerticalMargin: vertical margin between pieces</comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceVerticalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>addFocusables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isContextClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>computeVerticalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getBuilders</name>
            <comment>Get the array of builders.
Return type: @return:array of builders</comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>setButtonPlaceAlignmentEnum</name>
            <comment>Set the button-place-alignment-enum.
buttonPlaceAlignmentEnum: button-place-alignment-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonPlaceAlignmentEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRightMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getHighlightedColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setOnGenericMotionListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnGenericMotionListener</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusLeftId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnBoomListener</name>
            <comment>Set the @OnBoomListener of BMB.
onBoomListener: OnBoomListener</comment>
            <returntype>void</returntype>
            <parameter>
                <name>onBoomListener</name>
                <type>com.nightonke.boommenu.OnBoomListener</type>
            </parameter>
        </method>
        <method>
            <name>setOrderEnum</name>
            <comment>Set the order-enum for BMB.
orderEnum: order-enum</comment>
            <returntype>void</returntype>
            <parameter>
                <name>orderEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</type>
            </parameter>
        </method>
        <method>
            <name>onRtlPropertiesChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutParams</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>computeSystemWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalScrollbarWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setContentDescription</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setOnCreateContextMenuListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnCreateContextMenuListener</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>offsetDescendantRectToMyCoords</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setAnimationCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isPaddingRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setButtonTopMargin</name>
            <comment>Set the top-alignment margin between screen and buttons.
buttonTopMargin: Top-alignment margin</comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonTopMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslationZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setElevation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>canResolveLayoutDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFrames</name>
            <comment>Set the animation-frames for every boom-button animation. The higher, the animations
 more continue.
frames: frames for every boom-button animation</comment>
            <returntype>void</returntype>
            <parameter>
                <name>frames</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusUpId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTranslationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getDefaultSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isTemporarilyDetached</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>dispatchUnhandledMove</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getBoomEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</returntype>
        </method>
        <method>
            <name>setForegroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>removeBuilder</name>
            <comment>Remove a builder, notice that @needToLayout will be called.
builder: builder</comment>
            <returntype>void</returntype>
            <parameter>
                <name>builder</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>mergeDrawableStates</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getViewTreeObserver</name>
            <comment></comment>
            <returntype>android.view.ViewTreeObserver</returntype>
        </method>
        <method>
            <name>setShowScaleEaseEnum</name>
            <comment>Set the ease type of scale-animation when every boom-button is booming.
showScaleEaseEnum: ease type of scale-animation when booming</comment>
            <returntype>void</returntype>
            <parameter>
                <name>showScaleEaseEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
        <method>
            <name>getChildDrawingOrder</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>canScrollVertically</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContextClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onViewRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>isSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSolidColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAlpha</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getSuggestedMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startActionModeForChild</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>getBottomHamButtonTopMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>requestTransparentRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>getRightPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getShowRotateEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>cancelLongPress</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInEditMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBackPressListened</name>
            <comment>Whether BMB will reboom when the back-key is pressed.
backPressListened: whether BMB will reboom when the back-key is pressed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>backPressListened</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setTouchDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.TouchDelegate</type>
            </parameter>
        </method>
        <method>
            <name>boomImmediately</name>
            <comment>Boom the BMB with duration 0!</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>detachAllViewsFromParent</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isMotionEventSplittingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onHoverChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusRightId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>requestChildRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusForwardId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>requestChildFocus</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>childHasTransientStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onKeyDown</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>keyCode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onInterceptTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getWindowSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setInList</name>
            <comment>When BMB is used in list-view, it must be setInList(true).
inList: use BMB in list-view</comment>
            <returntype>void</returntype>
            <parameter>
                <name>inList</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getLocationInWindow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setOnHoverListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnHoverListener</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityNodeProvider</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeProvider</returntype>
        </method>
        <method>
            <name>recomputeViewAttributes</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>reboom</name>
            <comment>Re-boom the BMB!</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setBuilder</name>
            <comment>Set a builder at index, notice that @needToLayout will be called.
index: index
builder: builder</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>builder</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeInfo</returntype>
        </method>
        <method>
            <name>onNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>setChildrenDrawnWithCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusLeftId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>checkInputConnectionProxy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>debug</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCheckIsTextEditor</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setNormalColor</name>
            <comment>Set the color of BMB at normal-state.
normalColor: the color of BMB at normal-state</comment>
            <returntype>void</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setFitsSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>createContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addTouchables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>getX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShareLine1Color</name>
            <comment>Set the color of share-line 1(the above), only works when piece-place-enum is Share.
shareLine1Color: color of share-line 1</comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLine1Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBuilders</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>builders</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>getShadowColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>canResolveTextAlignment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchNestedPreScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
        </method>
        <method>
            <name>getBackground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getFitsSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowId</name>
            <comment></comment>
            <returntype>android.view.WindowId</returntype>
        </method>
        <field>
            <name>SCROLL_INDICATOR_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_FORWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE_STICKY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LIGHT_STATUS_BAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_GRAVITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_ASSERTIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_WRITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_HARDWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_TOO_SMALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>KEEP_SCREEN_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INVISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_LOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_BEFORE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>CLIP_TO_PADDING_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_SOFTWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_MODE_CLIP_BOUNDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_OPAQUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_UP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_CONTENT_DESCRIPTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_NO_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>EMPTY_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSABLES_ALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_STABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_DOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BACKWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_HIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_HEIGHT_STATE_SHIFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_AFTER_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TRANSLATION_Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>TRANSLATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TRANSLATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>PERSISTENT_ALL_CACHES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_POLITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALPHA</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BLOCK_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_READ</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATUS_BAR_HIDDEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SOUND_EFFECTS_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_LAYOUT_FLAGS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAPTIC_FEEDBACK_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LOW_PROFILE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_MODE_OPTICAL_BOUNDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSABLES_TOUCH_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_OFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>STATUS_BAR_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_ANY_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_SCROLLING_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>MEASURED_SIZE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PERSISTENT_ANIMATION_CACHE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_YES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VIEW_LOG_TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.ButtonEnum</name>
        <comment>Created by Weiping Huang at 01:21 on 16/11/7
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.ButtonEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.ButtonEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.ButtonEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.OnBoomListenerAdapter</name>
        <comment>Created by Weiping Huang at 00:23 on 16/11/29
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>onBoomDidHide</name>
            <comment>When the BMB finishes hide animations.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onBoomWillHide</name>
            <comment>When the BMB is going to hide its boom-buttons.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onBackgroundClick</name>
            <comment>When the background of boom-buttons is clicked.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onClicked</name>
            <comment>When one of the boom-button is clicked.
index: index of the clicked boom-button
boomButton: the clicked boom-button</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>boomButton</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButton</type>
            </parameter>
        </method>
        <method>
            <name>onBoomWillShow</name>
            <comment>When the BMB is going to show its boom-buttons.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onBoomDidShow</name>
            <comment>When the BMB finished boom animations.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.R</name>
        <owner>process</owner>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.dimen</name>
        <owner>process</owner>
        <field>
            <name>default_bmb_pieceHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_pieceInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hamWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_bottomHamButtonTopMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonBottomMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shadow_offset_x</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_sharedLineLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shadow_offset_y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonTopMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_pieceVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonRightMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_dotRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hamHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shareLineWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_button_radius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonLeftMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shadow_radius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.layout</name>
        <owner>process</owner>
        <field>
            <name>bmb_ham_button</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>bmb_text_outside_circle_button</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>bmb</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>bmb_simple_circle_button</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>bmb_text_inside_circle_button</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.color</name>
        <owner>process</owner>
        <field>
            <name>default_bmb_shareLine1Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_dimColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_unable_color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_highlighted_color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shadow_color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_normal_color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shareLine2Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.styleable</name>
        <owner>process</owner>
        <field>
            <name>BoomMenuButton_bmb_hideScaleEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_sharedLineLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_dimColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_piecePlaceEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonLeftMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_boomInWholeScreen</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hideDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_inList</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shadowEffect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_boomEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hideMoveEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_showRotateEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_inFragment</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_autoHide</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_dotRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_frames</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_pieceHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shareLine2Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonBottomMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_cacheOptimization</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hamWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonPlaceEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_bottomHamButtonTopMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_showScaleEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hideDelay</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_cancelable</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonPlaceAlignmentEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_rippleEffect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_pieceVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shareLineWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_normalColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_showMoveEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_backPressListened</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shadowOffsetX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shadowOffsetY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shadowColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hamHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_hideRotateEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonTopMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shadowRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_backgroundEffect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_buttonRightMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_showDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_unableColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_highlightedColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_pieceInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_shareLine1Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_showDelay</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_orderEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BoomMenuButton_bmb_rotateDegree</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.bool</name>
        <owner>process</owner>
        <field>
            <name>default_bmb_cacheOptimization</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_boomInWholeScreen</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_autoHide</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_backPressListened</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_shadow_effect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_background_effect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_cancelable</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_ripple_effect</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_inFragment</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_inList</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.integer</name>
        <owner>process</owner>
        <field>
            <name>default_bmb_hideMoveEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hideScaleEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_frames</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_showScaleEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonPlaceAlignmentEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_pieceEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hideDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_showDelay</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_orderEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_button_enum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_boomEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_buttonPlaceEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_showMoveEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hideRotateEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_showRotateEaseEnum</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_hideDelay</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_showDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>default_bmb_rotateDegree</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.drawable</name>
        <owner>process</owner>
        <field>
            <name>piece_dot</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>shape_oval_normal</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>shape_rectangle_normal</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>piece_ham</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.R.id</name>
        <owner>process</owner>
        <field>
            <name>button</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>layout</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>shadow</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.Util</name>
        <comment>Created by Weiping Huang at 01:12 on 2016/3/19
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getDimenOffset</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>defaultId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>theme</name>
                <type>android.content.res.Resources.Theme</type>
            </parameter>
        </method>
        <method>
            <name>getLighterColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>distance</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>a</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>b</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>getDimenSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>defaultId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRectangleDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.GradientDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>cornerRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>theme</name>
                <type>android.content.res.Resources.Theme</type>
            </parameter>
        </method>
        <method>
            <name>getSystemDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRectangleBitmapDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>cornerRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getOvalDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.GradientDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getOvalStateListBitmapDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.StateListDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pointInView</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>point</name>
                <type>android.graphics.PointF</type>
            </parameter>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>setDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getOvalBitmapDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getInt</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>defaultId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDarkerColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRectangleStateListGradientDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.StateListDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>cornerRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dp2px</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dp</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getOvalStateListGradientDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.StateListDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getBoolean</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>typedArray</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>defaultId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Util</returntype>
        </method>
        <method>
            <name>getRectangleStateListBitmapDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.StateListDrawable</returntype>
            <parameter>
                <name>view</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>cornerRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.AnimationManager</name>
        <comment>Created by Weiping Huang at 03:27 on 16/7/26
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>rotate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomButton</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButton</type>
            </parameter>
            <parameter>
                <name>delay</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>interpolator</name>
                <type>android.animation.TimeInterpolator</type>
            </parameter>
            <parameter>
                <name>degrees</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>calculateHideXY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>frames</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>startPosition</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>endPosition</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>xs</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>ys</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>getOrderIndex</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>orderEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Animation.AnimationManager</returntype>
        </method>
        <method>
            <name>animate</name>
            <comment></comment>
            <returntype>android.animation.ObjectAnimator</returntype>
            <parameter>
                <name>target</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>property</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>delay</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>duration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>interpolator</name>
                <type>android.animation.TimeInterpolator</type>
            </parameter>
            <parameter>
                <name>listenerAdapter</name>
                <type>android.animation.AnimatorListenerAdapter</type>
            </parameter>
            <parameter>
                <name>values</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>calculateShowXY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>frames</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>startPosition</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>endPosition</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>xs</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>ys</name>
                <type>float[]</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.BoomEnum</name>
        <comment>Created by Weiping Huang at 02:04 on 2016/3/19
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.BoomEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.Ease</name>
        <comment>Created by Weiping Huang at 01:41 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getInterpolation</name>
            <comment></comment>
            <returntype>float</returntype>
            <parameter>
                <name>offset</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Animation.Ease</returntype>
            <parameter>
                <name>easeEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.EaseEnum</name>
        <comment>Created by Weiping Huang at 01:43 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.HideRgbEvaluator</name>
        <comment>Created by Weiping Huang at 01:12 on 16/12/14
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Animation.HideRgbEvaluator</returntype>
        </method>
        <method>
            <name>evaluate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>fraction</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>startValue</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>endValue</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.OrderEnum</name>
        <comment>Created by Weiping Huang at 02:05 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.OrderEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.ShareLinesView</name>
        <comment>Created by Weiping Huang at 01:21 on 16/12/2
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getHorizontalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>setOnFocusChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnFocusChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onResolvePointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnLongClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLongClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setOnDragListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnDragListener</type>
            </parameter>
        </method>
        <method>
            <name>getHandler</name>
            <comment></comment>
            <returntype>android.os.Handler</returntype>
        </method>
        <method>
            <name>isNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTextAlignment</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimationDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getScrollIndicators</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLayoutDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusableInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>stopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onCreateDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLine1Color</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>line1Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addChildrenForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>dispatchPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>refreshDrawableState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isLayoutRequested</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getKeepScreenOn</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onFilterTouchEventForSecurity</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>requestLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSaveEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLayoutDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getApplicationWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>isInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getMeasuredHeightAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performContextClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getFocusables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibleDisplayFrame</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getSuggestedMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>performClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>hasNestedScrollingParent</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onKeyPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>fitSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>findViewsWithText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>onDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>onAttachedToWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isImportantForAccessibility</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSaveInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>clearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOnScrollChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnScrollChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>callOnClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>willNotCacheDrawing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateOutline</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onDrawScrollBars</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>hasTransientState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>setMeasuredDimension</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSystemUiVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyShortcut</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getPointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
        </method>
        <method>
            <name>onProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>restoreHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getElevation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>announceForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>invalidateDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setFocusableInTouchMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>post</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>setClipBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getClipBounds</name>
            <comment></comment>
            <returntype>android.graphics.Rect</returntype>
        </method>
        <method>
            <name>isSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>buildDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onOverScrolled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPointerIcon</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.PointerIcon</type>
            </parameter>
        </method>
        <method>
            <name>getBottomFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPaddingEnd</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTextAlignment</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTextDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onKeyLongPress</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setCameraDistance</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getCameraDistance</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>onRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.os.Parcelable</type>
            </parameter>
        </method>
        <method>
            <name>getBottomPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getContentDescription</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOverScrollMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>setOnTouchListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnTouchListener</type>
            </parameter>
        </method>
        <method>
            <name>saveHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>cancelDragAndDrop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTextAlignmentResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBackgroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>setNextFocusDownId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarStyle</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotDraw</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOverlay</name>
            <comment></comment>
            <returntype>android.view.ViewOverlay</returntype>
        </method>
        <method>
            <name>getScrollBarStyle</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>hasFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDrawForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postDelayed</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.AccessibilityDelegate</type>
            </parameter>
        </method>
        <method>
            <name>getContextMenuInfo</name>
            <comment></comment>
            <returntype>android.view.ContextMenu.ContextMenuInfo</returntype>
        </method>
        <method>
            <name>setOutlineProvider</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewOutlineProvider</type>
            </parameter>
        </method>
        <method>
            <name>setBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onProvideVirtualStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>destroyDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getLayoutParams</name>
            <comment></comment>
            <returntype>android.view.ViewGroup.LayoutParams</returntype>
        </method>
        <method>
            <name>setScrollIndicators</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onAnimationEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRotationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getRootWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
        </method>
        <method>
            <name>getRotationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onAnimationStart</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLongClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>clearAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getOverScrollMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getParentForAccessibility</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>verifyDrawable</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setOnClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericPointerEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocusFromTouch</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getForegroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>onSizeChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheQuality</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchGenericFocusedEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isHovered</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>resolveSizeAndState</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>requestRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getLocationOnScreen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>startDragAndDrop</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLayerType</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getTransitionName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>getTouchables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>setScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startActionMode</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>isLaidOut</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setKeepScreenOn</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onKeyUp</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayerType</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>buildLayer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setData</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>piecePositions</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>dotRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>showDuration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>showDelay</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>hideDuration</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>hideDelay</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isShown</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getClipToOutline</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>isAttachedToWindow</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onScreenStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPivotX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPivotY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasWindowFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScaleX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onSaveInstanceState</name>
            <comment></comment>
            <returntype>android.os.Parcelable</returntype>
        </method>
        <method>
            <name>setScaleY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getTextDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setNextFocusUpId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForegroundGravity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRotation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>combineMeasuredStates</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDrawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setTransitionName</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEventPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>onCreateInputConnection</name>
            <comment></comment>
            <returntype>android.view.inputmethod.InputConnection</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.inputmethod.EditorInfo</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingTime</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>findViewWithTag</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>drawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setFadingEdgeLength</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEventUnchecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>isActivated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScaleY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getForeground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getScaleX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isAccessibilityFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>startDrag</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLabelFor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setMinimumWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>performAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>onDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingRelative</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCreateContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCache</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>computeVerticalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performHapticFeedback</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getTranslationZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTag</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnContextClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnContextClickListener</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundGravity</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getKeyDispatcherState</name>
            <comment></comment>
            <returntype>android.view.KeyEvent.DispatcherState</returntype>
        </method>
        <method>
            <name>onScrollChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>getTag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>onMeasure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRightFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnApplyWindowInsetsListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnApplyWindowInsetsListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetLeftAndRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRootView</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>isClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDetachedFromWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getDisplay</name>
            <comment></comment>
            <returntype>android.view.Display</returntype>
        </method>
        <method>
            <name>isPaddingOffsetRequired</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>playSoundEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchDelegate</name>
            <comment></comment>
            <returntype>android.view.TouchDelegate</returntype>
        </method>
        <method>
            <name>getMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>isOpaque</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isLongClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>animate</name>
            <comment></comment>
            <returntype>android.view.ViewPropertyAnimator</returntype>
        </method>
        <method>
            <name>setStateListAnimator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.StateListAnimator</type>
            </parameter>
        </method>
        <method>
            <name>getMatrix</name>
            <comment></comment>
            <returntype>android.graphics.Matrix</returntype>
        </method>
        <method>
            <name>isHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>jumpDrawablesToCurrentState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getTopFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getLeftPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setRotation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPivotX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPivotY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overScrollBy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg8</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>updateDragShadow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
        </method>
        <method>
            <name>startNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotCacheDrawing</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>computeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isScrollContainer</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getScrollX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTopPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getScrollY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isDirty</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setForegroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isSaveEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getResources</name>
            <comment></comment>
            <returntype>android.content.res.Resources</returntype>
        </method>
        <method>
            <name>setOnKeyListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnKeyListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetTopAndBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isSelected</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getFocusedRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowSystemUiVisiblityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowAttachCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setMinimumHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>getWindowVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyMultiple</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onWindowSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityNodeInfo</type>
            </parameter>
        </method>
        <method>
            <name>setLabelFor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>focusSearch</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getOutlineProvider</name>
            <comment></comment>
            <returntype>android.view.ViewOutlineProvider</returntype>
        </method>
        <method>
            <name>getNextFocusForwardId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLocalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>canResolveTextDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getImportantForAccessibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDrawingRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyShortcutEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getOnFocusChangeListener</name>
            <comment></comment>
            <returntype>android.view.View.OnFocusChangeListener</returntype>
        </method>
        <method>
            <name>isFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTextDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusDownId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>measure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setClipToOutline</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setNextFocusRightId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLeftFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>unscheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>onFinishInflate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>requestApplyInsets</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>awakenScrollBars</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>generateViewId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHovered</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getStateListAnimator</name>
            <comment></comment>
            <returntype>android.animation.StateListAnimator</returntype>
        </method>
        <method>
            <name>onVisibilityAggregated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onSetAlpha</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingStart</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>getMeasuredWidthAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setImportantForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>addOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>findFocus</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>canScrollHorizontally</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHitRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>removeOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>drawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceHasOverlappingRendering</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>layout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getBaseline</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getGlobalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheQuality</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isHardwareAccelerated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestUnbufferedDispatch</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setHasTransientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>scheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>addOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>getVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHorizontalScrollbarHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>computeHorizontalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>findViewById</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityClassName</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOnSystemUiVisibilityChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnSystemUiVisibilityChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>removeCallbacks</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>performLongClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setRotationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRotationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>requestFitSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLayerPaint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>showContextMenu</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onCancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasOnClickListeners</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFocusable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollContainer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getBackgroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>setAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>addFocusables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isContextClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>computeVerticalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setOnGenericMotionListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnGenericMotionListener</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusLeftId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRtlPropertiesChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutParams</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>computeSystemWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalScrollbarWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>place</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContentDescription</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setOnCreateContextMenuListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnCreateContextMenuListener</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isPaddingRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTranslationZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setElevation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>canResolveLayoutDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusUpId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTranslationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getDefaultSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isTemporarilyDetached</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>dispatchUnhandledMove</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForegroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>mergeDrawableStates</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getViewTreeObserver</name>
            <comment></comment>
            <returntype>android.view.ViewTreeObserver</returntype>
        </method>
        <method>
            <name>setLine2Color</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>line2Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>canScrollVertically</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContextClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSolidColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAlpha</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getSuggestedMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRightPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelLongPress</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInEditMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setTouchDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.TouchDelegate</type>
            </parameter>
        </method>
        <method>
            <name>onHoverChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusRightId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setNextFocusForwardId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onKeyDown</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getWindowSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLineWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>lineWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getLocationInWindow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setOnHoverListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnHoverListener</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityNodeProvider</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeProvider</returntype>
        </method>
        <method>
            <name>setScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeInfo</returntype>
        </method>
        <method>
            <name>getNextFocusLeftId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>checkInputConnectionProxy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onCheckIsTextEditor</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setFitsSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>createContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addTouchables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>getX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>canResolveTextAlignment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchNestedPreScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
        </method>
        <method>
            <name>getBackground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getFitsSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowId</name>
            <comment></comment>
            <returntype>android.view.WindowId</returntype>
        </method>
        <field>
            <name>SCROLL_INDICATOR_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_FORWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE_STICKY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LIGHT_STATUS_BAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_GRAVITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_ASSERTIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_WRITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_HARDWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_TOO_SMALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>KEEP_SCREEN_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INVISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_LOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_SOFTWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_OPAQUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_UP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_CONTENT_DESCRIPTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>EMPTY_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSABLES_ALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_STABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_DOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BACKWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_HIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_HEIGHT_STATE_SHIFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TRANSLATION_Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TRANSLATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TRANSLATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_POLITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALPHA</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_READ</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATUS_BAR_HIDDEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SOUND_EFFECTS_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_LAYOUT_FLAGS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAPTIC_FEEDBACK_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LOW_PROFILE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSABLES_TOUCH_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_OFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>STATUS_BAR_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_ANY_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>MEASURED_SIZE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_YES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VIEW_LOG_TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.Animation.ShowRgbEvaluator</name>
        <comment>Created by Weiping Huang at 01:12 on 16/12/14
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Animation.ShowRgbEvaluator</returntype>
        </method>
        <method>
            <name>evaluate</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>fraction</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>startValue</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>endValue</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</name>
        <comment>Created by Weiping Huang at 02:20 on 16/11/18
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>pieceColor</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>setUnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</name>
        <comment>Created by Weiping Huang at 20:36 on 16/11/19
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</name>
        <comment>Created by Weiping Huang at 20:34 on 16/11/19
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>buttonNumber</name>
            <comment>Get the number of boom-button for button-place-enum.
 -1 for unknown, and MAX_INT for horizontal or vertical place-enum.
Return type: @return:the number of boom-button</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.ButtonPlaceManager</name>
        <comment>Created by Weiping Huang at 20:26 on 16/11/19
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getCircleButtonPositions</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>placeEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</type>
            </parameter>
            <parameter>
                <name>alignmentEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonNumber</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buttonHorizontalMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonVerticalMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonInclinedMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonTopMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonBottomMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonLeftMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonRightMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getHamButtonPositions</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>placeEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</type>
            </parameter>
            <parameter>
                <name>alignmentEnum</name>
                <type EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>buttonWidth</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonHeight</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonNumber</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buttonHorizontalMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonVerticalMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonTopMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonBottomMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonLeftMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>buttonRightMargin</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottomHamButtonTopMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.BoomButtons.ButtonPlaceManager</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.HamButton.Builder</name>
        <shortname>HamButtonBuilder</shortname>
        <comment>Builder of ham boom button.
 You can use this builder to set:
 rotateImage,
 shadowEffect,
 shadowOffsetX,
 shadowOffsetY,
 shadowRadius,
 shadowColor,
 normalImageRes,
 highlightedImageRes,
 unableImageRes,
 normalImageDrawable,
 highlightedImageDrawable,
 unableImageRes,
 imageRect,
 imagePadding,
 normalTextRes,
 highlightedTextRes,
 unableTextRes,
 normalText,
 highlightedText,
 unableText,
 normalTextColor,
 highlightedTextColor,
 unableTextColor,
 textRect,
 textPadding,
 typeface,
 maxLines,
 textGravity,
 ellipsize,
 textSize,
 subNormalTextRes,
 subHighlightedTextRes,
 subUnableTextRes,
 subNormalText,
 subHighlightedText,
 subUnableText,
 subNormalTextColor,
 subHighlightedTextColor
 subUnableTextColor,
 subTextRect,
 subTextPadding,
 subTypeface,
 subMaxLines,
 subTextGravity,
 subEllipsize,
 subTextSize,
 rippleEffect,
 normalColor,
 highlightedColor,
 rippleColor,
 unableColor,
 unable,
 buttonWidth,
 buttonHeight.</comment>
        <owner>process</owner>
        <method>
            <name>buttonHeight</name>
            <comment>Set the height of boom-button, in pixel.
buttonHeight: height of button
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>buttonHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedTextRes</name>
            <comment>Set the text resource when boom-button is at highlighted-state.
highlightedTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subNormalText</name>
            <comment>Set the sub-text when boom-button is at normal-state.
subNormalText: sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subNormalText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>subHighlightedTextColor</name>
            <comment>Set the color of sub-text when boom-button is at highlighted-state.
subHighlightedTextColor: color of sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subHighlightedTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subTextPadding</name>
            <comment>Set the padding of sub-text.
 By this method, you can control the padding in the sub-text-view.
 For instance, builder.textPadding(new Rect(10, 10, 10, 10)) will make the
 sub-text-view content 10-pixel padding to itself.
subTextPadding: the sub-text padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subTextPadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>subNormalTextRes</name>
            <comment>Set the sub-text resource when boom-button is at normal-state.
subNormalTextRes: sub-text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subNormalTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextColor</name>
            <comment>Set the color of text when boom-button is at normal-state.
normalTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>containsSubText</name>
            <comment>Whether the ham-button contains a sub text-view.
containsSubText: contains a sub text-view or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>containsSubText</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>unable</name>
            <comment>Whether the boom-button is unable, default value is false.
unable: the unable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>buttonCornerRadius</name>
            <comment>Set the corner-radius of button.
buttonCornerRadius: corner-radius of button
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>buttonCornerRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalText</name>
            <comment>Set the text when boom-button is at normal-state.
normalText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>subTextRect</name>
            <comment>Set the rect of sub-text.
 By this method, you can set the position and size of the sub-text-view in boom-button.
 For example, builder.textRect(new Rect(0, 50, 100, 100)) will make the
 sub-text-view's size to be 100 * 50 and margin-top to be 50 pixel.
subTextRect: the sub-text rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subTextRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>subTextGravity</name>
            <comment>Set the gravity of sub-text-view.
subTextGravity: gravity, for example, Gravity.CENTER
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subTextGravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subNormalTextColor</name>
            <comment>Set the color of sub-text when boom-button is at normal-state.
subNormalTextColor: color of sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subNormalTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowColor</name>
            <comment>Set the color of the shadow of boom-button.
shadowColor: the shadow color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textRect</name>
            <comment>Set the rect of text.
 By this method, you can set the position and size of the text-view in boom-button.
 For example, builder.textRect(new Rect(0, 50, 100, 100)) will make the
 text-view's size to be 100 * 50 and margin-top to be 50 pixel.
textRect: the text rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>textRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>buttonWidth</name>
            <comment>Set the width of boom-button, in pixel.
buttonWidth: width of button
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>buttonWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonHeight</name>
            <comment>Get the height of boom-button
Return type: @return:height of button</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ellipsize</name>
            <comment>Set the ellipsize of the text-view.
ellipsize: ellipsize
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>ellipsize</name>
                <type EnumType="true">android.text.TextUtils.TruncateAt</type>
            </parameter>
        </method>
        <method>
            <name>subEllipsize</name>
            <comment>Set the ellipsize of the sub-text-view.
subEllipsize: ellipsize
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subEllipsize</name>
                <type EnumType="true">android.text.TextUtils.TruncateAt</type>
            </parameter>
        </method>
        <method>
            <name>normalImageRes</name>
            <comment>Set the image resource when boom-button is at normal-state.
normalImageRes: the normal image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableColor</name>
            <comment>The color of boom-button when it is at unable-state.
unableColor: the unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateImage</name>
            <comment>Whether the image-view should rotate.
rotateImage: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>rotateImage</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>unableTextRes</name>
            <comment>Set the text resource when boom-button is at unable-state.
unableTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>index</name>
            <comment>Set the index of the boom-button, don't use this method.
index: the index
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowEffect</name>
            <comment>Whether the boom-button should have a shadow effect.
shadowEffect: have shadow effect or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>subTextSize</name>
            <comment>Set the text size of the sub-text-view.
subTextSize: size of sub-text, in sp
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subTextSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowCornerRadius</name>
            <comment>Set the corner-radius of the shadow.
shadowCornerRadius: corner-radius of the shadow
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowCornerRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>imagePadding</name>
            <comment>Set the padding of image.
 By this method, you can control the padding in the image-view.
 For instance, builder.imagePadding(new Rect(10, 10, 10, 10)) will make the
 image-view content 10-pixel padding to itself.
imagePadding: the image padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>imagePadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>unableText</name>
            <comment>Set the text when boom-button is at unable-state.
unableText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>typeface</name>
            <comment>Set the typeface of the text.
typeface: typeface
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>typeface</name>
                <type>android.graphics.Typeface</type>
            </parameter>
        </method>
        <method>
            <name>unableColorRes</name>
            <comment>The resource of color of boom-button when it is at unable-state.
unableColorRes: resource of unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowRadius</name>
            <comment>Set the radius of shadow of the boom-button.
shadowRadius: the shadow radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>maxLines</name>
            <comment>Set the maximum of the lines of text-view.
maxLines: maximum lines
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>maxLines</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rippleEffect</name>
            <comment>Whether the boom-button should have a ripple effect.
rippleEffect: the ripple effect
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageRes</name>
            <comment>Set the image resource when boom-button is at highlighted-state.
highlightedImageRes: the highlighted image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableTextColor</name>
            <comment>Set the color of text when boom-button is at unable-state.
unableTextColor: color the text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetX</name>
            <comment>Set the horizontal shadow-offset of the boom-button.
shadowOffsetX: the shadow offset x
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetY</name>
            <comment>Set the vertical shadow-offset of the boom-button.
shadowOffsetY: the shadow offset y
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalImageDrawable</name>
            <comment>Set the image drawable when boom-button is at normal-state.
normalImageDrawable: the normal image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>subHighlightedText</name>
            <comment>Set the sub-text when boom-button is at highlighted-state.
subHighlightedText: sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subHighlightedText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>pieceColor</name>
            <comment>The color of boom-button when it is just a piece.
pieceColor: color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>pieceColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableImageRes</name>
            <comment>Set the image resource when boom-button is at unable-state.
unableImageRes: the unable image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subMaxLines</name>
            <comment>Set the maximum of the lines of sub-text-view.
subMaxLines: maximum lines
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subMaxLines</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textGravity</name>
            <comment>Set the gravity of text-view.
gravity: gravity, for example, Gravity.CENTER
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>gravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedText</name>
            <comment>Set the text when boom-button is at highlighted-state.
highlightedText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>subHighlightedTextRes</name>
            <comment>Set the sub-text resource when boom-button is at highlighted-state.
subHighlightedTextRes: sub-text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subHighlightedTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageDrawable</name>
            <comment>Set the image drawable when boom-button is at highlighted-state.
highlightedImageDrawable: the highlighted image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setUnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>subUnableTextRes</name>
            <comment>Set the sub-text resource when boom-button is at unable-state.
subUnableTextRes: sub-text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subUnableTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalColor</name>
            <comment>The color of boom-button when it is at normal-state.
normalColor: the normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextRes</name>
            <comment>Set the text resource when boom-button is at normal-state.
normalTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textSize</name>
            <comment>Set the text size of the text-view.
textSize: size of text, in sp
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>textSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pieceColorRes</name>
            <comment>The resource of color of boom-button when it is just a piece.
pieceColorRes: resource of color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>pieceColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subTypeface</name>
            <comment>Set the typeface of the sub-text.
subTypeface: typeface
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subTypeface</name>
                <type>android.graphics.Typeface</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColor</name>
            <comment>The color of boom-button when it is at highlighted-state.
highlightedColor: the highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedTextColor</name>
            <comment>Set the color of text when boom-button is at highlighted-state.
highlightedTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalColorRes</name>
            <comment>The resource of color of boom-button when it is at normal-state.
normalColorRes: resource of normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>normalColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subUnableTextColor</name>
            <comment>Set the color of sub-text when boom-button is at unable-state.
subUnableTextColor: color the sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subUnableTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment>Build ham button, don't use this method.
context: the context
Return type: @return:the ham button</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>unableImageDrawable</name>
            <comment>Set the image drawable when boom-button is at unable-state.
unableImageDrawable: the unable image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>unableImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>imageRect</name>
            <comment>Set the rect of image.
 By this method, you can set the position and size of the image-view in boom-button.
 For example, builder.imageRect(new Rect(0, 50, 100, 100)) will make the
 image-view's size to be 100 * 50 and margin-top to be 50 pixel.
imageRect: the image rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>imageRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColorRes</name>
            <comment>The resource of color of boom-button when it is at highlighted-state.
highlightedColorRes: resource of highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>highlightedColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>subUnableText</name>
            <comment>Set the sub-text when boom-button is at unable-state.
subUnableText: sub-text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>subUnableText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>textPadding</name>
            <comment>Set the padding of text.
 By this method, you can control the padding in the text-view.
 For instance, builder.textPadding(new Rect(10, 10, 10, 10)) will make the
 text-view content 10-pixel padding to itself.
textPadding: the image padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
            <parameter>
                <name>textPadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getb</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.BoomButtons.HamButton.Builder</returntype>
        </method>
        <method>
            <name>getButtonWidth</name>
            <comment>Get the width of boom-button.
Return type: @return:width of button</comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</name>
        <shortname>SimpleCircleButtonBuilder</shortname>
        <comment>Builder of simple-circle boom button.
 You can use this builder to set:
 rotateImage,
 shadowEffect,
 shadowOffsetX,
 shadowOffsetY,
 shadowRadius,
 shadowColor,
 normalImageRes,
 highlightedImageRes,
 unableImageRes,
 normalImageDrawable,
 highlightedImageDrawable,
 unableImageRes,
 imageRect,
 imagePadding,
 rippleEffect,
 normalColor,
 highlightedColor,
 rippleColor,
 unableColor,
 unable,
 buttonRadius.</comment>
        <owner>process</owner>
        <method>
            <name>shadowOffsetX</name>
            <comment>Set the horizontal shadow-offset of the boom-button.
shadowOffsetX: the shadow offset x
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetY</name>
            <comment>Set the vertical shadow-offset of the boom-button.
shadowOffsetY: the shadow offset y
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalImageDrawable</name>
            <comment>Set the image drawable when boom-button is at normal-state.
normalImageDrawable: the normal image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>pieceColor</name>
            <comment>The color of boom-button when it is just a piece.
pieceColor: color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableImageRes</name>
            <comment>Set the image resource when boom-button is at unable-state.
unableImageRes: the unable image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unable</name>
            <comment>Whether the boom-button is unable, default value is false.
unable: the unable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageDrawable</name>
            <comment>Set the image drawable when boom-button is at highlighted-state.
highlightedImageDrawable: the highlighted image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setUnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRadius</name>
            <comment>Gets button radius.
Return type: @return:the button radius</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>shadowColor</name>
            <comment>Set the color of the shadow of boom-button.
shadowColor: the shadow color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalColor</name>
            <comment>The color of boom-button when it is at normal-state.
normalColor: the normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalImageRes</name>
            <comment>Set the image resource when boom-button is at normal-state.
normalImageRes: the normal image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableColor</name>
            <comment>The color of boom-button when it is at unable-state.
unableColor: the unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pieceColorRes</name>
            <comment>The resource of color of boom-button when it is just a piece.
pieceColorRes: resource of color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColor</name>
            <comment>The color of boom-button when it is at highlighted-state.
highlightedColor: the highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateImage</name>
            <comment>Whether the image-view should rotate.
rotateImage: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>rotateImage</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>index</name>
            <comment>Set the index of the boom-button, don't use this method.
index: the index
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowEffect</name>
            <comment>Whether the boom-button should have a shadow effect.
shadowEffect: have shadow effect or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>normalColorRes</name>
            <comment>The resource of color of boom-button when it is at normal-state.
normalColorRes: resource of normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>normalColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>imagePadding</name>
            <comment>Set the padding of image.
 By this method, you can control the padding in the image-view.
 For instance, builder.imagePadding(new Rect(10, 10, 10, 10)) will make the
 image-view content 10-pixel padding to itself.
imagePadding: the image padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>imagePadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>unableColorRes</name>
            <comment>The resource of color of boom-button when it is at unable-state.
unableColorRes: resource of unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>unableColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowRadius</name>
            <comment>Set the radius of shadow of the boom-button.
shadowRadius: the shadow radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment>Build simple circle button, don't use this method.
context: the context
Return type: @return:the simple circle button</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>buttonRadius</name>
            <comment>The radius of boom-button, in pixel.
buttonRadius: the button radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>buttonRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableImageDrawable</name>
            <comment>Set the image drawable when boom-button is at unable-state.
unableImageDrawable: the unable image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>imageRect</name>
            <comment>Set the rect of image.
 By this method, you can set the position and size of the image-view in boom-button.
 For example, builder.imageRect(new Rect(0, 50, 100, 100)) will make the
 image-view's size to be 100 * 50 and margin-top to be 50 pixel.
imageRect: the image rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>imageRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColorRes</name>
            <comment>The resource of color of boom-button when it is at highlighted-state.
highlightedColorRes: resource of highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rippleEffect</name>
            <comment>Whether the boom-button should have a ripple effect.
rippleEffect: the ripple effect
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getb</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
        </method>
        <method>
            <name>highlightedImageRes</name>
            <comment>Set the image resource when boom-button is at highlighted-state.
highlightedImageRes: the highlighted image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.SimpleCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageRes</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</name>
        <shortname>TextInsideCircleButtonBuilder</shortname>
        <comment>Builder of text-inside-circle boom button.
 You can use this builder to set:
 rotateImage,
 rotateText,
 shadowEffect,
 shadowOffsetX,
 shadowOffsetY,
 shadowRadius,
 shadowColor,
 normalImageRes,
 highlightedImageRes,
 unableImageRes,
 normalImageDrawable,
 highlightedImageDrawable,
 unableImageRes,
 imageRect,
 imagePadding,
 normalTextRes,
 highlightedTextRes,
 unableTextRes,
 normalText,
 highlightedText,
 unableText,
 normalTextColor,
 highlightedTextColor,
 unableTextColor,
 textRect,
 textPadding,
 typeface,
 maxLines,
 textGravity,
 ellipsize,
 textSize,
 rippleEffect,
 normalColor,
 highlightedColor,
 rippleColor,
 unableColor,
 unable,
 buttonRadius.</comment>
        <owner>process</owner>
        <method>
            <name>highlightedTextRes</name>
            <comment>Set the text resource when boom-button is at highlighted-state.
highlightedTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextColor</name>
            <comment>Set the color of text when boom-button is at normal-state.
normalTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unable</name>
            <comment>Whether the boom-button is unable, default value is false.
unable: the unable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>normalText</name>
            <comment>Set the text when boom-button is at normal-state.
normalText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRadius</name>
            <comment>Gets button radius.
Return type: @return:the button radius</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>shadowColor</name>
            <comment>Set the color of the shadow of boom-button.
shadowColor: the shadow color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textRect</name>
            <comment>Set the rect of text.
 By this method, you can set the position and size of the text-view in boom-button.
 For example, builder.textRect(new Rect(0, 50, 100, 100)) will make the
 text-view's size to be 100 * 50 and margin-top to be 50 pixel.
textRect: the text rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>textRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>ellipsize</name>
            <comment>Set the ellipsize of the text-view.
ellipsize: ellipsize
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>ellipsize</name>
                <type EnumType="true">android.text.TextUtils.TruncateAt</type>
            </parameter>
        </method>
        <method>
            <name>normalImageRes</name>
            <comment>Set the image resource when boom-button is at normal-state.
normalImageRes: the normal image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableColor</name>
            <comment>The color of boom-button when it is at unable-state.
unableColor: the unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateImage</name>
            <comment>Whether the image-view should rotate.
rotateImage: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>rotateImage</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>unableTextRes</name>
            <comment>Set the text resource when boom-button is at unable-state.
unableTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>index</name>
            <comment>Set the index of the boom-button, don't use this method.
index: the index
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowEffect</name>
            <comment>Whether the boom-button should have a shadow effect.
shadowEffect: have shadow effect or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>imagePadding</name>
            <comment>Set the padding of image.
 By this method, you can control the padding in the image-view.
 For instance, builder.imagePadding(new Rect(10, 10, 10, 10)) will make the
 image-view content 10-pixel padding to itself.
imagePadding: the image padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>imagePadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>unableText</name>
            <comment>Set the text when boom-button is at unable-state.
unableText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>typeface</name>
            <comment>Set the typeface of the text.
typeface: typeface
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>typeface</name>
                <type>android.graphics.Typeface</type>
            </parameter>
        </method>
        <method>
            <name>unableColorRes</name>
            <comment>The resource of color of boom-button when it is at unable-state.
unableColorRes: resource of unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowRadius</name>
            <comment>Set the radius of shadow of the boom-button.
shadowRadius: the shadow radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>buttonRadius</name>
            <comment>The radius of boom-button, in pixel.
buttonRadius: the button radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>buttonRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>maxLines</name>
            <comment>Set the maximum of the lines of text-view.
maxLines: maximum lines
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>maxLines</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rippleEffect</name>
            <comment>Whether the boom-button should have a ripple effect.
rippleEffect: the ripple effect
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageRes</name>
            <comment>Set the image resource when boom-button is at highlighted-state.
highlightedImageRes: the highlighted image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableTextColor</name>
            <comment>Set the color of text when boom-button is at unable-state.
unableTextColor: color the text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetX</name>
            <comment>Set the horizontal shadow-offset of the boom-button.
shadowOffsetX: the shadow offset x
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetY</name>
            <comment>Set the vertical shadow-offset of the boom-button.
shadowOffsetY: the shadow offset y
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalImageDrawable</name>
            <comment>Set the image drawable when boom-button is at normal-state.
normalImageDrawable: the normal image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>pieceColor</name>
            <comment>The color of boom-button when it is just a piece.
pieceColor: color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableImageRes</name>
            <comment>Set the image resource when boom-button is at unable-state.
unableImageRes: the unable image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textGravity</name>
            <comment>Set the gravity of text-view.
gravity: gravity, for example, Gravity.CENTER
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>gravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedText</name>
            <comment>Set the text when boom-button is at highlighted-state.
highlightedText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageDrawable</name>
            <comment>Set the image drawable when boom-button is at highlighted-state.
highlightedImageDrawable: the highlighted image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setUnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>normalColor</name>
            <comment>The color of boom-button when it is at normal-state.
normalColor: the normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextRes</name>
            <comment>Set the text resource when boom-button is at normal-state.
normalTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textSize</name>
            <comment>Set the text size of the text-view.
textSize: size of text, in sp
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>textSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pieceColorRes</name>
            <comment>The resource of color of boom-button when it is just a piece.
pieceColorRes: resource of color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateText</name>
            <comment>Whether the text-view should rotate.
rotateText: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>rotateText</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColor</name>
            <comment>The color of boom-button when it is at highlighted-state.
highlightedColor: the highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedTextColor</name>
            <comment>Set the color of text when boom-button is at highlighted-state.
highlightedTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalColorRes</name>
            <comment>The resource of color of boom-button when it is at normal-state.
normalColorRes: resource of normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment>Build text-inside circle button, don't use this method.
context: the context
Return type: @return:the simple circle button</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>unableImageDrawable</name>
            <comment>Set the image drawable when boom-button is at unable-state.
unableImageDrawable: the unable image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>imageRect</name>
            <comment>Set the rect of image.
 By this method, you can set the position and size of the image-view in boom-button.
 For example, builder.imageRect(new Rect(0, 50, 100, 100)) will make the
 image-view's size to be 100 * 50 and margin-top to be 50 pixel.
imageRect: the image rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>imageRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColorRes</name>
            <comment>The resource of color of boom-button when it is at highlighted-state.
highlightedColorRes: resource of highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textPadding</name>
            <comment>Set the padding of text.
 By this method, you can control the padding in the text-view.
 For instance, builder.textPadding(new Rect(10, 10, 10, 10)) will make the
 text-view content 10-pixel padding to itself.
textPadding: the text padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
            <parameter>
                <name>textPadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getb</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextInsideCircleButton.Builder</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</name>
        <shortname>TextOutsideCircleButtonBuilder</shortname>
        <comment>Builder of text-outside-circle boom button.
 You can use this builder to set:
 rotateImage,
 rotateText,
 shadowEffect,
 shadowOffsetX,
 shadowOffsetY,
 shadowRadius,
 shadowColor,
 normalImageRes,
 highlightedImageRes,
 unableImageRes,
 normalImageDrawable,
 highlightedImageDrawable,
 unableImageRes,
 imageRect,
 imagePadding,
 normalTextRes,
 highlightedTextRes,
 unableTextRes,
 normalText,
 highlightedText,
 unableText,
 normalTextColor,
 highlightedTextColor,
 unableTextColor,
 textTopMarin,
 textWidth,
 textHeight,
 textPadding,
 typeface,
 maxLines,
 textGravity,
 ellipsize,
 textSize,
 rippleEffect,
 normalColor,
 highlightedColor,
 rippleColor,
 unableColor,
 unable,
 buttonRadius.</comment>
        <owner>process</owner>
        <method>
            <name>textTopMargin</name>
            <comment>Set the top-margin between text-view and the circle button.
 Don't need to mind the shadow, BMB will mind this in code.
textTopMargin: top-margin between text-view and the circle button, bigger or
                      equal to zero.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>textTopMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedTextRes</name>
            <comment>Set the text resource when boom-button is at highlighted-state.
highlightedTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextColor</name>
            <comment>Set the color of text when boom-button is at normal-state.
normalTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unable</name>
            <comment>Whether the boom-button is unable, default value is false.
unable: the unable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>normalText</name>
            <comment>Set the text when boom-button is at normal-state.
normalText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRadius</name>
            <comment>Gets button radius.
Return type: @return:the button radius</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>shadowColor</name>
            <comment>Set the color of the shadow of boom-button.
shadowColor: the shadow color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonContentHeight</name>
            <comment>Get the height of content.
 This method is used to calculate the position of boom-button on the screen,
 don't use it outside.
Return type: @return:the height of content in text-outside-circle-button</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ellipsize</name>
            <comment>Set the ellipsize of the text-view.
ellipsize: ellipsize
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>ellipsize</name>
                <type EnumType="true">android.text.TextUtils.TruncateAt</type>
            </parameter>
        </method>
        <method>
            <name>normalImageRes</name>
            <comment>Set the image resource when boom-button is at normal-state.
normalImageRes: the normal image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableColor</name>
            <comment>The color of boom-button when it is at unable-state.
unableColor: the unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateImage</name>
            <comment>Whether the image-view should rotate.
rotateImage: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>rotateImage</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>unableTextRes</name>
            <comment>Set the text resource when boom-button is at unable-state.
unableTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonContentWidth</name>
            <comment>Get the height of content.
 This method is used to calculate the position of boom-button on the screen,
 don't use it outside.
Return type: @return:the width of content in text-outside-circle-button</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>index</name>
            <comment>Set the index of the boom-button, don't use this method.
index: the index
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowEffect</name>
            <comment>Whether the boom-button should have a shadow effect.
shadowEffect: have shadow effect or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>textWidth</name>
            <comment>The width of text-view.
textWidth: width of text-view
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>textWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>imagePadding</name>
            <comment>Set the padding of image.
 By this method, you can control the padding in the image-view.
 For instance, builder.imagePadding(new Rect(10, 10, 10, 10)) will make the
 image-view content 10-pixel padding to itself.
imagePadding: the image padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>imagePadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>unableText</name>
            <comment>Set the text when boom-button is at unable-state.
unableText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>typeface</name>
            <comment>Set the typeface of the text.
typeface: typeface
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>typeface</name>
                <type>android.graphics.Typeface</type>
            </parameter>
        </method>
        <method>
            <name>unableColorRes</name>
            <comment>The resource of color of boom-button when it is at unable-state.
unableColorRes: resource of unable color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowRadius</name>
            <comment>Set the radius of shadow of the boom-button.
shadowRadius: the shadow radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>buttonRadius</name>
            <comment>The radius of boom-button, in pixel.
buttonRadius: the button radius
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>buttonRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>maxLines</name>
            <comment>Set the maximum of the lines of text-view.
maxLines: maximum lines
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>maxLines</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rippleEffect</name>
            <comment>Whether the boom-button should have a ripple effect.
rippleEffect: the ripple effect
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageRes</name>
            <comment>Set the image resource when boom-button is at highlighted-state.
highlightedImageRes: the highlighted image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableTextColor</name>
            <comment>Set the color of text when boom-button is at unable-state.
unableTextColor: color the text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetX</name>
            <comment>Set the horizontal shadow-offset of the boom-button.
shadowOffsetX: the shadow offset x
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>shadowOffsetY</name>
            <comment>Set the vertical shadow-offset of the boom-button.
shadowOffsetY: the shadow offset y
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalImageDrawable</name>
            <comment>Set the image drawable when boom-button is at normal-state.
normalImageDrawable: the normal image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>pieceColor</name>
            <comment>The color of boom-button when it is just a piece.
pieceColor: color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>unableImageRes</name>
            <comment>Set the image resource when boom-button is at unable-state.
unableImageRes: the unable image res
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textGravity</name>
            <comment>Set the gravity of text-view.
gravity: gravity
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>gravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedText</name>
            <comment>Set the text when boom-button is at highlighted-state.
highlightedText: text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedText</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>highlightedImageDrawable</name>
            <comment>Set the image drawable when boom-button is at highlighted-state.
highlightedImageDrawable: the highlighted image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setUnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>normalColor</name>
            <comment>The color of boom-button when it is at normal-state.
normalColor: the normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalTextRes</name>
            <comment>Set the text resource when boom-button is at normal-state.
normalTextRes: text resource
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalTextRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textSize</name>
            <comment>Set the text size of the text-view.
textSize: size of text, in sp
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>textSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>pieceColorRes</name>
            <comment>The resource of color of boom-button when it is just a piece.
pieceColorRes: resource of color of piece
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>pieceColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>rotateText</name>
            <comment>Whether the text-view should rotate.
rotateText: rotate or not
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>rotateText</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColor</name>
            <comment>The color of boom-button when it is at highlighted-state.
highlightedColor: the highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>highlightedTextColor</name>
            <comment>Set the color of text when boom-button is at highlighted-state.
highlightedTextColor: color of text
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedTextColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>normalColorRes</name>
            <comment>The resource of color of boom-button when it is at normal-state.
normalColorRes: resource of normal color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>normalColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textHeight</name>
            <comment>The height of text-view.
textHeight: height of text-view
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>textHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>build</name>
            <comment>Build text-inside circle button, don't use this method.
context: the context
Return type: @return:the simple circle button</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
        </method>
        <method>
            <name>unableImageDrawable</name>
            <comment>Set the image drawable when boom-button is at unable-state.
unableImageDrawable: the unable image drawable
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>unableImageDrawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>imageRect</name>
            <comment>Set the rect of image.
 By this method, you can set the position and size of the image-view in boom-button.
 For example, builder.imageRect(new Rect(0, 50, 100, 100)) will make the
 image-view's size to be 100 * 50 and margin-top to be 50 pixel.
imageRect: the image rect, in pixel.
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>imageRect</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>highlightedColorRes</name>
            <comment>The resource of color of boom-button when it is at highlighted-state.
highlightedColorRes: resource of highlighted color
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>highlightedColorRes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>textPadding</name>
            <comment>Set the padding of text.
 By this method, you can control the padding in the text-view.
 For instance, builder.textPadding(new Rect(10, 10, 10, 10)) will make the
 text-view content 10-pixel padding to itself.
textPadding: the text padding
Return type: @return:the builder</comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
            <parameter>
                <name>textPadding</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getb</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.BoomButtons.TextOutsideCircleButton.Builder</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Piece.BoomPiece</name>
        <comment>Created by Weiping Huang at 00:57 on 16/11/7
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getHorizontalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </method>
        <method>
            <name>setOnFocusChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnFocusChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onResolvePointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setOnLongClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLongClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setOnDragListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnDragListener</type>
            </parameter>
        </method>
        <method>
            <name>getHandler</name>
            <comment></comment>
            <returntype>android.os.Handler</returntype>
        </method>
        <method>
            <name>isNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTextAlignment</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimationDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getScrollIndicators</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLayoutDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isFocusableInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>stopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onCreateDrawableState</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addChildrenForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>dispatchPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>refreshDrawableState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isLayoutRequested</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getKeepScreenOn</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onFilterTouchEventForSecurity</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getForegroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>onHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setSaveEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isLayoutDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getApplicationWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>isInTouchMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getMeasuredHeightAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performContextClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getFocusables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getWindowVisibleDisplayFrame</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getSuggestedMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>performClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>hasNestedScrollingParent</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onKeyPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>fitSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>findViewsWithText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>onDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>onAttachedToWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isImportantForAccessibility</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPadding</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSaveInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>clearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setOnScrollChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnScrollChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>resolveSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>callOnClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>willNotCacheDrawing</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>invalidateOutline</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onDrawScrollBars</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetActivated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>hasTransientState</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>setMeasuredDimension</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSystemUiVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setScrollY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyShortcut</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getPointerIcon</name>
            <comment></comment>
            <returntype>android.view.PointerIcon</returntype>
        </method>
        <method>
            <name>onProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>setSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onApplyWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>restoreHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getElevation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>announceForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityLiveRegion</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>invalidateDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundResource</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setFocusableInTouchMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>post</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>setClipBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getClipBounds</name>
            <comment></comment>
            <returntype>android.graphics.Rect</returntype>
        </method>
        <method>
            <name>isSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>buildDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onOverScrolled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPointerIcon</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.PointerIcon</type>
            </parameter>
        </method>
        <method>
            <name>getBottomFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPaddingEnd</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTextAlignment</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setAccessibilityTraversalBefore</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setTextDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setAlpha</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onKeyLongPress</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setCameraDistance</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>isHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setDuplicateParentStateEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetSelected</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getCameraDistance</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>onRestoreInstanceState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.os.Parcelable</type>
            </parameter>
        </method>
        <method>
            <name>getBottomPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getContentDescription</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOverScrollMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>startAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>setOnTouchListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnTouchListener</type>
            </parameter>
        </method>
        <method>
            <name>saveHierarchyState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.util.SparseArray</type>
            </parameter>
        </method>
        <method>
            <name>cancelDragAndDrop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isTextAlignmentResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBackgroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>setNextFocusDownId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMinimumWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollBarStyle</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>willNotDraw</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOverlay</name>
            <comment></comment>
            <returntype>android.view.ViewOverlay</returntype>
        </method>
        <method>
            <name>getScrollBarStyle</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>hasFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDrawForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isHorizontalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postDelayed</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setAccessibilityDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.AccessibilityDelegate</type>
            </parameter>
        </method>
        <method>
            <name>getContextMenuInfo</name>
            <comment></comment>
            <returntype>android.view.ContextMenu.ContextMenuInfo</returntype>
        </method>
        <method>
            <name>setOutlineProvider</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewOutlineProvider</type>
            </parameter>
        </method>
        <method>
            <name>setBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onProvideVirtualStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>destroyDrawingCache</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getLayoutParams</name>
            <comment></comment>
            <returntype>android.view.ViewGroup.LayoutParams</returntype>
        </method>
        <method>
            <name>setScrollIndicators</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onAnimationEnd</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getMeasuredWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setVisibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRotationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getRootWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
        </method>
        <method>
            <name>getRotationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchNestedPreFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onAnimationStart</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>init</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityTraversalAfter</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>changed</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLongClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateDelayed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>clearAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getOverScrollMode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getParentForAccessibility</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>verifyDrawable</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setOnClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnClickListener</type>
            </parameter>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchGenericPointerEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocusFromTouch</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getForegroundTintList</name>
            <comment></comment>
            <returntype>android.content.res.ColorStateList</returntype>
        </method>
        <method>
            <name>onSizeChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheQuality</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchGenericFocusedEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedFling</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isHovered</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>resolveSizeAndState</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>requestRectangleOnScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getLocationOnScreen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>startDragAndDrop</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLayerType</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>getTransitionName</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>getTouchables</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>setScrollbarFadingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>startActionMode</name>
            <comment></comment>
            <returntype>android.view.ActionMode</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ActionMode.Callback</type>
            </parameter>
        </method>
        <method>
            <name>isLaidOut</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>hasFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setKeepScreenOn</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onKeyUp</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>setLayerType</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>buildLayer</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isShown</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchHoverEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getClipToOutline</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>isAttachedToWindow</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onScreenStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPivotX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getPivotY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>hasWindowFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setScaleX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>onSaveInstanceState</name>
            <comment></comment>
            <returntype>android.os.Parcelable</returntype>
        </method>
        <method>
            <name>setScaleY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getTextDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setNextFocusUpId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForegroundGravity</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>bringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getRotation</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>combineMeasuredStates</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchProvideStructure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewStructure</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDrawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setNestedScrollingEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setTransitionName</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyEventPreIme</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>onCreateInputConnection</name>
            <comment></comment>
            <returntype>android.view.inputmethod.InputConnection</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.inputmethod.EditorInfo</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingTime</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>findViewWithTag</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>drawableStateChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setFadingEdgeLength</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEventUnchecked</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>isActivated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setHorizontalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScaleY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getForeground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getScaleX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isAccessibilityFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>startDrag</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.ClipData</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInLayout</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLabelFor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setMinimumWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>performAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>onDisplayHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPaddingRelative</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onCreateContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>computeHorizontalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchDragEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.DragEvent</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalFadingEdgeEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getDrawingCache</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>computeVerticalScrollExtent</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>performHapticFeedback</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getTranslationZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setTag</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>getTranslationX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnContextClickListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnContextClickListener</type>
            </parameter>
        </method>
        <method>
            <name>sendAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isPressed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBackgroundColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getForegroundGravity</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getKeyDispatcherState</name>
            <comment></comment>
            <returntype>android.view.KeyEvent.DispatcherState</returntype>
        </method>
        <method>
            <name>onScrollChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForeground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarFadeDuration</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowToken</name>
            <comment></comment>
            <returntype>android.os.IBinder</returntype>
        </method>
        <method>
            <name>getTag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>onMeasure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRightFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setOnApplyWindowInsetsListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnApplyWindowInsetsListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetLeftAndRight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRootView</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.ViewGroup</type>
            </parameter>
        </method>
        <method>
            <name>isClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onDetachedFromWindow</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getDisplay</name>
            <comment></comment>
            <returntype>android.view.Display</returntype>
        </method>
        <method>
            <name>isPaddingOffsetRequired</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>playSoundEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTouchDelegate</name>
            <comment></comment>
            <returntype>android.view.TouchDelegate</returntype>
        </method>
        <method>
            <name>getMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>removeOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>isOpaque</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isLongClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>animate</name>
            <comment></comment>
            <returntype>android.view.ViewPropertyAnimator</returntype>
        </method>
        <method>
            <name>setStateListAnimator</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.animation.StateListAnimator</type>
            </parameter>
        </method>
        <method>
            <name>getMatrix</name>
            <comment></comment>
            <returntype>android.graphics.Matrix</returntype>
        </method>
        <method>
            <name>isHapticFeedbackEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>jumpDrawablesToCurrentState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchGenericMotionEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getTopFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getLeftPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setRotation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>scrollTo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPivotX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>dispatchSetPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setPivotY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>overScrollBy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg5</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg6</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg7</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg8</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>updateDragShadow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.DragShadowBuilder</type>
            </parameter>
        </method>
        <method>
            <name>startNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotCacheDrawing</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setScrollBarSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>computeScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isScrollContainer</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getScrollX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getTopPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getScrollY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isDirty</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setForegroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isSaveEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getResources</name>
            <comment></comment>
            <returntype>android.content.res.Resources</returntype>
        </method>
        <method>
            <name>setOnKeyListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnKeyListener</type>
            </parameter>
        </method>
        <method>
            <name>offsetTopAndBottom</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWillNotDraw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isSelected</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getFocusedRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchWindowSystemUiVisiblityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getWindowAttachCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setMinimumHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getParent</name>
            <comment></comment>
            <returntype>android.view.ViewParent</returntype>
        </method>
        <method>
            <name>getWindowVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dispatchSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onKeyMultiple</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>onWindowSystemUiVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onInitializeAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityNodeInfo</type>
            </parameter>
        </method>
        <method>
            <name>setLabelFor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>focusSearch</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchTrackballEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getOutlineProvider</name>
            <comment></comment>
            <returntype>android.view.ViewOutlineProvider</returntype>
        </method>
        <method>
            <name>getNextFocusForwardId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLocalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>canResolveTextDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getImportantForAccessibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDrawingRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dispatchKeyShortcutEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalFadingEdgeLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getOnFocusChangeListener</name>
            <comment></comment>
            <returntype>android.view.View.OnFocusChangeListener</returntype>
        </method>
        <method>
            <name>isFocused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTextDirectionResolved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusDownId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>measure</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setClipToOutline</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setNextFocusRightId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getLeftFadingEdgeStrength</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>unscheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>onFinishInflate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>requestApplyInsets</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>awakenScrollBars</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>generateViewId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHovered</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setSaveFromParentEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getStateListAnimator</name>
            <comment></comment>
            <returntype>android.animation.StateListAnimator</returntype>
        </method>
        <method>
            <name>onVisibilityAggregated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHasOverlappingRendering</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onSetAlpha</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingStart</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAnimation</name>
            <comment></comment>
            <returntype>android.view.animation.Animation</returntype>
        </method>
        <method>
            <name>getMeasuredWidthAndState</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setImportantForAccessibility</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPaddingLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>addOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>findFocus</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
        </method>
        <method>
            <name>canScrollHorizontally</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>dispatchStartTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onWindowVisibilityChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onPopulateAccessibilityEvent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.accessibility.AccessibilityEvent</type>
            </parameter>
        </method>
        <method>
            <name>getHitRect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>removeOnLayoutChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnLayoutChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>onFinishTemporaryDetach</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>drawableHotspotChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getLayoutDirection</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>forceHasOverlappingRendering</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>layout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getBaseline</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getGlobalVisibleRect</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Point</type>
            </parameter>
        </method>
        <method>
            <name>setDrawingCacheQuality</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isHardwareAccelerated</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>requestUnbufferedDispatch</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setHasTransientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>postInvalidateOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>scheduleDrawable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>addOnAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>getVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHorizontalScrollbarHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>computeHorizontalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>findViewById</name>
            <comment></comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityClassName</name>
            <comment></comment>
            <returntype>java.lang.CharSequence</returntype>
        </method>
        <method>
            <name>setOnSystemUiVisibilityChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnSystemUiVisibilityChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>removeCallbacks</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>performLongClick</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setRotationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setRotationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>requestFitSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLayerPaint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>showContextMenu</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setPressed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>onCancelPendingInputEvents</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>hasOnClickListeners</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setFocusable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>computeVerticalScrollRange</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setScrollContainer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getBackgroundTintMode</name>
            <comment></comment>
            <returntype EnumType="true">android.graphics.PorterDuff.Mode</returntype>
        </method>
        <method>
            <name>setAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.animation.Animation</type>
            </parameter>
        </method>
        <method>
            <name>dispatchNestedScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>addFocusables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isContextClickable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>computeVerticalScrollOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setOnGenericMotionListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnGenericMotionListener</type>
            </parameter>
        </method>
        <method>
            <name>setNextFocusLeftId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>onRtlPropertiesChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLayoutParams</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ViewGroup.LayoutParams</type>
            </parameter>
        </method>
        <method>
            <name>computeSystemWindowInsets</name>
            <comment></comment>
            <returntype>android.view.WindowInsets</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.WindowInsets</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>getVerticalScrollbarWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>place</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContentDescription</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setOnCreateContextMenuListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnCreateContextMenuListener</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundTintList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
        </method>
        <method>
            <name>isPaddingRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setTranslationZ</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setElevation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setTranslationY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>canResolveLayoutDirection</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getNextFocusUpId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTranslationX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getDefaultSize</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isTemporarilyDetached</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>postOnAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>dispatchUnhandledMove</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setForegroundTintMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>mergeDrawableStates</name>
            <comment></comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getViewTreeObserver</name>
            <comment></comment>
            <returntype>android.view.ViewTreeObserver</returntype>
        </method>
        <method>
            <name>isFocusable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>canScrollVertically</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setContextClickable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getFilterTouchesWhenObscured</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getBottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isSoundEffectsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getSolidColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getAlpha</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getSuggestedMinimumHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getRightPaddingOffset</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>cancelLongPress</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isInEditMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onTouchEvent</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.MotionEvent</type>
            </parameter>
        </method>
        <method>
            <name>setTouchDelegate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.TouchDelegate</type>
            </parameter>
        </method>
        <method>
            <name>onHoverChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getNextFocusRightId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setNextFocusForwardId</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getMeasuredHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>dispatchNestedPrePerformAccessibilityAction</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.os.Bundle</type>
            </parameter>
        </method>
        <method>
            <name>setVerticalScrollBarEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>dispatchConfigurationChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Configuration</type>
            </parameter>
        </method>
        <method>
            <name>getScrollBarSize</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getVerticalScrollbarPosition</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>onKeyDown</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.view.KeyEvent</type>
            </parameter>
        </method>
        <method>
            <name>requestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getWindowSystemUiVisibility</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>getLocationInWindow</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>setOnHoverListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View.OnHoverListener</type>
            </parameter>
        </method>
        <method>
            <name>getAccessibilityNodeProvider</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeProvider</returntype>
        </method>
        <method>
            <name>setScrollBarDefaultDelayBeforeFade</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createAccessibilityNodeInfo</name>
            <comment></comment>
            <returntype>android.view.accessibility.AccessibilityNodeInfo</returntype>
        </method>
        <method>
            <name>getNextFocusLeftId</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>checkInputConnectionProxy</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>onCheckIsTextEditor</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onWindowFocusChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setFitsSystemWindows</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>createContextMenu</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.view.ContextMenu</type>
            </parameter>
        </method>
        <method>
            <name>invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>addTouchables</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>getX</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getY</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getZ</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>canResolveTextAlignment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>dispatchNestedPreScroll</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>getContext</name>
            <comment></comment>
            <returntype>android.content.Context</returntype>
        </method>
        <method>
            <name>getBackground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>getFitsSystemWindows</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getWindowId</name>
            <comment></comment>
            <returntype>android.view.WindowId</returntype>
        </method>
        <field>
            <name>SCROLL_INDICATOR_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUS_FORWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE_STICKY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LIGHT_STATUS_BAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_CENTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_GRAVITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_ASSERTIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_WRITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_HARDWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_TOO_SMALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>KEEP_SCREEN_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INVISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_LOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCALE_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_SOFTWARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_OPAQUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_STATE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_UP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_ON</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FIND_VIEWS_WITH_CONTENT_DESCRIPTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>EMPTY_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSABLES_ALL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_STABLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>FOCUS_DOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_BACKWARD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAWING_CACHE_QUALITY_HIGH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_VIEW_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_IMMERSIVE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MEASURED_HEIGHT_STATE_SHIFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TRANSLATION_Z</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TRANSLATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TRANSLATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_NO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_POLITE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALPHA</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL_URI_READ</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESSIBILITY_LIVE_REGION_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_Y</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_HIDE_NAVIGATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>STATUS_BAR_HIDDEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ROTATION_X</name>
            <comment></comment>
            <returntype>android.util.Property</returntype>
        </field>
        <field>
            <name>SOUND_EFFECTS_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYER_TYPE_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_LAYOUT_FLAGS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAPTIC_FEEDBACK_ENABLED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_LOW_PROFILE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_INDICATOR_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSABLES_TOUCH_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCREEN_STATE_OFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SYSTEM_UI_FLAG_FULLSCREEN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>TEXT_ALIGNMENT_TEXT_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>STATUS_BAR_VISIBLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_ANY_RTL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ENABLED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUS_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_AUTO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TEXT_DIRECTION_FIRST_STRONG_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>MEASURED_SIZE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PRESSED_FOCUSED_SELECTED_STATE_SET</name>
            <comment></comment>
            <returntype>int[]</returntype>
        </field>
        <field>
            <name>DRAG_FLAG_GLOBAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>IMPORTANT_FOR_ACCESSIBILITY_YES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>VIEW_LOG_TAG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.nightonke.boommenu.Piece.PiecePlaceEnum</name>
        <comment>Created by Weiping Huang at 23:48 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>pieceNumber</name>
            <comment>Get number of pieces from a piece-place-enum.
Return type: @return:the number of pieces</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>minPieceNumber</name>
            <comment>Get the minimum piece number for this piecePlaceEnum
Return type: @return:minimum piece number</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>valueOf</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>values</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum[]</returntype>
        </method>
        <method>
            <name>getEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>maxPieceNumber</name>
            <comment>Get the maximum piece number for this piecePlaceEnum
Return type: @return:maximum piece number</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>compareTo</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>E</type>
            </parameter>
        </method>
        <method>
            <name>getValue</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDeclaringClass</name>
            <comment></comment>
            <returntype>java.lang.Class</returntype>
        </method>
        <method>
            <name>hashCode</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>name</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>clone</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>toString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>finalize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ordinal</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
    </class>
    <class>
        <name>com.nightonke.boommenu.Piece.PiecePlaceManager</name>
        <comment>Created by Weiping Huang at 23:50 on 16/11/6
 For Personal Open Source
 Contact me at 2584541288@qq.com or nightonke@outlook.com
 For more projects: https://github.com/Nightonke</comment>
        <owner>process</owner>
        <method>
            <name>getHamPositions</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>piecePlaceEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>hamWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>hamHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>hamVerticalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShareDotPositions</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>dotRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dotNumber</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>shareLineLength</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getInstance</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Piece.PiecePlaceManager</returntype>
        </method>
        <method>
            <name>getDotPositions</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
            <parameter>
                <name>piecePlaceEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</type>
            </parameter>
            <parameter>
                <name>parentSize</name>
                <type>android.graphics.Point</type>
            </parameter>
            <parameter>
                <name>dotRadius</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dotHorizontalMargin</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dotVerticalMargin</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dotInclinedMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>createPiece</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.Piece.BoomPiece</returntype>
            <parameter>
                <name>context</name>
                <type>android.content.Context</type>
            </parameter>
            <parameter>
                <name>piecePlaceEnum</name>
                <type EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>ir.aminrezaei.ARBoomButton</name>
        <shortname>ARBoomMenuButton</shortname>
        <objectwrapper>com.nightonke.boommenu.BoomMenuButton</objectwrapper>
        <owner>process</owner>
        <method>
            <name>getFrames</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isCacheOptimization</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isShadowEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>getButtonTopMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setButtonLeftMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonLeftMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getUnableColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDimColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getDotRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHamHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getButtonHorizontalMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getShadowRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShadowColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearBuilders</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getButtonRadius</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setDotRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dotRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setHamHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hamHeight</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonHorizontalMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonHorizontalMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setUnableColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>unableColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonRightMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonRightMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getOnBoomListener</name>
            <comment></comment>
            <returntype>com.nightonke.boommenu.OnBoomListener</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setPieceInclinedMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceInclinedMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setCancelable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cancelable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setBoomEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShadowOffsetX</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>isBoomed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>setPieceVerticalMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceVerticalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonVerticalMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>isInFragment</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setEnabled</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getShadowOffsetY</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getButtonLeftMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getBuilders</name>
            <comment></comment>
            <returntype>java.util.ArrayList</returntype>
        </method>
        <method>
            <name>addBuilder</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bbb</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>setButtonPlaceAlignmentEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bpaenum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonRightMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getNormalColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHideDelay</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideDelay</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setHideRotateEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideRotateEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHighlightedColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShareLine2Color</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLine2Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShowDuration</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>getWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getPiecePlaceEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Piece.PiecePlaceEnum</returntype>
        </method>
        <method>
            <name>getHideScaleEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setOnBoomListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>onBoomListener</name>
                <type>com.nightonke.boommenu.OnBoomListener</type>
            </parameter>
        </method>
        <method>
            <name>setOrderEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>orderEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPiecePlaceEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ppenum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setHamWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hamWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getShareLine1Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHeight</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setHideMoveEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideMoveEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getPieceHorizontalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getButtonInclinedMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setHighlightedColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>highlightedColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setAutoHide</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>autoHide</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getHideMoveEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>getParent</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>setButtonTopMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonTopMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setEnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>enable</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setCacheOptimization</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cacheOptimization</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPieceVerticalMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getButtonPlaceAlignmentEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceAlignmentEnum</returntype>
        </method>
        <method>
            <name>setFrames</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>frames</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getHideDelay</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>getRotateDegree</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getShowScaleEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setShareLineWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLineWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>getBoomEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.BoomEnum</returntype>
        </method>
        <method>
            <name>setButtonVerticalMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonVerticalMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>removeBuilder</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>builder</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>setBottomHamButtonTopMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bottomHamButtonTopMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>setShadowOffsetX</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetX</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setShowScaleEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>showScaleEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setHideDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideDuration</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isBoomInWholeScreen</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isBackPressListened</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setShadowOffsetY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowOffsetY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>getHamWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShowDuration</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>showDuration</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>getShareLineWidth</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setShowDelay</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>showDelay</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>setTop</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>getBottomHamButtonTopMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>getShowRotateEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>setHideScaleEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>hideScaleEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTop</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getHideRotateEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>setShowRotateEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>showRotateEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setPieceHorizontalMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pieceHorizontalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isCancelable</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setBoomInWholeScreen</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>boomInWholeScreen</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setBackPressListened</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>backPressListened</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setVisible</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>isInList</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getVisible</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getShowDelay</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isAutoHide</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setHeight</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>getButtonBottomMargin</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>setShareLineLength</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLineLength</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getOrderEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.OrderEnum</returntype>
        </method>
        <method>
            <name>setButtonPlaceEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bpenum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isBackgroundEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setShowMoveEaseEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>showMoveEaseEnum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLeft</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>setShadowRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBackground</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>setInList</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>inList</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getButtonEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.ButtonEnum</returntype>
        </method>
        <method>
            <name>isRippleEffect</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setRotateDegree</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rotateDegree</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonBottomMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonBottomMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getHideDuration</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>getEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setTag</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>setBuilder</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>builder</name>
                <type>com.nightonke.boommenu.BoomButtons.BoomButtonBuilder</type>
            </parameter>
        </method>
        <method>
            <name>setBackgroundEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>backgroundEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setNormalColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>normalColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isReBoomed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setShadowEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shadowEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setDimColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>dimColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonEnum</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>benum</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setButtonRadius</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonRadius</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getTag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>getButtonPlaceEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.BoomButtons.ButtonPlaceEnum</returntype>
        </method>
        <method>
            <name>getShowMoveEaseEnum</name>
            <comment></comment>
            <returntype EnumType="true">com.nightonke.boommenu.Animation.EaseEnum</returntype>
        </method>
        <method>
            <name>getShareLineLength</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>setColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setRippleEffect</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>rippleEffect</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setShareLine1Color</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>shareLine1Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBuilders</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>builders</name>
                <type>java.util.ArrayList</type>
            </parameter>
        </method>
        <method>
            <name>setButtonInclinedMargin</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>buttonInclinedMargin</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>getShadowColor</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getShareLine2Color</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getBackground</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>setInFragment</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>inFragment</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>getPieceInclinedMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>getLeft</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
<class b4a_type="StaticCode">
        <name>ir.aminrezaei.ARBoomEnum</name>
		<shortname>ARBoomEnum</shortname>
        <owner>process</owner>
        <field>
            <name>PARABOLA_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PARABOLA_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PARABOLA_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PARABOLA_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RANDOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LINE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HORIZONTAL_THROW_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HORIZONTAL_THROW_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.ARButtonEnum</name>
        <shortname>ARButtonEnum</shortname>
        <owner>process</owner>
        <field>
            <name>SimpleCircle</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TextInsideCircle</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Ham</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TextOutsideCircle</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.ARButtonPlaceAlignmentEnum</name>
		<shortname>ARButtonPlaceAlignmentEnum</shortname>
        <owner>process</owner>
        <field>
            <name>BR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Center</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Left</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Top</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Right</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Bottom</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.ARButtonPlaceEnum</name>
        <shortname>ARButtonPlaceEnum</shortname>
        <owner>process</owner>
        <field>
            <name>SC_6_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_9_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Vertical</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_6_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_9_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_6_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_9_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Horizontal</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_5_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_6_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_5_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_6_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_7_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_3_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_4_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_5_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_3_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_5_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_6_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_2_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_3_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_3_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_4_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_2_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SC_8_7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.AREaseEnum</name>
        <shortname>AREaseEnum</shortname>
        <owner>process</owner>
        <field>
            <name>EaseInElastic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutSine</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInQuad</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutElastic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutElastic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutQuad</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutQuint</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutBounce</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInExpo</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutBack</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutCubic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutCirc</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutCubic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutExpo</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutCirc</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutQuart</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutQuart</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutBack</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInBounce</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutBounce</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInQuint</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Linear</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInBack</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutSine</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutQuint</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseOutExpo</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInOutQuad</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInCubic</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInQuart</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInCirc</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>EaseInSine</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.AROrderEnum</name>
        <shortname>AROrderEnum</shortname>
        <owner>process</owner>
        <field>
            <name>RANDOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DEFAULT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class b4a_type="StaticCode">
        <name>ir.aminrezaei.ARPiecePlaceEnum</name>
        <shortname>ARPiecePlaceEnum</shortname>
        <owner>process</owner>
        <field>
            <name>DOT_2_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_2_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_3_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_3_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_5_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_5_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_3_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_4_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_3_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_4_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_5_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_9_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_9_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_5_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_6_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_9_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_7_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_8_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>DOT_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>Share</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HAM_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <version>1.0</version>
    <author>Amin Rezaei</author>
</root>
