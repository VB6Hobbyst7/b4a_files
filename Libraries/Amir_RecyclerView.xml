<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.aghajari.layoutmanagers.AbstractSnapperLLM.LayoutParams</name>
        <owner>process</owner>
        <method>
            <name>isMarginRelative</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setMargins</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isItemRemoved</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>resolveLayoutDirection</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setBaseAttributes</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.TypedArray</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>isViewInvalid</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isItemChanged</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>viewNeedsUpdate</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>OrigWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LayoutDirection</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>OrigHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MarginEnd</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ViewLayoutPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ViewAdapterPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MarginStart</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>MATCH_PARENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>leftMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>topMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>rightMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FILL_PARENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>layoutAnimationParameters</name>
            <comment></comment>
            <returntype>android.view.animation.LayoutAnimationController.AnimationParameters</returntype>
        </field>
        <field>
            <name>bottomMargin</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>width</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>WRAP_CONTENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>height</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.rv.AdapterData</name>
        <owner>process</owner>
        <method>
            <name>NotifyItemChanged2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>payload</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemRangeRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemRangeInserted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemId</name>
            <comment>Return the stable ID for the item at &lt;u&gt;position&lt;/u&gt;. If HasStableIds
 would return false this method should return -1. The default implementation
 of this method returns -1.

 &lt;b&gt;Position : &lt;/b&gt; Adapter position to query
 &lt;b&gt;Return&lt;/b&gt; the stable ID of the item at position</comment>
            <returntype>long</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemViewType</name>
            <comment>Return the view type of the item at &lt;u&gt;position&lt;/u&gt; for the purposes
 of view recycling.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemInserted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemInserted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataSetChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NotifyDataItemChanged2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemMoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fromPosition</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>toPosition</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>HasObservers</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ItemCount</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasStableIds</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>hasStableIds</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns true if this adapter publishes a unique &lt;u&gt;long&lt;/u&gt; value that can
 act as a key for the item at a given position in the data set. If that item is relocated
 in the data set, the ID returned for that item should be the same.

 Return true if this adapter's items have stable IDs</comment>
        </property>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView</name>
        <shortname>Amir_RecyclerView</shortname>
        <objectwrapper>android.support.v7.widget.RecyclerView</objectwrapper>
        <owner>process</owner>
        <event>onScrollStateChanged (NewState As int)</event>
        <event>onScrolled (Dx As int,Dy As int)</event>
        <event>onScrolledToEnd</event>
        <event>onScrolledToStart</event>
        <event>onChildDetachedFromWindow (Item As Object)</event>
        <event>onChildAttachedToWindow (Item As Object)</event>
        <event>GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)</event>
        <event>onUpdateViews (Item As Object,Position As Int)</event>
        <method>
            <name>RemoveSpaceItemDecoration</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ComputeScrollExtent</name>
            <comment>Compute the extent of the scrollbar's thumb within the range.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment>&lt;b&gt; Don't Call This Method !&lt;/b&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DefaultItemAnimator</name>
            <comment>Use Default RecyclerView Item Animator</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollToPosition2</name>
            <comment>Speed : Milliseconds per inch or -1 for set default speed</comment>
            <returntype>com.aghajari.rv.Amir_RVSmoothScroller</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Speed</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetVisibleItemCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>LinearSnapHelper2</name>
            <comment>&lt;b&gt; Gravity : &lt;/b&gt;
 SnapHelper Gravity : START-LEFT | END-RIGHT | BOTTOM | TOP
 &lt;b&gt; EnableSnapLastItem : &lt;/b&gt;
 Enable snapping of the last item that's snappable.
 Note you can't see the last item completely if this is enabled.
 &lt;b&gt; Event : &lt;/b&gt; &lt;code&gt;
 RecyclerEventName_onSnap (Position As Int) &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Gravity</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EnableSnapLastItem</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollBy</name>
            <comment>Animate a scroll by the given amount of pixels along either axis.

  dx: Pixels to scroll horizontally
  dy: Pixels to scroll vertically</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OffsetChildrenHorizontal</name>
            <comment>Offset the bounds of all child views by dx pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Fling</name>
            <comment>Begin a standard fling with an initial velocity along each axis in pixels per second.

  velocityX: Initial horizontal velocity in pixels per second
  velocityY: Initial vertical velocity in pixels per second</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>velocityX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>velocityY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>UpdateViews</name>
            <comment>Update Visible Items and raise onUpdateViews event
 onUpdateViews (Item As Object,Position As Int)</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initializer</name>
            <comment>Initialize RecyclerView
  Don't Forgot to set RecyclerView Layout And RecyclerView Adapter !
 
 &lt;b&gt;&lt;i&gt; Layout : &lt;/i&gt;&lt;/b&gt;
 &lt;b&gt;Linear Layout Example : &lt;/b&gt; &lt;code&gt;
 Dim RecyclerView As Amir_RecyclerView
 RecyclerView.Initializer("Amir").ListView.ReverseLayout(True).Build &lt;/code&gt;
 &lt;b&gt;Grid Layout Example : &lt;/b&gt; &lt;code&gt;
 Dim RecyclerView As Amir_RecyclerView
 RecyclerView.Initializer("Amir").GridView(3).Build &lt;/code&gt;
 
 &lt;b&gt;&lt;i&gt; Adapters : &lt;/i&gt;&lt;/b&gt;
 &lt;b&gt; Show With Default Adapter : &lt;/b&gt; &lt;code&gt;
 RecyclerView.DefaultAdapter
 Sub Amir_onCreateViewHolder (Parent As Panel,ViewType As Int)
 End Sub
 Sub Amir_onBindViewHolder (Parent As Panel,Position As int)
 End Sub
 Sub Amir_GetItemCount As int
 Return 0
 End Sub&lt;/code&gt;
 &lt;b&gt; Use Custom Adapter : &lt;/b&gt; &lt;code&gt;
 RecyclerView.Adapter=CustomAdapter&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.Layouts</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>UpdateLayout</name>
            <comment>Update RecyclerView Layout
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.Initializer("Amir").GridView(3).Vertical.Build
 ...
 RecyclerView.UpdateLayout.GridView.SpanCount(4)
 &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.ULayouts</returntype>
        </method>
        <method>
            <name>PagerSnapHelper</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>InvalidateItemDecorations</name>
            <comment>Invalidates all ItemDecorations.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ScrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>StopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DefaultAdapter</name>
            <comment>Initialize Default Adapter With RecyclerView EventName
 
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.DefaultAdapter
 Sub EventName_onCreateViewHolder (Parent As Panel,ViewType As Int)
 End Sub
 Sub EventName_onBindViewHolder (Parent As Panel,Position As int)
 End Sub
 Sub EventName_GetItemCount As int
 Return 0
 End Sub&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter</returntype>
        </method>
        <method>
            <name>ScrollToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DividerHorizontal</name>
            <comment>For layout manager having vertical orientation to draw horizontal divider
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 RecyclerView.DividarHorizontal.Color(Colors.LightGray).Margin(4dip).Size(1dip)&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
        </method>
        <method>
            <name>FlingListener</name>
            <comment>Set a RecyclerView OnFlingListener for this RecyclerView. 
 &lt;b&gt; Events : &lt;/b&gt; &lt;code&gt;
 EventName_onFling (velocityX As int, velocityY As int) As Boolean &lt;/code&gt;
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.Initializer("Amir").ListView.Build
 ...
 RecyclerView.FlingListener(True)
 ...
 Sub Amir_onFling (velocityX As int, velocityY As int) As Boolean
 Log("velocityX:" &amp;velocityX&amp;" | velocityY:"&amp;velocityY)
 Return RecyclerView.Fling(velocityX,velocityY) 'Standard Fling
 End Sub &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StandardFlingIfMissingSub</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SpaceItemDecoration</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.SpaceBuilder</returntype>
        </method>
        <method>
            <name>ScrollToStartListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetVisibleItemPosition</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>First</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>Completely</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>StartNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>axes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemOffsetsListener</name>
            <comment>Enable or disable item offsets listener
 &lt;b&gt; Event : &lt;/b&gt;&lt;code&gt;
 EventName_GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)&lt;/code&gt;
 &lt;b&gt; Hidden Events : &lt;/b&gt;
 &lt;code&gt; EventName_onDraw (c As Canvas)&lt;/code&gt;
 &lt;code&gt; EventName_onDrawOver (c As Canvas)&lt;/code&gt;
 _________________________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt;
 Space between items : &lt;code&gt;
 RecyclerView.ItemOffsetsListener(True)
Sub RecyclerView_GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)
	OutRect.Top=10dip
	If Position = Recycler.Adapter2.ItemCount-1 Then
		OutRect.Bottom=10dip
	End If
	OutRect.Left=10dip
	OutRect.Right=10dip
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScrollRange</name>
            <comment>Compute the range that the scrollbar represents.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>PagerSnapHelper2</name>
            <comment>&lt;b&gt; Gravity : &lt;/b&gt;
 PagerSnapHelper Gravity : START-LEFT | END-RIGHT | BOTTOM | TOP
 &lt;b&gt; EnableSnapLastItem : &lt;/b&gt;
 Enable snapping of the last item that's snappable.
 Note you can't see the last item completely if this is enabled.
 &lt;b&gt; Event : &lt;/b&gt; &lt;code&gt;
 RecyclerEventName_onSnap (Position As Int) &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Gravity</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EnableSnapLastItem</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetRecyclerViewStyle</name>
            <comment>Set RecyclerView Theme
 Note : you can use this method before initialize recyclerview
 
 &lt;b&gt; Example &lt;i&gt;(Add ScrollBar)&lt;/i&gt;: &lt;/b&gt;
 Manifest :&lt;code&gt;
CreateResource(values,recycler.xml,&lt;resources&gt;
&lt;style name="ScrollbarRecyclerView" parent="android:Widget"&gt;
    &lt;item name="android:scrollbars"&gt;vertical&lt;/item&gt;
&lt;/style&gt; &lt;/resources&gt;)&lt;/code&gt;
  set theme to recyclerView : &lt;code&gt;
  RecyclerView.SetRecyclerViewStyle("ScrollbarRecyclerView")&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>StyleName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LinearSnapHelper</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScrollOffset</name>
            <comment>Compute the offset of the scrollbar's thumb within the range.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>OffsetChildrenVertical</name>
            <comment>Offset the bounds of all child views by dy pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DividerVertical</name>
            <comment>For layout manager having horizontal orientation to draw vertical divider
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 RecyclerView.DividarVertical.Color(Colors.LightGray).Margin(4dip).Size(1dip)&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
        </method>
        <method>
            <name>StopScroll</name>
            <comment>Stop any current scroll in progress, such as one started by 
 smoothScrollBy , fling or a touch-initiated fling.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SwitchLayout</name>
            <comment>Switch RecyclerView Layout
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.Initializer("Amir").GridView(3).Vertical.Build
 ...
 RecyclerView.SwitchLayout.ListView.Vertical.Build
 &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.Layouts</returntype>
        </method>
        <method>
            <name>SwapAdapter</name>
            <comment>Swaps the current adapter with the provided one.
 
 &lt;b&gt;Adapter: &lt;/b&gt;The new adapter to set, or null to set no adapter.
 &lt;b&gt;RemoveAndRecycleExistingViews: &lt;/b&gt; If set to true, RecyclerView will recycle all existing Views. 
 If adapters have stable ids and/or you want to animate the disappearing views, you may prefer to set this to false.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>RemoveAndRecycleExistingViews</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>ScrollToEndListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>MotionEventSplitting</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>split</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LayoutSpanCount</name>
            <returntype>int</returntype>
            <comment>Get Recycler Layout Span Count 
 -1 For Unknow And 1 For Linear Type</comment>
        </property>
        <property>
            <name>IsAttachedToWindow</name>
            <returntype>boolean</returntype>
            <comment>Returns true if RecyclerView is attached to window.</comment>
        </property>
        <property>
            <name>IsComputingLayout</name>
            <returntype>boolean</returntype>
            <comment>Returns whether RecyclerView is currently computing a layout.</comment>
        </property>
        <property>
            <name>ItemAnimatorManager</name>
            <returntype>com.aghajari.rv.utils.ItemAnimatorManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasNestedScrollingParent</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FlingVelocityMin</name>
            <returntype>int</returntype>
            <comment>get the minimum velocity to start a fling.</comment>
        </property>
        <property>
            <name>CenterItemPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Adapter</name>
            <returntype>android.support.v7.widget.RecyclerView.Adapter</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <comment>&lt;b&gt; set : &lt;/b&gt; Set a new adapter to provide child views on demand.
&lt;b&gt; get : &lt;/b&gt; Retrieves the previously set adapter or null if no adapter is set.</comment>
        </property>
        <property>
            <name>LayoutType</name>
            <returntype>int</returntype>
            <comment>Get RecyclerView Layout Type</comment>
        </property>
        <property>
            <name>PreserveFocusAfterLayout</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>preserveFocusAfterLayout</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether the RecyclerView should try to keep the same 
 Item focused after a layout calculation or not.</comment>
        </property>
        <property>
            <name>Listeners</name>
            <returntype>com.aghajari.rv.utils.Listeners</returntype>
            <comment>add or remove listener with new context</comment>
        </property>
        <property>
            <name>CanScrollVertically</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LayoutDirection</name>
            <returntype>int</returntype>
            <parameter>
                <name>LayoutDirection</name>
                <type>int</type>
            </parameter>
            <comment>&lt;b&gt; Support Rtl &lt;i&gt;(Manifest)&lt;/i&gt; : &lt;/b&gt;&lt;code&gt;
 SetApplicationAttribute(android:supportsRtl, "true") &lt;/code&gt;</comment>
        </property>
        <property>
            <name>Clickable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>clickable</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CenterItemView</name>
            <returntype>android.view.View</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasFixedSize</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>hasFixedSize</name>
                <type>boolean</type>
            </parameter>
            <comment>RecyclerView can perform several optimizations if it can know in advance that changes in
 adapter content cannot change the size of the RecyclerView itself.
 If your use of RecyclerView falls into this category, set this to true.</comment>
        </property>
        <property>
            <name>ItemAnimator</name>
            <returntype>android.support.v7.widget.RecyclerView.ItemAnimator</returntype>
            <parameter>
                <name>Animator</name>
                <type>android.support.v7.widget.RecyclerView.ItemAnimator</type>
            </parameter>
            <comment>gets the current ItemAnimator for this RecyclerView. or
 Sets the RecyclerView ItemAnimator that will handle animations 
 involving changes to the items in this RecyclerView.</comment>
        </property>
        <property>
            <name>ScrollSettings</name>
            <returntype>com.aghajari.rv.Amir_RecyclerView.ScrollBar</returntype>
            <comment>Scroll And ScrollBar Settings
 &lt;b&gt;Don't Forgot to Enable ScrollBars ! &lt;/b&gt;
 
 &lt;b&gt; Add ScrollBar : &lt;/b&gt;
 Manifest :&lt;code&gt;
CreateResource(values,recycler.xml,&lt;resources&gt;
&lt;style name="ScrollbarRecyclerView" parent="android:Widget"&gt;
    &lt;item name="android:scrollbars"&gt;vertical&lt;/item&gt;
&lt;/style&gt; &lt;/resources&gt;)&lt;/code&gt;
  set theme to recyclerView : &lt;code&gt;
  RecyclerView.SetRecyclerViewStyle("ScrollbarRecyclerView")&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Adapter2</name>
            <returntype>com.aghajari.rv.AdapterData</returntype>
            <comment>Manage adapter and notifi adapter
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 RecyclerView.Adapter2.NotifiDataSetChanged &lt;/code&gt;</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CanScrollHorizontally</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsAnimating</name>
            <returntype>boolean</returntype>
            <comment>Returns true if RecyclerView is currently running some animations.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasPendingAdapterUpdates</name>
            <returntype>boolean</returntype>
            <comment>Returns whether there are pending adapter updates which are not yet applied to the layout.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ClipToPadding</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>clipToPadding</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns whether this RecyclerView will clip its children to its padding, 
 and resize (but not clip) any EdgeEffect to the padded region, if padding 
 is present.</comment>
        </property>
        <property>
            <name>Baseline</name>
            <returntype>int</returntype>
            <comment>Return the offset of the RecyclerView's text baseline from the its top boundary.</comment>
        </property>
        <property>
            <name>About</name>
            <returntype>java.lang.String</returntype>
            <comment>&lt;b&gt;Amir_RecyclerView © Amir Hossein Aghajari&lt;/b&gt;</comment>
        </property>
        <property>
            <name>ItemViewCacheSize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment>Set the number of offscreen views to retain before adding them 
 to the potentially shared recycled view pool.</comment>
        </property>
        <property>
            <name>LongClickable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>longClickable</name>
                <type>boolean</type>
            </parameter>
            <comment>Enables or disables long click events for this view.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Utils</name>
            <returntype>com.aghajari.rv.Amir_RVUtils</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NestedScrollingEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollState</name>
            <returntype>int</returntype>
            <comment>Return the current scrolling state of the RecyclerView.</comment>
        </property>
        <property>
            <name>FlingVelocityMax</name>
            <returntype>int</returntype>
            <comment>get the maximum fling velocity used by this RecyclerView.</comment>
        </property>
        <property>
            <name>LayoutFrozen</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment>Enable or disable layout and scroll.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollingTouchSlop</name>
            <parameter>
                <name>slopConstant</name>
                <type>int</type>
            </parameter>
            <comment>Configure the scrolling touch slop for a specific use case. 
 Set up the RecyclerView's scrolling motion threshold based on common usages. 
 Valid arguments are TOUCH_SLOP_DEFAULT and TOUCH_SLOP_PAGING.</comment>
        </property>
        <field>
            <name>TOUCH_SLOP_DEFAULT</name>
            <comment>Constant for use with ScrollingTouchSlop. 
 Indicates that the RecyclerView should use the standard 
 touch slop for smooth, continuous scrolling.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment>Indicates scrolling along the horizontal axis.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_IDLE</name>
            <comment>The RecyclerView is not currently scrolling.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>long</returntype>
        </field>
        <field>
            <name>LAYOUT_STAGGERED_GRID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_UNKNOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_GRID</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_SETTLING</name>
            <comment>The RecyclerView is currently animating to a final position while not under
 outside control.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NO_POSITION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCH_SLOP_PAGING</name>
            <comment>Constant for use with ScrollingTouchSlop. 
 Indicates that the RecyclerView should use the standard 
 touch slop for scrolling widgets that snap to a page or 
 other coarse-grained barrier.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment>Indicates scrolling along the vertical axis.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_DRAGGING</name>
            <comment>The RecyclerView is currently being dragged by outside input such as user touch input.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment>&lt;b&gt; Manifest : &lt;/b&gt;&lt;code&gt;
 SetApplicationAttribute(android:supportsRtl, "true") &lt;/code&gt;</comment>
            <returntype>int</returntype>
        </field>
        <designerProperty>key:Layout, displayname:LayoutType, fieldtype:string, defaultvalue:ListView, list:ListView|GridView|StaggeredGridView|NoLayout</designerProperty>
        <designerProperty>key:Count, displayname:Span Count, fieldtype:int, defaultvalue:1, minrange:1, description:Set RecyclerView Grid Span Count</designerProperty>
        <designerProperty>key:Orientation, displayname:Orientation, fieldtype:string, defaultvalue:Vertical, list:Horizontal|Vertical</designerProperty>
        <designerProperty>key:ReverseLayout, displayname:Reverse Layout, fieldtype:boolean, defaultvalue:false</designerProperty>
        <designerProperty>key:StackFromEnd, displayname:StackFromEnd, fieldtype:boolean, defaultvalue:false</designerProperty>
        <designerProperty>key:SnapHelper, displayname:SnapHelper, fieldtype:string, defaultvalue:None, list:None|PagerSnapHelper|LinearSnapHelper</designerProperty>
        <designerProperty>key:LayoutDirection, displayname:Layout Direction, fieldtype:string, defaultvalue:Default, list:Default|RTL|LTR</designerProperty>
        <designerProperty>key:Adapter, displayname:Default Adapter, fieldtype:boolean, defaultvalue:false, description:Show RecyclerView With Default Adapter</designerProperty>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.ULayouts</name>
        <owner>process</owner>
        <method>
            <name>StaggeredGridView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
        </method>
        <method>
            <name>ListView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
        </method>
        <method>
            <name>GridView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.Layouts</name>
        <owner>process</owner>
        <method>
            <name>StaggeredGridView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
            <parameter>
                <name>SpanCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ListView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
        </method>
        <method>
            <name>NoLayout</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GridView</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>SpanCount</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</name>
        <owner>process</owner>
        <method>
            <name>Vertical</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
        </method>
        <method>
            <name>Horizontal</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
        </method>
        <method>
            <name>ReverseLayout</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GapStrategy</name>
            <comment>&lt;code&gt;"GAP_HANDLING_LAZY"&lt;/code&gt;
 &lt;code&gt;"GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS"&lt;/code&gt;
 &lt;code&gt;"GAP_HANDLING_NONE"&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
            <parameter>
                <name>GapStrategy</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SpanCount</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.StaggeredGridLayoutBuilder</returntype>
            <parameter>
                <name>SpanCount</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</name>
        <owner>process</owner>
        <method>
            <name>RecycleChildrenOnDetach</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Vertical</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
        </method>
        <method>
            <name>Horizontal</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
        </method>
        <method>
            <name>ReverseLayout</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>StackFromEnd</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment>Set RecyclerView Layout
 &lt;b&gt;Note : &lt;/b&gt; Don't call this when you want
 update recyclerview layout</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SpanCount</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>SpanCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollbarEnabled</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.GridLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.SpaceBuilder</name>
        <owner>process</owner>
        <method>
            <name>ListView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Space</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>AddSpaceAboveFirstItem</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>AddSpaceBelowLastItem</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ListView2</name>
            <comment>Set Custom Space for Linear Layout
 array as int (left,top,right,bottom)
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 	Recycler.SpaceItemDecoration.ListView2( _
	Array As Int(10dip,10dip,10dip,0),Array As Int(10dip,10dip,10dip,0),Array As Int(10dip,10dip,10dip,10dip))&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>FirstItem</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>Item</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>LastItem</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>GridView2</name>
            <comment>Set Custom Space for Grid Layout
 array as int (left,top,right,bottom)</comment>
            <returntype>void</returntype>
            <parameter>
                <name>IncludeEdge</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>FixedSize</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>FirstItem</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>FirstRow</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>Rows</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>LastRow</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>LastItem</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>GridView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>HorizontalSpacing</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>VerticalSpacing</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>includeEdge</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</name>
        <owner>process</owner>
        <method>
            <name>RecycleChildrenOnDetach</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Vertical</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
        </method>
        <method>
            <name>Horizontal</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
        </method>
        <method>
            <name>ReverseLayout</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>StackFromEnd</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment>Set RecyclerView Layout
 &lt;b&gt;Note : &lt;/b&gt; Don't call this when you want
 update recyclerview layout</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SmoothScrollbarEnabled</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerView.LinerLayoutBuilder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerView.ScrollBar</name>
        <owner>process</owner>
        <property>
            <name>AlwaysDrawHorizontalScrollbarTrack</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>a</name>
                <type>boolean</type>
            </parameter>
            <comment>Indicate whether the horizontal scrollbar track should always be drawn regardless of the
 extent. Defaults to false. Set to true if the track should always be drawn</comment>
        </property>
        <property>
            <name>OverScrollMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <comment>Set the over-scroll mode for this view.</comment>
        </property>
        <property>
            <name>ScrollBarStyle</name>
            <parameter>
                <name>style</name>
                <type>int</type>
            </parameter>
            <comment>Specify the style of the scrollbars. The scrollbars can be overlaid or inset. 
 When inset, they add to the padding of the view. And the scrollbars can be 
 drawn inside the padding area or on the edge of the view. For example, if a 
 view has a background drawable and you want to draw the scrollbars inside the 
 padding specified by the drawable, you can use SCROLLBARS_INSIDE_OVERLAY or 
 SCROLLBARS_INSIDE_INSET. If you want them to appear at the edge of the view, 
 ignoring the padding, then you can use SCROLLBARS_OUTSIDE_OVERLAY or 
 SCROLLBARS_OUTSIDE_INSET.</comment>
        </property>
        <property>
            <name>ScrollBarDelayBeforeFade</name>
            <returntype>int</returntype>
            <parameter>
                <name>scrollBarDefaultDelayBeforeFade</name>
                <type>int</type>
            </parameter>
            <comment>Define the delay before scrollbars fade.</comment>
        </property>
        <property>
            <name>HorizontalScrollbarThumbDrawable</name>
            <parameter>
                <name>d</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollbarFadingEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>fadeScrollbars</name>
                <type>boolean</type>
            </parameter>
            <comment>Define whether scrollbars will fade when the view is not scrolling.</comment>
        </property>
        <property>
            <name>VerticalScrollBarEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>VerticalScrollBarEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Define whether the vertical scrollbar should be drawn or not.</comment>
        </property>
        <property>
            <name>ScrollBarSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>scrollBarSize</name>
                <type>int</type>
            </parameter>
            <comment>Define the scrollbar size.</comment>
        </property>
        <property>
            <name>VerticalFadingEdgeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>vFadingEdgeEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Define whether the vertical edges should be faded when 
 this view is scrolled vertically.</comment>
        </property>
        <property>
            <name>HorizontalScrollbarTrackDrawable</name>
            <parameter>
                <name>d</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AlwaysDrawVerticalScrollbarTrack</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>a</name>
                <type>boolean</type>
            </parameter>
            <comment>Indicate whether the vertical scrollbar track should always be drawn regardless of the
 extent. Defaults to false. Set to true if the track should always be drawn</comment>
        </property>
        <property>
            <name>VerticalScrollbarPosition</name>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>Set the position of the vertical scroll bar.</comment>
        </property>
        <property>
            <name>VerticalScrollbarTrackDrawable</name>
            <parameter>
                <name>d</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollBarAlpha</name>
            <parameter>
                <name>Alpha</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>VerticalScrollbarThumbDrawable</name>
            <parameter>
                <name>d</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HorizontalScrollBarEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>setHorizontalScrollBarEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Define whether the horizontal scrollbar should be drawn or not.</comment>
        </property>
        <property>
            <name>HorizontalFadingEdgeEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>horizontalFadingEdgeEnabled</name>
                <type>boolean</type>
            </parameter>
            <comment>Define whether the horizontal edges should be faded when 
 this view is scrolled horizontally.</comment>
        </property>
        <field>
            <name>SCROLLBARS_INSIDE_INSET</name>
            <comment>The scrollbar style to display the scrollbars inside the padded area,
 increasing the padding of the view. The scrollbars will not overlap the
 content area of the view.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_RIGHT</name>
            <comment>Position the scroll bar along the right edge.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_LEFT</name>
            <comment>Position the scroll bar along the left edge.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_NEVER</name>
            <comment>Never allow a user to over-scroll this view.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_INSET</name>
            <comment>The scrollbar style to display the scrollbars at the edge of the view,
 increasing the padding of the view. The scrollbars will only overlap the
 background, if any.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_ALWAYS</name>
            <comment>Always allow a user to over-scroll this view, provided it is a
 view that can scroll.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_INSIDE_OVERLAY</name>
            <comment>The scrollbar style to display the scrollbars inside the content area,
 without increasing the padding. The scrollbars will be overlaid with
 translucency on the view's content.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBAR_POSITION_DEFAULT</name>
            <comment>Position the scroll bar at the default position as determined by the system.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>OVER_SCROLL_IF_CONTENT_SCROLLS</name>
            <comment>Allow a user to over-scroll this view only if the content is large
 enough to meaningfully scroll, provided it is a view that can scroll.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLLBARS_OUTSIDE_OVERLAY</name>
            <comment>The scrollbar style to display the scrollbars at the edge of the view,
 without increasing the padding. The scrollbars will be overlaid with
 translucency.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerViewPager</name>
        <shortname>Amir_RecyclerViewPager</shortname>
        <objectwrapper>android.support.v7.widget.RecyclerView</objectwrapper>
        <owner>process</owner>
        <event>onScrollStateChanged (NewState As int)</event>
        <event>onScrolled (Dx As int,Dy As int)</event>
        <event>onPageChanging (CurrentPage As Int,NewPage As Int)</event>
        <event>onPageChanged (PreviousPage As Int,NewPage As Int)</event>
        <event>GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)</event>
        <method>
            <name>ComputeScrollExtent</name>
            <comment>Compute the extent of the scrollbar's thumb within the range.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment>&lt;b&gt;Don't Call This Method !&lt;/b&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DefaultItemAnimator</name>
            <comment>Use Default RecyclerView Item Animator</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollToPosition2</name>
            <comment>Speed : Milliseconds per inch or -1 for set default speed</comment>
            <returntype>com.aghajari.rv.Amir_RVSmoothScroller</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Speed</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GoToPrevious</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SmoothScrollToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollBy</name>
            <comment>Animate a scroll by the given amount of pixels along either axis.

  dx: Pixels to scroll horizontally
  dy: Pixels to scroll vertically</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OffsetChildrenHorizontal</name>
            <comment>Offset the bounds of all child views by dx pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Fling</name>
            <comment>Begin a standard fling with an initial velocity along each axis in pixels per second.

  velocityX: Initial horizontal velocity in pixels per second
  velocityY: Initial vertical velocity in pixels per second</comment>
            <returntype>void</returntype>
            <parameter>
                <name>velocityX</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>velocityY</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initializer</name>
            <comment>Initialize View Pager
 Don't Forgot to set recyclerView Layout and recyclerView adapter !</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>UpdateLayout</name>
            <comment>update this recyclerview Layout</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>InvalidateItemDecorations</name>
            <comment>Invalidates all ItemDecorations.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ScrollBy</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>X</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Y</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>StopNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DefaultAdapter</name>
            <comment>Initialize Default Adapter With RecyclerView EventName
 
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.DefaultAdapter
 Sub EventName_onCreateViewHolder (Parent As Panel,ViewType As Int)
 End Sub
 Sub EventName_onBindViewHolder (Parent As Panel,Position As int)
 End Sub
 Sub EventName_GetItemCount As int
 Return 0
 End Sub&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter</returntype>
        </method>
        <method>
            <name>ScrollToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GoToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>FlingListener</name>
            <comment>Set a RecyclerView OnFlingListener for this RecyclerView. 
 &lt;b&gt; Events : &lt;/b&gt; &lt;code&gt;
 EventName_onFling (velocityX As int, velocityY As int) As Boolean &lt;/code&gt;
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 RecyclerView.Initializer("Amir").ListView.Build
 ...
 RecyclerView.FlingListener(True)
 ...
 Sub Amir_onFling (velocityX As int, velocityY As int) As Boolean
 Log("velocityX:" &amp;velocityX&amp;" | velocityY:"&amp;velocityY)
 Return RecyclerView.Fling(velocityX,velocityY) 'Standard Fling
 End Sub &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>StandardFlingIfMissingSub</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>StartNestedScroll</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>axes</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ItemOffsetsListener</name>
            <comment>Enable or disable item offsets listener
 &lt;b&gt; Event : &lt;/b&gt;&lt;code&gt;
 EventName_GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)&lt;/code&gt;
 &lt;b&gt; Hidden Events : &lt;/b&gt;
 &lt;code&gt; EventName_onDraw (c As Canvas)&lt;/code&gt;
 &lt;code&gt; EventName_onDrawOver (c As Canvas)&lt;/code&gt;
 _________________________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt;
 Space between items : &lt;code&gt;
 RecyclerView.ItemOffsetsListener(True)
Sub RecyclerView_GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)
	OutRect.Top=10dip
	If Position = Recycler.Adapter2.ItemCount-1 Then
		OutRect.Bottom=10dip
	End If
	OutRect.Left=10dip
	OutRect.Right=10dip
End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScrollRange</name>
            <comment>Compute the range that the scrollbar represents.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GoToNext</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ComputeScrollOffset</name>
            <comment>Compute the offset of the scrollbar's thumb within the range.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Horizontal</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>OffsetChildrenVertical</name>
            <comment>Offset the bounds of all child views by dy pixels.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>dy</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Indicator</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
        </method>
        <method>
            <name>StopScroll</name>
            <comment>Stop any current scroll in progress, such as one started by 
 smoothScrollBy , fling or a touch-initiated fling.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SwitchLayout</name>
            <comment>Set New Layout for this recyclerview</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
        </method>
        <method>
            <name>SwapAdapter</name>
            <comment>Swaps the current adapter with the provided one.
 
 &lt;b&gt;Adapter: &lt;/b&gt;The new adapter to set, or null to set no adapter.
 &lt;b&gt;RemoveAndRecycleExistingViews: &lt;/b&gt; If set to true, RecyclerView will recycle all existing Views. 
 If adapters have stable ids and/or you want to animate the disappearing views, you may prefer to set this to false.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>RemoveAndRecycleExistingViews</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IsAttachedToWindow</name>
            <returntype>boolean</returntype>
            <comment>Returns true if RecyclerView is attached to window.</comment>
        </property>
        <property>
            <name>IsComputingLayout</name>
            <returntype>boolean</returntype>
            <comment>Returns whether RecyclerView is currently computing a layout.</comment>
        </property>
        <property>
            <name>ItemAnimatorManager</name>
            <returntype>com.aghajari.rv.utils.ItemAnimatorManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HasNestedScrollingParent</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FlingVelocityMin</name>
            <returntype>int</returntype>
            <comment>get the minimum velocity to start a fling.</comment>
        </property>
        <property>
            <name>Adapter</name>
            <returntype>android.support.v7.widget.RecyclerView.Adapter</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <comment>&lt;b&gt;set : &lt;/b&gt; Set a new adapter to provide child views on demand.
 &lt;b&gt;get : &lt;/b&gt; Retrieves the previously set adapter or null if no adapter is set.</comment>
        </property>
        <property>
            <name>PreserveFocusAfterLayout</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>preserveFocusAfterLayout</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether the RecyclerView should try to keep the same 
 Item focused after a layout calculation or not.</comment>
        </property>
        <property>
            <name>CurrentPageView</name>
            <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Listeners</name>
            <returntype>com.aghajari.rv.utils.Listeners</returntype>
            <comment>add or remove listener with new context</comment>
        </property>
        <property>
            <name>LayoutDirection</name>
            <returntype>int</returntype>
            <parameter>
                <name>LayoutDirection</name>
                <type>int</type>
            </parameter>
            <comment>&lt;b&gt; Support Rtl &lt;i&gt;(Manifest)&lt;/i&gt; : &lt;/b&gt;&lt;code&gt;
 SetApplicationAttribute(android:supportsRtl, "true") &lt;/code&gt;</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasFixedSize</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>hasFixedSize</name>
                <type>boolean</type>
            </parameter>
            <comment>RecyclerView can perform several optimizations if it can know in advance that changes in
 adapter content cannot change the size of the RecyclerView itself.
 If your use of RecyclerView falls into this category, set this to true.</comment>
        </property>
        <property>
            <name>ItemAnimator</name>
            <returntype>android.support.v7.widget.RecyclerView.ItemAnimator</returntype>
            <parameter>
                <name>Animator</name>
                <type>android.support.v7.widget.RecyclerView.ItemAnimator</type>
            </parameter>
            <comment>gets the current ItemAnimator for this RecyclerView. or
 Sets the RecyclerView ItemAnimator that will handle animations 
 involving changes to the items in this RecyclerView.</comment>
        </property>
        <property>
            <name>Adapter2</name>
            <returntype>com.aghajari.rv.AdapterData</returntype>
            <comment>Manage adapter and notifi adapter
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 RecyclerView.Adapter2.NotifiDataSetChanged &lt;/code&gt;</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IsAnimating</name>
            <returntype>boolean</returntype>
            <comment>Returns true if RecyclerView is currently running some animations.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasPendingAdapterUpdates</name>
            <returntype>boolean</returntype>
            <comment>Returns whether there are pending adapter updates which are not yet applied to the layout.</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ClipToPadding</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>clipToPadding</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns whether this RecyclerView will clip its children to its padding, 
 and resize (but not clip) any EdgeEffect to the padded region, if padding 
 is present.</comment>
        </property>
        <property>
            <name>Baseline</name>
            <returntype>int</returntype>
            <comment>Return the offset of the RecyclerView's text baseline from the its top boundary.</comment>
        </property>
        <property>
            <name>ItemViewCacheSize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment>Set the number of offscreen views to retain before adding them 
 to the potentially shared recycled view pool.</comment>
        </property>
        <property>
            <name>ShowOnlyOneItem</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CurrentPage</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Utils</name>
            <returntype>com.aghajari.rv.Amir_RVUtils</returntype>
            <comment></comment>
        </property>
        <property>
            <name>NestedScrollingEnabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollState</name>
            <returntype>int</returntype>
            <comment>Return the current scrolling state of the RecyclerView.</comment>
        </property>
        <property>
            <name>FlingVelocityMax</name>
            <returntype>int</returntype>
            <comment>get the maximum fling velocity used by this RecyclerView.</comment>
        </property>
        <property>
            <name>LayoutFrozen</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment>Enable or disable layout and scroll.</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TriggerOffset</name>
            <returntype>float</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ScrollingTouchSlop</name>
            <parameter>
                <name>slopConstant</name>
                <type>int</type>
            </parameter>
            <comment>Configure the scrolling touch slop for a specific use case. 
 Set up the RecyclerView's scrolling motion threshold based on common usages. 
 Valid arguments are TOUCH_SLOP_DEFAULT and TOUCH_SLOP_PAGING.</comment>
        </property>
        <field>
            <name>TOUCH_SLOP_DEFAULT</name>
            <comment>Constant for use with ScrollingTouchSlop. 
 Indicates that the RecyclerView should use the standard 
 touch slop for smooth, continuous scrolling.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_INHERIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_HORIZONTAL</name>
            <comment>Indicates scrolling along the horizontal axis.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_IDLE</name>
            <comment>The RecyclerView is not currently scrolling.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NO_ID</name>
            <comment></comment>
            <returntype>long</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LOCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_SETTLING</name>
            <comment>The RecyclerView is currently animating to a final position while not under
 outside control.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NO_POSITION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TOUCH_SLOP_PAGING</name>
            <comment>Constant for use with ScrollingTouchSlop. 
 Indicates that the RecyclerView should use the standard 
 touch slop for scrolling widgets that snap to a page or 
 other coarse-grained barrier.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_AXIS_VERTICAL</name>
            <comment>Indicates scrolling along the vertical axis.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SCROLL_STATE_DRAGGING</name>
            <comment>The RecyclerView is currently being dragged by outside input such as user touch input.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_LTR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LAYOUT_DIRECTION_RTL</name>
            <comment>&lt;b&gt; Manifest : &lt;/b&gt;&lt;code&gt;
 SetApplicationAttribute(android:supportsRtl, "true") &lt;/code&gt;</comment>
            <returntype>int</returntype>
        </field>
        <designerProperty>key:Orientation, displayname:Orientation, fieldtype:string, defaultvalue:Horizontal, list:Horizontal|Vertical</designerProperty>
        <designerProperty>key:ReverseLayout, displayname:Reverse Layout, fieldtype:boolean, defaultvalue:false</designerProperty>
        <designerProperty>key:StackFromEnd, displayname:StackFromEnd, fieldtype:boolean, defaultvalue:false</designerProperty>
        <designerProperty>key:SnapMode, displayname:Snap Mode, fieldtype:string, defaultvalue:Center, list:None|Start|Center|End</designerProperty>
        <designerProperty>key:LayoutDirection, displayname:Layout Direction, fieldtype:string, defaultvalue:Default, list:Default|RTL|LTR</designerProperty>
        <designerProperty>key:Adapter, displayname:Default Adapter, fieldtype:boolean, defaultvalue:false, description:Show RecyclerView With Default Adapter</designerProperty>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RecyclerViewPager.Builder</name>
        <owner>process</owner>
        <method>
            <name>RecycleChildrenOnDetach</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Vertical</name>
            <comment>set Orientation To VERTICAL</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
        </method>
        <method>
            <name>Horizontal</name>
            <comment>set Orientation To HORIZONTAL</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
        </method>
        <method>
            <name>ReverseLayout</name>
            <comment>RTL Page</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>StackFromEnd</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SnapMode</name>
            <comment>Snap Mode
 None : 0
 Start : 1
 Center : 2
 End : 3</comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>SnapMode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SmoothScrollbarEnabled</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RecyclerViewPager.Builder</returntype>
            <parameter>
                <name>enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVAdapter</name>
        <shortname>Amir_RVAdapter</shortname>
        <objectwrapper>com.aghajari.rv.Amir_RVAdapter.Amir_RVAdapterWrapper</objectwrapper>
        <owner>process</owner>
        <event>GetItemCount As Int</event>
        <event>onBindViewHolder (Parent As Panel,Position As int)</event>
        <event>onCreateViewHolder (Parent As Panel,ViewType As int)</event>
        <event>GetItemViewType (Position As int) As Int</event>
        <event>GetItemId (Position As Int) As Long</event>
        <event>GetLoopPosition (Parent As Panel,LoopPosition As Int,Position As Int)</event>
        <event>onViewRecycled (Parent As Panel,Position As Int)</event>
        <event>onItemClick (Parent As Panel,Position As int)</event>
        <event>onItemLongClick (Parent As Panel,Position As int)</event>
        <event>onItemTouch (Parent As Panel,Position As int,Action As int,X As Float,Y As Float)</event>
        <event>onLoadAnimation (Parent As Panel,Position As int)</event>
        <method>
            <name>EnableAdapterDataObserver</name>
            <comment>Add Adapter Data Change Events
 &lt;code&gt; EventName_onChanged As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeChanged (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeInserted (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeRemoved (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Ripple</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
        </method>
        <method>
            <name>IntoRecyclerView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize New Adapter for RecyclerView</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>LoopMode</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>LoopMode</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>LOOP_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOOP_FULL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOOP_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</name>
        <owner>process</owner>
        <method>
            <name>Background</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Hover</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>hover</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Alpha</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>FadeDuration</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>fadeDuration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Duration</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Persistent</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>persistent</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RoundedCorners</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>radiusDp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Overlay</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>overlay</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Diameter</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>diameterDp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DelayClick</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVAdapter.RippleBuilder</returntype>
            <parameter>
                <name>delayClick</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVMultiAdapter</name>
        <shortname>Amir_RVMultiAdapter</shortname>
        <objectwrapper>com.aghajari.rv.Amir_RVMultiAdapter.MixAdapter</objectwrapper>
        <owner>process</owner>
        <method>
            <name>RemoveAdapter</name>
            <comment>Remove Adapter</comment>
            <returntype>void</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getItemViewType</name>
            <comment>Return the view type of the item at &lt;u&gt;position&lt;/u&gt; for the purposes
 of view recycling.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>NotifyDataItemRangeRemoved</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NotifyDataItemRangeInserted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment>Clear Adapters</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>getItemId</name>
            <comment>Return the stable ID for the item at &lt;u&gt;position&lt;/u&gt;. If HasStableIds
 would return false this method should return -1. The default implementation
 of this method returns -1.

 &lt;b&gt;Position : &lt;/b&gt; Adapter position to query
 &lt;b&gt;Return&lt;/b&gt; the stable ID of the item at position</comment>
            <returntype>long</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetAdapterIndex</name>
            <comment>Get Index Of Adapter</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
        </method>
        <method>
            <name>AddAdapter2</name>
            <comment>Add Adapter</comment>
            <returntype>void</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataItemInserted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyDataSetChanged</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveAdapter2</name>
            <comment>Remove Adapter</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IntoRecyclerView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>GetAdapter</name>
            <comment>Get Adapter</comment>
            <returntype>android.support.v7.widget.RecyclerView.Adapter</returntype>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>NotifyItemRangeChanged</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>positionStart</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>itemCount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddAdapter</name>
            <comment>Add Adapter</comment>
            <returntype>void</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
        </method>
        <property>
            <name>HasObservers</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Size</name>
            <returntype>int</returntype>
            <comment>Get Adapters Size</comment>
        </property>
        <property>
            <name>DefaultAdapter</name>
            <returntype>int</returntype>
            <parameter>
                <name>AdapterIndex</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HasStableIds</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>hasStableIds</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns true if this adapter publishes a unique &lt;u&gt;long&lt;/u&gt; value that can
 act as a key for the item at a given position in the data set. If that item is relocated
 in the data set, the ID returned for that item should be the same.

 Return true if this adapter's items have stable IDs</comment>
        </property>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVSmoothScroller</name>
        <shortname>Amir_RVSmoothScroller</shortname>
        <comment>RecyclerView Linear Smooth Scroller</comment>
        <owner>process</owner>
        <event>onStopSmoothScrolling</event>
        <event>onStartSmoothScrolling</event>
        <event>CalculateSpeedPerPixel (DefaultSpeed As Float) As Float</event>
        <event>CalculateTimeForDeceleration (Dx As Int,DefaultTime As Int) As Int</event>
        <event>CalculateTimeForScrolling (Dx As Int,DefaultTime As Int) As Int</event>
        <method>
            <name>DefaultTimeForDeceleration</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CalculateSpeedPerPixel</name>
            <comment>Calculates the scroll speed.
 return : The time (in ms) it should take for each pixel. 
 For instance, if returned value is2 ms, it means scrolling 
 1000 pixels with LinearInterpolation should take 2 seconds.</comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>com.aghajari.rv.Amir_RecyclerViewPager</type>
            </parameter>
        </method>
        <method>
            <name>Stop</name>
            <comment>Stops running the SmoothScroller in each animation callback.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Start</name>
            <comment>Start Smooth Scroll</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DefaultTimeForScrolling</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InstantScrollToPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DefaultSpeedPerPixel</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>SetSpeedPerPixel</name>
            <comment>Speed : Milliseconds per inch or -1 for set default speed</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Speed</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>com.aghajari.rv.Amir_RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>CalculateTimeForDeceleration</name>
            <comment>Calculates the time for deceleration so that transition from 
 LinearInterpolator toDecelerateInterpolator looks smooth.
 dx : Distance to scroll
 return : Time for DecelerateInterpolator to smoothly traverse 
 the distance when transitioningfrom LinearInterpolation</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CalculateTimeForScrolling</name>
            <comment>Calculates the time it should take to scroll the given distance (in pixels)
 dx : Distance in pixels that we want to scroll
 return : Time in milliseconds</comment>
            <returntype>int</returntype>
            <parameter>
                <name>dx</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>IsRunning</name>
            <returntype>boolean</returntype>
            <comment>return True if SmoothScroller is currently active</comment>
        </property>
        <property>
            <name>IsPendingInitialRun</name>
            <returntype>boolean</returntype>
            <comment>Returns true if SmoothScroller has been started but has not received the first
 animation callback yet.
 return True if this SmoothScroller is waiting to start</comment>
        </property>
        <property>
            <name>TargetPosition</name>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>set target adapter position for scroll</comment>
        </property>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVUtils</name>
        <shortname>Amir_RVUtils</shortname>
        <owner>process</owner>
        <method>
            <name>GetSpanSize</name>
            <comment>Check Position In Grid Layout</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Recycler</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>EnableAdapterDataObserver</name>
            <comment>Add Adapter Data Change Events
 &lt;code&gt; EventName_onChanged As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeChanged (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeInserted (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;
 &lt;code&gt; EventName_onItemRangeRemoved (PositionStart As int,ItemCount As int) As Boolean&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RippleToView</name>
            <comment>Add View To Ripple Parent
 
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 'Add Ripple
 Dim Label As Label
 Label.Initialize("")
 Parent.AddView(Label,0,0,Parent.Width,Parent.Height)
 Utils.RippleToView(Label).Color(Colors.Gray).Build
 
 'Get View
 Dim Label As Label = Utils.GetRippleView(Parent.GetView(0))&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>View</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>GetTextWidth</name>
            <comment>Get Measure String Width</comment>
            <returntype>float</returntype>
            <parameter>
                <name>Label</name>
                <type>android.widget.TextView</type>
            </parameter>
        </method>
        <method>
            <name>FilterSearchList</name>
            <comment>Search in Adapter Data With TypeName
 List of data can instanceof Map , String , CustomType
 if Data value is String pass "" for TypeName</comment>
            <returntype>com.aghajari.rv.utils.Filter</returntype>
            <parameter>
                <name>TypeName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>DataCopy</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>GetRippleView</name>
            <comment>Get View From Ripple Parent</comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>RippleView</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>GetTextHeight</name>
            <comment>Get Measure Multiline Text (CharSequence) Height</comment>
            <returntype>int</returntype>
            <parameter>
                <name>Label</name>
                <type>android.widget.TextView</type>
            </parameter>
            <parameter>
                <name>Text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>GetRVLayoutName</name>
            <comment>Get Simple Name Of RecyclerView Layout Manager Class Name</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>ViewIndexToAdapterPosition</name>
            <comment>Get Adapter Position From Visible View Index</comment>
            <returntype>int</returntype>
            <parameter>
                <name>rv</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ViewIndexToItemObject</name>
            <comment>Get Item Object From Visible View Index</comment>
            <returntype>android.view.View</returntype>
            <parameter>
                <name>rv</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsLastRow</name>
            <comment>Check Position In Grid Layout</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Recycler</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>GetViewHolder</name>
            <comment>Get RecyclerView ViewHolder.
 Note that you can use this method just in onBindViewHolder event!</comment>
            <returntype>com.aghajari.rv.utils.ViewHolderData</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>GetLoopPosition</name>
            <comment>Get Loop Position from Item Position on Amir_RVLoopAdapter (FullLoop)
 return -1 if adapter is not in full loop mode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Current</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetLoopPrevPosition</name>
            <comment>Get Previous Loop Position of Item Position on Amir_RVLoopAdapter (FullLoop)
 return -1 if adapter is not in full loop mode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Current</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsFirstRow</name>
            <comment>Check Position In Grid Layout</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Recycler</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
        </method>
        <method>
            <name>GetParentFromItemObject</name>
            <comment>Get Recycler View Item Parent From Object if Using Default 
 RecyclerView Adapter (Amir_RVAdapter)</comment>
            <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
            <parameter>
                <name>RecyclerView</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
            <parameter>
                <name>Item</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>GetLoopNextPosition</name>
            <comment>Get Next Loop Position of Item Position on Amir_RVLoopAdapter (FullLoop)
 return -1 if adapter is not in full loop mode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Current</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ViewIndexToViewHolder</name>
            <comment>Get View Holder From Visible View Index</comment>
            <returntype>com.aghajari.rv.utils.ViewHolderData</returntype>
            <parameter>
                <name>rv</name>
                <type>android.support.v7.widget.RecyclerView</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetPositionFromLoop</name>
            <comment>Get Real Item Position from Loop Position
 return -1 if adapter is not in Loop mode</comment>
            <returntype>int</returntype>
            <parameter>
                <name>adapter</name>
                <type>android.support.v7.widget.RecyclerView.Adapter</type>
            </parameter>
            <parameter>
                <name>LoopPosition</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.Amir_RVUtils.RippleBuilder</name>
        <owner>process</owner>
        <method>
            <name>InAdapter</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>inAdapter</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Background</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Duration</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Persistent</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>persistent</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RoundedCorners</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>radiusDp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Hover</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>hover</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Alpha</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>FadeDuration</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>fadeDuration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Overlay</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>overlay</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Diameter</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>diameterDp</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DelayClick</name>
            <comment></comment>
            <returntype>com.aghajari.rv.Amir_RVUtils.RippleBuilder</returntype>
            <parameter>
                <name>delayClick</name>
                <type>boolean</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.DividerH</name>
        <owner>process</owner>
        <method>
            <name>ShowLastDivider</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Drawable</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>PositionInsideItem</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>positionInsideItem</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ColorProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerColor (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Paint</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>paint</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>SizeProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerSize (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>VisibilityProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerVisibility (Position As Int) As Boolean &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Margin2</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Margin</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>horizontalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>MarginProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerLeftMargin (Position As Int) As Int &lt;/code&gt;
 &lt;code&gt; EventName_DividerRightMargin (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerH</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.DividerP</name>
        <owner>process</owner>
        <method>
            <name>IndicatorHeight</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IndicatorItemLength</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>ItemLength</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Padding</name>
            <comment>Set Padding indicator lines from top or bottom</comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>PaddingSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IndicatorStrokeWidth</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>StrokeWidth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IndicatorItemPadding</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>Padding</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ActiveColor</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Gravity</name>
            <comment>Set Indicator Position. BOTTOM | TOP
 Default is Bottom.</comment>
            <returntype>com.aghajari.rv.utils.DividerP</returntype>
            <parameter>
                <name>Gravity</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>OffsetGravity</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.DividerV</name>
        <owner>process</owner>
        <method>
            <name>ShowLastDivider</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
        </method>
        <method>
            <name>Size</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Color</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Drawable</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
        </method>
        <method>
            <name>PositionInsideItem</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>positionInsideItem</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>ColorProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerColor (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Paint</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>paint</name>
                <type>android.graphics.Paint</type>
            </parameter>
        </method>
        <method>
            <name>SizeProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerSize (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>VisibilityProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerVisibility (Position As Int) As Boolean &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Margin2</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>Top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Bottom</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Margin</name>
            <comment></comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>VerticalMargin</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>MarginProvider</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt; EventName_DividerTopMargin (Position As Int) As Int &lt;/code&gt;
 &lt;code&gt; EventName_DividerBottomMargin (Position As Int) As Int &lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.DividerV</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.Filter</name>
        <owner>process</owner>
        <method>
            <name>Matches</name>
            <comment>Check content matches with pattern</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>Pattern</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsMatch</name>
            <comment>Check content matches with pattern</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>pattern</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>Equal</name>
            <comment>Select for Equal contents</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Matcher</name>
            <comment>Check content matches with pattern
 pass index -1 for default</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>pattern</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Contains</name>
            <comment>Check content contains value</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>SearchFor</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>StartsWith</name>
            <comment>Check content starts with value</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>StartsWith</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EndsWith</name>
            <comment>Check content ends with value</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>EndsWith</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.ItemAnimatorManager</name>
        <owner>process</owner>
        <method>
            <name>StartAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ItemObject</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>RunPendingAnimations</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>EndAnimation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ItemObject</name>
                <type>android.view.View</type>
            </parameter>
        </method>
        <method>
            <name>EndAnimations</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>ChangeDuration</name>
            <returntype>long</returntype>
            <parameter>
                <name>changeDuration</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MoveDuration</name>
            <returntype>long</returntype>
            <parameter>
                <name>moveDuration</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IsRunning</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RemoveDuration</name>
            <returntype>long</returntype>
            <parameter>
                <name>RemoveDuration</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AddDuration</name>
            <returntype>long</returntype>
            <parameter>
                <name>addDuration</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.aghajari.rv.utils.Listeners</name>
        <owner>process</owner>
        <method>
            <name>ClearOnChildAttachStateChangeListeners</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveOnChildAttachStateChangeListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>android.support.v7.widget.RecyclerView.OnChildAttachStateChangeListener</type>
            </parameter>
        </method>
        <method>
            <name>RemoveOnItemTouchListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>android.support.v7.widget.RecyclerView.OnItemTouchListener</type>
            </parameter>
        </method>
        <method>
            <name>SetOnFlingListener</name>
            <comment>This class defines the behavior of fling if the developer wishes to handle it.
 &lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onFling (arg0 As Int,arg1 As Int) &lt;/code&gt;</comment>
            <returntype>android.support.v7.widget.RecyclerView.OnFlingListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddItemOffsets</name>
            <comment>Add Item Offset Listener.
 Index : index of item decoration. pass -1 for default
 &lt;b&gt; Event : &lt;/b&gt;&lt;code&gt;
 EventName_GetItemOffsets (OutRect As Rect,Item As Object,Position As Int)&lt;/code&gt;
 &lt;b&gt; Hidden Events : &lt;/b&gt;
 &lt;code&gt; EventName_onDraw (c As Canvas)&lt;/code&gt;
 &lt;code&gt; EventName_onDrawOver (c As Canvas)&lt;/code&gt;</comment>
            <returntype>com.aghajari.rv.utils.ItemOffsets</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ClearOnScrollListeners</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveOnScrollListener</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>listener</name>
                <type>android.support.v7.widget.RecyclerView.OnScrollListener</type>
            </parameter>
        </method>
        <method>
            <name>AddOnItemTouchListener</name>
            <comment>An OnItemTouchListener allows the application to intercept touch events in progress at 
 the view hierarchy level of the RecyclerView before those touch events are considered 
 for RecyclerView's own scrolling behavior.  
 &lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onInterceptTouchEvent (Action As Int,X As Float,Y As Float,MotionEvent As Object) As Boolean&lt;/code&gt;
 &lt;code&gt;EventName_onRequestDisallowInterceptTouchEvent (arg As Boolean)&lt;/code&gt;
 &lt;code&gt;EventName_onTouchEvent (Action As Int,X As Float,Y As Float,MotionEvent As Object)&lt;/code&gt;</comment>
            <returntype>android.support.v7.widget.RecyclerView.OnItemTouchListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddOnChildAttachStateChangeListener</name>
            <comment>A Listener interface that can be attached to a RecylcerView to get notified whenever 
 a ViewHolder is attached to or detached from RecyclerView
 &lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onChildViewAttachedToWindow (ItemObject As Object)&lt;/code&gt;
 &lt;code&gt;EventName_onChildViewDetachedFromWindow (ItemObject As Object)&lt;/code&gt;</comment>
            <returntype>android.support.v7.widget.RecyclerView.OnChildAttachStateChangeListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddOnScrollListener</name>
            <comment>An OnScrollListener can be added to a RecyclerView to receive messages when a 
 scrolling event has occurred on that RecyclerView.  
 &lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onScrollStateChanged (NewState As Int) &lt;/code&gt;
 &lt;code&gt;EventName_onScrolled (Dx As Int,Dy As Int)&lt;/code&gt;</comment>
            <returntype>android.support.v7.widget.RecyclerView.OnScrollListener</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.rv.utils.ViewHolderData</name>
        <owner>process</owner>
        <property>
            <name>isRecyclable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>e</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ItemViewType</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>anywheresoftware.b4a.objects.PanelWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ItemObject</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OldPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ItemId</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LayoutPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>AdapterPosition</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
    </class>
    <version>1.02</version>
    <author>AmirHosseinAghajari</author>
    <dependsOn>com.android.support:support-v4</dependsOn>
    <dependsOn>com.android.support:recyclerview-v7</dependsOn>
</root>
