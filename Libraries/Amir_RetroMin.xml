<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>aghajari.retromin.Amir_CallBack</name>
        <shortname>Amir_CallBack</shortname>
        <comment>&lt;b&gt; Call : &lt;/b&gt;
 An invocation of a Retrofit method that sends a request to a webserver and returns a response.
 Each call yields its own HTTP request and response pair. Use {@link #clone} to make multiple
 calls with the same parameters to the same webserver; this may be used to implement polling or
 to retry a failed call.

 Calls may be executed synchronously with  Execute, or asynchronously with Enqueue. 
 In either case the call can be canceled at any time with Cancel. A call that
 is busy writing its request or reading its response may receive a  IOException this is
 working as designed.
 
 &lt;b&gt; CallBack : &lt;/b&gt;
 Communicates responses from a server or offline requests. One and only one method will be
 invoked in response to a given request.

 Callback methods are executed using the  Retrofit callback executor. When none is
 specified, the following defaults are used:
 
 Android: Callbacks are executed on the application's main (UI) thread.
 JVM: Callbacks are executed on the background thread which performed the request.</comment>
        <owner>process</owner>
        <event>onFailure (Call as Amir_CallBack,Message as String)


'Invoked for a received HTTP response.
</event>
        <event>onResponse (Call as Amir_CallBack,Response as Amir_RetrofitResponse,Body as Amir_ResponseBody)
'Invoked when a network exception occurred talking to the server or when an unexpected&#xd;
'exception occurred creating the request or processing the response.
</event>
        <method>
            <name>isCanceled</name>
            <comment>True if was called.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isExecuted</name>
            <comment>Returns true if this call has been either Executed or Enqueued.
 It is an error to execute or enqueue a call more than once.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Execute</name>
            <comment>Synchronously send the request and return its response.
 _________________________________________________________
 &lt;b&gt; NetworkOnMainThread exception : &lt;/b&gt;&lt;i&gt;You Should Disable Strict Mode!&lt;/i&gt;
 _________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 DisableStrictMode 
 
 Dim Call As Amir_CallBack = _ 
 Retrofit.RequestWithCallback(Null,"Get",Array ("URL",CreateMap()))
 Dim Response As Amir_RetrofitResponse = Call.Execute
 Log(Response.isSuccessful)

 Sub DisableStrictMode
  Dim jo As JavaObject
  jo.InitializeStatic("android.os.Build.VERSION")
 If jo.GetField("SDK_INT") &gt; 9 Then
  Dim policy As JavaObject
  policy = policy.InitializeNewInstance("android.os.StrictMode.ThreadPolicy.Builder", Null)
  policy = policy.RunMethodJO("permitAll", Null).RunMethodJO("build", Null)
  Dim sm As JavaObject
  sm.InitializeStatic("android.os.StrictMode").RunMethod("setThreadPolicy", Array(policy))
 End If
End Sub &lt;/code&gt;</comment>
            <returntype>aghajari.retromin.Amir_RetrofitResponse</returntype>
        </method>
        <method>
            <name>Cancel</name>
            <comment>Cancel this call. An attempt will be made to cancel in-flight calls, and if the call has not
 yet been executed it never will be.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Enqueue</name>
            <comment>Asynchronously send the request and notify callback of its response or if an error
 occurred talking to the server, creating the request, or processing the response.
 _____________________________________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
	Dim Call As Amir_CallBack = _
Retrofit.RequestWithCallback(Null,"Post",Array ("URL",PARAMS))
Call.Enqueue("Amir",Null)

Sub Amir_onResponse (Call As Amir_CallBack,Response As Amir_RetrofitResponse,Body As Amir_ResponseBody)
	If Response.isSuccessful Then
		Log(Body.String)
		Else
		Log(Response.ErrorBody.String)
	End If
End Sub
Sub Amir_onFailure (Call As Amir_CallBack,Message As String)
	Log(Message)
End Sub &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>RequestHeaders</name>
            <comment>The original HTTP RequestHeaders.</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Call</name>
                <type>retrofit2.Call</type>
            </parameter>
        </method>
        <method>
            <name>Clone</name>
            <comment>Create a new, identical call to this one which can be enqueued or executed even if this call
 has already been.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>RequestMethod</name>
            <returntype>java.lang.String</returntype>
            <comment>The original HTTP Request Method Name.</comment>
        </property>
        <property>
            <name>RequestHeadersNames</name>
            <returntype>java.lang.Object[]</returntype>
            <comment>The original HTTP RequestHeaders Names Array as String.</comment>
        </property>
        <property>
            <name>RequestBody</name>
            <returntype>okhttp3.RequestBody</returntype>
            <comment>The original HTTP RequestBody.</comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_NetworkInfo</name>
        <owner>process</owner>
        <property>
            <name>TypeName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnectedOrConnecting</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DescribeContents</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DetailedState</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ExtraInfo</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsFailover</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Reason</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Type</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsRoaming</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SubtypeName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsAvailable</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Subtype</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <field>
            <name>STATE_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_SCANNING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_DISCONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_SUSPENDED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_AUTHENTICATING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_FAILED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATE_SUSPENDED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATE_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATE_DISCONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_CONNECTED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_DISCONNECTED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_IDLE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATE_CONNECTED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_VERIFYING_POOR_LINK</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_BLOCKED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>STATE_UNKNOWN</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>DETAILED_OBTAINING_IPADDR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>aghajari.retromin.Amir_ResponseBody</name>
        <shortname>Amir_ResponseBody</shortname>
        <comment>this class is for get Information of Data Request 
 
 A one-shot stream from the origin server to the client application with the raw bytes of the
 response body. Each response body is supported by an active connection to the webserver. This
 imposes both obligations and limits on the client application.

 &lt;h3&gt;The response body must be closed.&lt;/h3&gt;</comment>
        <owner>process</owner>
        <method>
            <name>Import</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ResponseBody</name>
                <type>okhttp3.ResponseBody</type>
            </parameter>
        </method>
        <method>
            <name>Convert</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_ResponseBody.AsClass</returntype>
        </method>
        <method>
            <name>isReleased</name>
            <comment>Check the Response .</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Release</name>
            <comment>Release This Response.
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 if RespnseBody.isReleased=False then
 RespnseBody.Release
 End if &lt;/code&gt;</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Bytes</name>
            <returntype>byte[]</returntype>
            <comment>Returns the response as a byte array.

 This method loads entire response body into memory. If the response body is very large this
 may trigger an  OutOfMemoryError. Prefer to stream the response body if this is a
 possibility for your response.</comment>
        </property>
        <property>
            <name>Type</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the Content-Type header for this body.</comment>
        </property>
        <property>
            <name>SubType</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the Content-SubType header for this body.</comment>
        </property>
        <property>
            <name>byteStream</name>
            <returntype>java.io.InputStream</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Length</name>
            <returntype>long</returntype>
            <comment>Returns the number of bytes in that will returned by  bytes, or byteStream, or
 -1 if unknown.</comment>
        </property>
        <property>
            <name>Charset</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>String</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the response as a string decoded with the charset of the Content-Type header. If that
 header is either absent or lacks a charset, this will attempt to decode the response body in
 accordance to its BOM or UTF-8. Closes  ResponseBody automatically.

 This method loads entire response body into memory. If the response body is very large this
 may trigger an  OutOfMemoryError. Prefer to stream the response body if this is a
 possibility for your response.
 
 &lt;b&gt; What is BOM? : Byte order mark | &lt;/b&gt;&lt;link&gt;English|https://en.wikipedia.org/wiki/Byte_order_mark&lt;/link&gt; | &lt;link&gt;Farsi|https://fa.wikipedia.org/wiki/%D9%86%D8%B4%D8%A7%D9%86_%D8%AA%D8%B1%D8%AA%DB%8C%D8%A8_%D8%A8%D8%A7%DB%8C%D8%AA&lt;/link&gt;</comment>
        </property>
        <property>
            <name>sourceStream</name>
            <returntype>java.io.InputStream</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_ResponseBody.AsClass</name>
        <owner>process</owner>
        <method>
            <name>As</name>
            <comment></comment>
            <returntype>aghajari.retromin.Converter</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetrofitResponse</name>
        <shortname>Amir_RetrofitResponse</shortname>
        <comment>An HTTP response.</comment>
        <owner>process</owner>
        <method>
            <name>Import</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Body</name>
                <type>retrofit2.Response</type>
            </parameter>
        </method>
        <method>
            <name>BodyResponse</name>
            <comment>The deserialized response body of a successful response.</comment>
            <returntype>aghajari.retromin.Amir_ResponseBody</returntype>
        </method>
        <method>
            <name>isSuccessful</name>
            <comment>Returns true if Code is in the range [200..300).</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>ErrorBody</name>
            <comment>The raw response body of an unsuccessful response.</comment>
            <returntype>aghajari.retromin.Amir_ResponseBody</returntype>
        </method>
        <method>
            <name>Export</name>
            <comment>Get Response</comment>
            <returntype>retrofit2.Response</returntype>
        </method>
        <method>
            <name>BodyObject</name>
            <comment>The deserialized response body of a successful response.</comment>
            <returntype>java.lang.Object</returntype>
        </method>
        <method>
            <name>BodyRetrofitResponse</name>
            <comment>The deserialized response body of a successful response.</comment>
            <returntype>aghajari.retromin.Amir_RetrofitResponse</returntype>
        </method>
        <method>
            <name>getHeader</name>
            <comment>HTTP headers.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>HeadersNames</name>
            <returntype>java.lang.Object[]</returntype>
            <comment>HTTP headers Names.</comment>
        </property>
        <property>
            <name>Message</name>
            <returntype>java.lang.String</returntype>
            <comment>HTTP status message or null if unknown.</comment>
        </property>
        <property>
            <name>Raw</name>
            <returntype>okhttp3.Response</returntype>
            <comment>The raw response from the HTTP client.</comment>
        </property>
        <property>
            <name>Code</name>
            <returntype>int</returntype>
            <comment>HTTP status code.</comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetroMin</name>
        <shortname>Amir_RetroMin</shortname>
        <comment>&lt;b&gt; Simple Of Amir_Retrofit : Amir_RetroMin &lt;/b&gt;
 &lt;b&gt;Retrofit Version : 2.5.0 &lt;/b&gt;
  Retrofit , Novate
 &lt;i&gt;&lt;b&gt;hi.&lt;/b&gt; Tnx For Select &lt;u&gt;Amir_Retrofit&lt;/u&gt; Library.&lt;/i&gt;
 &lt;b&gt;What is Retrofit ?&lt;/b&gt;
Retrofit is a REST Client for Android by Square. It makes it 
relatively easy to retrieve and upload JSON (or other structured data) 
via a REST based webservice. In Retrofit you configure which converter 
is used for the data serialization.
Retrofit uses the OkHttp library for HTTP requests 
but it's really faster then okHttp.

 &lt;b&gt;Requests : &lt;/b&gt;
 &lt;b&gt; Post &lt;/b&gt;
 &lt;b&gt; Get &lt;/b&gt;
 &lt;b&gt; Delete &lt;/b&gt;
 &lt;b&gt; Put &lt;/b&gt;
 &lt;b&gt; PostFrom &lt;/b&gt;
 And Another Requests</comment>
        <owner>process</owner>
        <event>onError (Message As String)</event>
        <event>onSucess (Path As String,Name As String,FileSize As Long)</event>
        <event>onProgress (Progress As Int,FileSizeDownloaded As Long,TotalSize As Long)</event>
        <permission>android.permission.ACCESS_NETWORK_STATE</permission>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>Delete</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Options</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>PostMultipart</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Files</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>DownloadMin2</name>
            <comment>&lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onError (Message As String)&lt;/code&gt;
 &lt;code&gt;EventName_onSucess (Path As String,Name As String,FileSize As Long)&lt;/code&gt;
 &lt;code&gt;EventName_onProgress (Progress As Int,FileSizeDownloaded As Long,TotalSize As Long)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Builder</name>
                <type>aghajari.retromin.MiniBuilder</type>
            </parameter>
        </method>
        <method>
            <name>PostForm</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Download</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>UploadMultipart</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>PartMap</name>
                <type>java.util.Map</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>okhttp3.MultipartBody.Part</type>
            </parameter>
        </method>
        <method>
            <name>CookieManager</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_RetroMin.CookieManager</returntype>
        </method>
        <method>
            <name>Cookie</name>
            <comment>get Cookie Information
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 Dim L as List=Retrofit.CookieManager.LoadForRequest("Url")
 Log(Retrofit.Cookie(L.get(0)).Domain)&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.Amir_RetroMin.CookieItem</returntype>
            <parameter>
                <name>Cookie</name>
                <type>okhttp3.Cookie</type>
            </parameter>
        </method>
        <method>
            <name>Head</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Post</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>UploadFiles</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Files</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>PutBody</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Json</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Json</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DisableStrictMode</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Put</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>RB</name>
            <comment></comment>
            <returntype>aghajari.retromin.RequestBodyCreate</returntype>
        </method>
        <method>
            <name>DownloadMin</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>PostBody</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>UploadFile</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>NewBuilder</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>Initialize2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>BaseUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Utils</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_Utils</returntype>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>DeleteBody</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>PatchBody</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Download2</name>
            <comment>&lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt;EventName_onError (Message As String)&lt;/code&gt;
 &lt;code&gt;EventName_onSucess (Path As String,Name As String,FileSize As Long)&lt;/code&gt;
 &lt;code&gt;EventName_onProgress (Progress As Int,FileSizeDownloaded As Long,TotalSize As Long)&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>Patch</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_CallBack</returntype>
            <parameter>
                <name>Url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Maps</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Cache</name>
            <comment>Caches HTTP and HTTPS responses to the filesystem so they may be reused,
  saving time and bandwidth.	
 &lt;b&gt; Return Retrofit CacheManager &lt;/b&gt;</comment>
            <returntype>aghajari.retromin.Amir_RetroMin.CacheManager</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetroMin.CookieItem</name>
        <owner>process</owner>
        <method>
            <name>Matches</name>
            <comment>Returns true if this cookie should be included on a request to  url. In addition to this
 check callers should also confirm that this cookie has not expired.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Path</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns this cookie's path. This cookie matches URLs prefixed with path segments that match
 this path's segments. For example, if this path is  /foo this cookie matches requests to
 /foo and /foo/bar, but not  / or  /football.</comment>
        </property>
        <property>
            <name>Secure</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this cookie should be limited to only HTTPS requests.</comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns a possibly-empty string with this cookie's value.</comment>
        </property>
        <property>
            <name>HostOnly</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this cookie's domain should be interpreted as a single host name, or false if
 it should be interpreted as a pattern. This flag will be false if its Set-Cookie header
 included a domain attribute.

 For example, suppose the cookie's domain is example.com. If this flag is true it
 matches &lt;b&gt;only&lt;/b&gt; example.com. If this flag is false it matches
 example.com and all subdomains including api.example.com, www.example.com, and
 beta.api.example.com.</comment>
        </property>
        <property>
            <name>Persistent</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this cookie does not expire at the end of the current session.</comment>
        </property>
        <property>
            <name>Domain</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns the cookie's domain. If  hostOnly returns true this is the only domain that
 matches this cookie; otherwise it matches this domain and all subdomains.</comment>
        </property>
        <property>
            <name>ExpiresAt</name>
            <returntype>long</returntype>
            <comment>Returns the time that this cookie expires, in the same format as 
 System currentTimeMillis. This is December 31, 9999 if the cookie is 
 not persistent, in which case it will expire at the end of the current session.

 This may return a value less than the current time, in which case the cookie is already
 expired. Webservers may return expired cookies as a mechanism to delete previously set cookies
 that may or may not themselves be expired.</comment>
        </property>
        <property>
            <name>HttpOnly</name>
            <returntype>boolean</returntype>
            <comment>Returns true if this cookie should be limited to only HTTP APIs. In web browsers this prevents
 the cookie from being accessible to scripts.</comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns a non-empty string with this cookie's name.</comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetroMin.CookieManager</name>
        <owner>process</owner>
        <method>
            <name>ParseCookie</name>
            <comment>Attempt to parse a  Set-Cookie HTTP header value  setCookie as a cookie. Returns
 null if  setCookie is not a well-formed cookie.
 &lt;b&gt; Return : &lt;/b&gt;okhttp3.Cookie</comment>
            <returntype>okhttp3.Cookie</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>setCookie</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>LoadAll</name>
            <comment>Return List of Cookies (okhttp3.Cookie)</comment>
            <returntype>java.util.List</returntype>
        </method>
        <method>
            <name>LoadForRequest</name>
            <comment>Get List Of okhttp3.Cookie</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ParseAllCookie</name>
            <comment>Returns all of the cookies from a set of HTTP response headers.
 &lt;b&gt; Return : &lt;/b&gt;List of okhttp3.Cookie</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>headers</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>ClearSession</name>
            <comment>Clear all the session cookies while maintaining the persisted ones.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SaveFromResponse</name>
            <comment>this method uses filterPersistentCookies
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 Retrofit.CookieManager.SaveFromResponse("Url",Retrofit.CacheManager.ParseAllCookie("Url",Headers))&lt;/code&gt;

Cookies : List of okhttp3.Cookie</comment>
            <returntype>void</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Cookies</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment>Clear all the cookies from persistence and from the cache.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetroMin.CacheManager</name>
        <owner>process</owner>
        <method>
            <name>Delete</name>
            <comment>Closes the cache and deletes all of its stored values. This will delete all files in the cache
 directory including files that weren't created by the cache.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>writeSuccessCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>size</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>flush</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isClosed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DirectoryDeleteOnExit</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>maxSize</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Initialize the cache. This will include reading the journal files from the storage and building
 up the necessary in-memory cache information.

 The initialization time may vary depending on the journal file size and the current actual
 cache size. The application needs to be aware of calling this function during the
 initialization phase and preferably in a background worker thread.

 Note that if the application chooses to not call this method to initialize the cache. By
 default, the okhttp will perform lazy initialization upon the first usage of the cache.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>EvictAll</name>
            <comment>Deletes all values stored in the cache. In-flight writes to the cache will complete normally,
 but the corresponding responses will not be stored.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>writeAbortCount</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <property>
            <name>UrlsIterator</name>
            <returntype>aghajari.retromin.Amir_RetroMin.CacheManager.urls</returntype>
            <comment>Returns an iterator over the URLs in this cache. This iterator doesn't throw 
 ConcurrentModificationException, but if new responses are added while iterating, their URLs
 will not be returned. If existing responses are evicted during iteration, they will be absent
 (unless they were already returned).

 The iterator supports  Iterator remove. Removing a URL from the iterator evicts
 the corresponding response from the cache. Use this to evict selected responses.
____________________________________________________________________________________________
&lt;b&gt;Example : &lt;/b&gt;&lt;code&gt;
Do While Retrofit.Cache.UrlsIterator.hasNext
Log(Retrofit.Cache.UrlsIterator.Next)
Loop&lt;/code&gt;</comment>
        </property>
        <property>
            <name>DirectoryPath</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DirectoryFreeSpace</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DirectoryUsableSpace</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>UrlsList</name>
            <returntype>java.util.List</returntype>
            <comment>&lt;b&gt;Example : &lt;/b&gt;&lt;code&gt;
Dim L as List= Retrofit.Cache.UrlsList
for i = 0 to L.size-1
Log(L.get(i))
Next&lt;/code&gt;</comment>
        </property>
        <property>
            <name>DirectoryName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DirectoryTotalSpace</name>
            <returntype>long</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DirectoryDelete</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Directory</name>
            <returntype>java.io.File</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_RetroMin.CacheManager.urls</name>
        <owner>process</owner>
        <method>
            <name>Next</name>
            <comment>Returns the next element in the iteration.
&lt;b&gt;Returns:&lt;/b&gt; the next element in the iteration</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>hasNext</name>
            <comment>Returns true if the iteration has more elements. (In other words,
 returns true if next() would return an element rather than throwing 
 an exception.)
&lt;b&gt;Returns:&lt;/b&gt; true if the iteration has more elements</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes from the underlying collection the last element returned 
 by this iterator (optional operation). This method can be called 
 only once per call to next(). The behavior of an iterator is 
 unspecified if the underlying collection is modified while the 
 iteration is in progress in any way other than by calling this method.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.Amir_Utils</name>
        <shortname>Amir_RetrofitUtils</shortname>
        <comment>&lt;b&gt; Network Utils &lt;/b&gt;
 Check the Network State. get Local Ip. get Network Mode. Check Proxy And...
 &lt;b&gt; File Utils &lt;/b&gt;
 get File Information . get File Name From Uri . get Thumbnail Bitmap ...</comment>
        <owner>process</owner>
        <method>
            <name>IsLocal</name>
            <comment>Whether the URI is a local one.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetThumbnailFromUri</name>
            <comment>Attempt to retrieve the thumbnail of given Uri from the MediaStore. 
 This should not be called on the UI thread.
 &lt;i&gt;You can only retrieve thumbnails for images and videos.&lt;/i&gt;
 &lt;b&gt; Kind : &lt;/b&gt;
 Mini Kind = 1 [0x1]
 Full Screen Kind = 2 [0x2]
 Micro Kind = 3 [0x3]</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Kind</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsMediaUri</name>
            <comment>Return True if Uri is a MediaStore Uri.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetNetworkInfo</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_Utils.NetworkInfoState</returntype>
        </method>
        <method>
            <name>GetThumbnailFromFile</name>
            <comment>Attempt to retrieve the thumbnail of given File from the MediaStore. 
 This should not be called on the UI thread.
 &lt;i&gt; Cann't Accept DirAssets !&lt;/i&gt;
 &lt;i&gt;You can only retrieve thumbnails for images and videos.&lt;/i&gt;
 &lt;b&gt; Kind : &lt;/b&gt;
 Mini Kind = 1 [0x1]
 Full Screen Kind = 2 [0x2]
 Micro Kind = 3 [0x3]</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Kind</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsNetworkAvailable2</name>
            <comment>check NetworkAvailable
 &lt;i&gt;Active Network + Mobile + Wifi&lt;/i&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Is3G</name>
            <comment>check is3G</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>context2</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>URLEncoder</name>
            <comment>Translates a string into application/x-www-form-urlencoded format using
 a specific encoding scheme. This method uses the supplied encoding scheme
 to obtain the bytes for unsafe characters.
 &lt;b&gt;Note:&lt;/b&gt; The World Wide Web Consortium Recommendation states that UTF-8
 should be used. Not doing so may introduce incompatibilites. 
___________________________________________________________________________
&lt;b&gt; Parameters:&lt;/b&gt;
 string : String to be translated.
 enc : The name of a supported character encoding.
&lt;b&gt; Returns:&lt;/b&gt;
 the translated String.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>enc</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsDownloadsDocument</name>
            <comment>Whether the Uri authority is DownloadsProvider.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetNetState</name>
            <comment>NET_CNNT_BAIDU_OK (NetworkAvailable) = 1
 NET_CNNT_BAIDU_TIMEOUT (no NetworkAvailable) = 2
 NET_NOT_PREPARE (Net no ready) = 3
 NET_ERROR (net error) = 4</comment>
            <returntype>int</returntype>
            <parameter>
                <name>context2</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>IsExternalStorageDocument</name>
            <comment>Whether the Uri authority is ExternalStorageProvider.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetUrlWithoutParameters</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetMimeTypeFromUri</name>
            <comment>return The MIME type for the given Uri.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetMimeTypeFromFile</name>
            <comment>return The MIME type for the given file.
 &lt;i&gt; Cann't Accept DirAssets !&lt;/i&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetMediaType</name>
            <comment>&lt;i&gt; Cann't Accept DirAssets !&lt;/i&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsGooglePhotosUri</name>
            <comment>Whether the Uri authority is Google Photos.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetReadableFileSize</name>
            <comment>Get the file size in a human-readable string.
 &lt;i&gt;KB,MB,GB&lt;/i&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ConvertResponseBody</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_Utils.AsClass</returntype>
            <parameter>
                <name>ResponseBody</name>
                <type>aghajari.retromin.Amir_ResponseBody</type>
            </parameter>
        </method>
        <method>
            <name>IsWifiEnabled</name>
            <comment>is wifi on</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>CheckNetwork</name>
            <comment>Check Network Enabled</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetFileNameWithURL</name>
            <comment>&lt;b&gt;Example : &lt;/b&gt;&lt;code&gt;
 Dim Body as Amir_RetrofitUtils
 Log(Body.getFileNameWithURL("File Link"))&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>url</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsWifi</name>
            <comment>isWifi</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>context2</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>IsNetworkAvailable</name>
            <comment>check NetworkAvailable 
 &lt;i&gt;Active Network &lt;/i&gt;</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>context2</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>IsMediaDocument</name>
            <comment>Whether the Uri authority is MediaProvider.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>URLDecoder</name>
            <comment>Decodes a application/x-www-form-urlencoded string using a specific
 encoding scheme. The supplied encoding is used to determine what 
 characters are represented by any consecutive sequences of the form "%xy". 
 &lt;b&gt;Note:&lt;/b&gt;The World Wide Web Consortium Recommendation states that UTF-8
 should be used. Not doing so may introduce incompatibilites.
___________________________________________________________________________
&lt;b&gt; Parameters:&lt;/b&gt;
 string : the String to decode
 enc : The name of a supported character encoding.
&lt;b&gt; Returns:&lt;/b&gt;
 the newly decoded String</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>string</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>enc</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Is2G</name>
            <comment>is2G</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>context2</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>CheckProxy</name>
            <comment>Check Proxy
____________________________________________________
 &lt;b&gt;Type&lt;/b&gt; : 
 HTTP : 1
 DIRECT : 2
 SOCKS : 3</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ProxyHost</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>proxyPort</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetThumbnailFromUri2</name>
            <comment>Attempt to retrieve the thumbnail of given Uri from the MediaStore. 
 This should not be called on the UI thread.
 &lt;i&gt;You can only retrieve thumbnails for images and videos.&lt;/i&gt;
 &lt;b&gt; Kind : &lt;/b&gt;
 Mini Kind = 1 [0x1]
 Full Screen Kind = 2 [0x2]
 Micro Kind = 3 [0x3]</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MimeType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Kind</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Errors</name>
            <returntype>aghajari.retromin.Amir_Utils.Errors</returntype>
            <comment>Get Errors Code</comment>
        </property>
        <property>
            <name>IsRoaming</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnectedOrConnectingToWiFi</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LocalIpAddress</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnectedToWiFi</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnectedOrConnectingToVpn</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsConnectedToVpn</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_Utils.NetworkInfoState</name>
        <owner>process</owner>
        <property>
            <name>Bluetooth</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MobileDUN</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>VPN</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MobileSUPL</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Ethernet</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MobileHIPRI</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MobileMMS</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Wimax</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ActiveNetwork</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Wifi</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Dummy</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Mobile</name>
            <returntype>aghajari.retromin.Amir_NetworkInfo</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.Amir_Utils.Errors</name>
        <owner>process</owner>
        <field>
            <name>INTERNAL_SERVER_ERROR</name>
            <comment>500</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>REQUEST_TIMEOUT</name>
            <comment>408</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NULL</name>
            <comment>-100</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NOT_FOUND</name>
            <comment>404</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_ERROR</name>
            <comment>1008</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORBIDDEN</name>
            <comment>403</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_ERROR</name>
            <comment>1005</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HANDEL_ERRROR</name>
            <comment>417</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>HTTP_ERROR</name>
            <comment>1003</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TIMEOUT_ERROR</name>
            <comment>1006</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ACCESS_DENIED</name>
            <comment>302</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NETWORD_ERROR</name>
            <comment>1002</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>BAD_GATEWAY</name>
            <comment>502</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SSL_NOT_FOUND</name>
            <comment>1007</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UNAUTHORIZED</name>
            <comment>401</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>SERVICE_UNAVAILABLE</name>
            <comment>503</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GATEWAY_TIMEOUT</name>
            <comment>504</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UNKNOWN</name>
            <comment>1000</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>PARSE_ERROR</name>
            <comment>1001</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>aghajari.retromin.Amir_Utils.AsClass</name>
        <owner>process</owner>
        <method>
            <name>As</name>
            <comment></comment>
            <returntype>aghajari.retromin.Converter</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.Converter</name>
        <owner>process</owner>
        <method>
            <name>InputStream</name>
            <comment></comment>
            <returntype>java.io.InputStream</returntype>
        </method>
        <method>
            <name>BigFile</name>
            <comment>&lt;b&gt; Events : &lt;/b&gt;&lt;code&gt;
 EventName_onProgress(Progress As Int,Transfered As Long,total As Long)&lt;/code&gt;</comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Drawable</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
        </method>
        <method>
            <name>String</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>Double</name>
            <comment></comment>
            <returntype>double</returntype>
        </method>
        <method>
            <name>Integer</name>
            <comment></comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Float</name>
            <comment></comment>
            <returntype>float</returntype>
        </method>
        <method>
            <name>Bytes</name>
            <comment></comment>
            <returntype>byte[]</returntype>
        </method>
        <method>
            <name>ShortFile</name>
            <comment></comment>
            <returntype>java.io.File</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Bitmap</name>
            <comment></comment>
            <returntype>android.graphics.Bitmap</returntype>
        </method>
        <method>
            <name>Long</name>
            <comment></comment>
            <returntype>long</returntype>
        </method>
        <method>
            <name>Boolean</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Chars</name>
            <comment></comment>
            <returntype>char[]</returntype>
        </method>
        <method>
            <name>Short</name>
            <comment></comment>
            <returntype>short</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.MiniBuilder</name>
        <shortname>Amir_RetroMinBuilder</shortname>
        <comment>&lt;i&gt;Instance which uses the interface and the MiniBuilder API which 
 allows defining the URL end point for the HTTP operation.&lt;/i&gt;
 First Setting Of Amir_Retrofit
 You Should Initialize Amir_Retrofit With This MiniBuilder
 &lt;code&gt;Retrofit.Initialize(MiniBuilder)&lt;/code&gt;</comment>
        <owner>process</owner>
        <method>
            <name>FollowSslRedirects</name>
            <comment>Configure this client to follow redirects from HTTPS to HTTP and from HTTP to HTTPS.

 If unset, protocol redirects will be followed. This is different than the built-in
 HttpURLConnection's default.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>followProtocolRedirects</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>OkHttpTLSCompat</name>
            <comment>Fix OpenSSL Handshake on PreLollipop OS</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>ContentType</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ContentType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment>Create New Retrofit MiniBuilder
 
 &lt;b&gt;Base URL required.&lt;/b&gt;&lt;code&gt;MiniBuilder.baseUrl("http://lcoders.ir")&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>addConverterFactory</name>
            <comment>&lt;b&gt;Custom&lt;/b&gt;
 Add converter factory for serialization and deserialization of objects.
 &lt;i&gt; You Should Use This Method With inline Java!&lt;/i&gt;
 ______________________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt; &lt;i&gt;This is a Sample for GsonConverterFactory&lt;/i&gt;&lt;code&gt;
 Dim J as JavaObject : J.InitializeContext
 MiniBuilder.addConverterFactory(J.RunMethod("getNewGsonConverterFactory",Null))
 
 #if java
 import retrofit2.converter.gson.GsonConverterFactory;
 public GsonConverterFactory getNewGsonConverterFactory(){
 return GsonConverterFactory.create();
 }
 #End if&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Factory</name>
                <type>retrofit2.Converter.Factory</type>
            </parameter>
        </method>
        <method>
            <name>addCookie</name>
            <comment>open sync default Cookie

 Provides &lt;strong&gt;policy&lt;/strong&gt; and &lt;strong&gt;persistence&lt;/strong&gt; for HTTP cookies.
 As policy, implementations of this interface are responsible for selecting which cookies to
 accept and which to reject. A reasonable policy is to reject all cookies, though that may
 interfere with session-based authentication schemes that require cookies.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>isCookie</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>aghajari.retromin.Amir_RetroMin</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>DeflateRequest</name>
            <comment>&lt;b&gt;Deflate : &lt;/b&gt;Compresses the HTTP request body. Many webservers can't handle this! 

 &lt;b&gt;noHeader :&lt;/b&gt; True indicates that no ZLIB header should be written.</comment>
            <returntype>aghajari.retromin.MiniBuilder.DeflaterMiniBuilder</returntype>
            <parameter>
                <name>noHeader</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>connectTimeout</name>
            <comment>Sets the default connect timeout for new connections. A value of 0 means 
no timeout, otherwise values must be between 1 and Integer.MAX_VALUE 
when converted to milliseconds.
Default : 15</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Client</name>
            <comment>The HTTP client used for requests. default OkHttpClient 
 
 How To use ? For Example I have a Retrofit And i 
 Initialize It . My Retrofit Name is R1 &lt;code&gt;
 Dim MiniBuilder2 as Amir_MiniBuilder
 MiniBuilder2.Initialize
 MiniBuilder2.Client(R1.Client)
 Dim R2 As Amir_Retrofit
 R2.Initialize(MiniBuilder2)&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>client</name>
                <type>okhttp3.OkHttpClient</type>
            </parameter>
        </method>
        <method>
            <name>addSSL</name>
            <comment>Sets the handler that can accept cookies from incoming HTTP responses 
 and provides cookies to outgoing HTTP requests. 
If unset, no cookies will be accepted nor provided.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>hosts</name>
                <type>java.lang.String[]</type>
            </parameter>
            <parameter>
                <name>certificates</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>addCache</name>
            <comment>open default Cache</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>isCache</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>skipSSLSocketFactory</name>
            <comment>skipSSLSocketFactory</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>isSkip</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>KeyCache</name>
            <comment>Default = Amir_Retrofit</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>KEY_CACHE</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RunOkHttpMiniBuilderMethod</name>
            <comment>Run OkHttpMiniBuilder Method
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 MiniBuilder.RunOkHttpMiniBuilderMethod("followRedirects",Array (true))&lt;/code&gt;</comment>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>MethodName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Params</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>HostnameVerifier</name>
            <comment>HostnameVerifier : &lt;b&gt;New HostnameVerifier&lt;/b&gt;
&lt;b&gt; Events : &lt;/b&gt;
&lt;code&gt; EventName_verify (hostname as string,session as Object) as boolean &lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AutoEvict</name>
            <comment>&lt;b&gt; AutoEvict : &lt;/b&gt;
 Delete Cache before start Request
 
 &lt;b&gt; You Should Call This Method Before 
 AddCache And AddResponseCache ! &lt;/b&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>addInterceptor</name>
            <comment>&lt;b&gt;Custom&lt;/b&gt;
 Returns a modifiable list of interceptors that observe a single network
 request and response. These interceptors must call Interceptor.Chain.proceed
 exactly once: it is an error for a network interceptor to short-circuit
 or repeat a network request.
 &lt;i&gt; You Should Use This Method With inline Java!&lt;/i&gt;
 ______________________________________________________________________
 &lt;b&gt; Example : &lt;/b&gt; &lt;i&gt;This is a Sample for HttpLoggingInterceptor&lt;/i&gt;&lt;code&gt;
 Dim J as JavaObject : J.InitializeContext
 MiniBuilder.addInterceptor(J.RunMethod("getNewHttpLoggingInterceptor",Null))
 
 #if java
 import okhttp3.logging.HttpLoggingInterceptor;
 public HttpLoggingInterceptor getNewHttpLoggingInterceptor(){
 HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
 interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
 return interceptor;
 }
 #End if&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Interceptor</name>
                <type>okhttp3.Interceptor</type>
            </parameter>
        </method>
        <method>
            <name>ProxyAuthenticator</name>
            <comment>Use Proxy With Password
 &lt;b&gt;Example : &lt;/b&gt;&lt;code&gt;
 MiniBuilder.proxy(1,"proxyHost",8080)
 MiniBuilder.proxyAuthenticator("username","password")&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>username</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Header</name>
            <comment>&lt;b&gt;Type :&lt;/b&gt;  ADD , REMOVE , UPDATE</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>headers</name>
                <type>java.util.Map</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addSSLSocketFactory2</name>
            <comment>Set Default SSLSocket</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>CookieLanguage</name>
            <comment>set Cookie Intercepter Language
 Just Country Code : ch - en ...
 Don't Forget To Enable Cookie With
 MiniBuilder.addCookie(True)</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>language</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addResponseCache</name>
            <comment>&lt;b&gt; MaxAge : &lt;/b&gt;
 If the same network request is sent within &lt;u&gt;MaxAge&lt;/u&gt;, the response is retrieved from cache.
 &lt;b&gt; MaxStale : &lt;/b&gt;
 If the device is offline, stale response is fetched from the cache.
 _________________________________
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
 	Dim MiniBuilder As Amir_RetrofitMiniBuilder
	MiniBuilder.Initialize.baseUrl("http://lcoders.ir").KeyCache("Amir_Retrofit_Test").CacheMaxSize( 5 * 1024 * 1024)
	MiniBuilder.AutoEvict.addCache(False).addResponseCache(1,2419200)
   Retrofit.Initialize(MiniBuilder)
   
   Retrofit.Get... &lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>MaxAge</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>MaxStale</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addInfoInterceptor</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt; &lt;code&gt;
 EventName_onInfo(Chain As Object,Request As Object) As Object&lt;/code&gt;
 Event Return New Response !</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Retry</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt;
 &lt;code&gt;EventName_onRetry (TryCount As int,MaxCount As Int,RetryType As String,Request As Object)&lt;/code&gt;
 ___________________________________
 &lt;b&gt; Example : &lt;/b&gt; &lt;code&gt;
  Dim MiniBuilder As Amir_RetrofitMiniBuilder
  MiniBuilder.Initialize.BaseUrl("BaseUrl")
 	MiniBuilder.Retry(5,"Amir").NetworkAvailable
 	MiniBuilder.Retry(5,"Amir").NetworkResponse.IsNotSuccessful
  Dim Retrofit As Amir_Retrofit
  Retrofit.Initialize(MiniBuilder)
  Retrofit....
  
  Sub Amir_onRetry (TryCount As Int,MaxCount As Int,RetryType As String,Request As Object)
  Log(RetryType&amp;" : Try "&amp;TryCount&amp;"/"&amp;MaxCount)
  End Sub&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder.RetryClass</returntype>
            <parameter>
                <name>MaxRetryCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GzipRequest</name>
            <comment>&lt;b&gt;Gzip : &lt;/b&gt;Compresses the HTTP request body. Many webservers can't handle this!</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>ConnectionPool</name>
            <comment>Sets the connection pool used to recycle HTTP and HTTPS connections. 
 If unset, a new connection pool will be used. 
 &lt;i&gt; TimeUnit Is SECONDS &lt;/i&gt;
 &lt;b&gt;Example : &lt;/b&gt; &lt;code&gt;
 MiniBuilder.ConnectionPool(5,8)&lt;/code&gt;
 This is Default Values in Example</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>maxldleConnections</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>keepAliveDuration</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>FollowRedirects</name>
            <comment>Configure this client to follow redirects. If unset, redirects will be followed.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>followRedirects</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>AutoASCIIEncoder</name>
            <comment>Url representation in ASCII format</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>writeTimeout</name>
            <comment>Sets the default connect timeout for new connections. A value of 0 means 
no timeout, otherwise values must be between 1 and Integer.MAX_VALUE when 
converted to milliseconds.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>addInfoNetworkInterceptor</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt; &lt;code&gt;
 EventName_onInfo(Chain As Object,Request As Object) As Object&lt;/code&gt;
 Event Return New Response !</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addSSLSocketFactory</name>
            <comment>&lt;b&gt;X.509&lt;/b&gt;
 In cryptography, X.509 is a standard that defines the format of
 public key certificates. X.509 certificates are used in many 
 Internet protocols, including TLS/SSL, which is the basis for 
 HTTPS, the secure protocol for browsing the web. They're also 
 used in offline applications, like electronic signatures. An X.509
 certificate contains a public key and an identity (a hostname, or
 an organization, or an individual), and is either signed by a 
 certificate authority or self-signed. When a certificate is signed 
 by a trusted certificate authority, or validated by other means, 
 someone holding that certificate can rely on the public key it 
 contains to establish secure communications with another party, or
 Besides the format for certificates themselves, X.509 specifies
 certificate revocation lists as a means to distribute information
 about certificates that are no longer valid, and a certification
 path validation algorithm, which allows for certificates to be 
 signed by intermediate CA certificates, which are in turn signed 
 by other certificates, eventually reaching a trust anchor.
 X.509 is defined by the International Telecommunications Union's
 Standardization sector (ITU-T), and is based on ASN.1, another ITU-T
 standard....
 
 &lt;link&gt;English|https://en.wikipedia.org/wiki/X.509&lt;/link&gt; | &lt;link&gt;Farsi|https://fa.wikipedia.org/wiki/%D8%A7%D8%B3%D8%AA%D8%A7%D9%86%D8%AF%D8%A7%D8%B1%D8%AF_%D8%A7%DA%A9%D8%B3%DB%B5%DB%B0%DB%B9&lt;/link&gt;
 
 &lt;b&gt;name&lt;/b&gt; : Assets Certificate file name</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Proxy</name>
            <comment>add Proxy With SocketAddress
 &lt;b&gt;Type&lt;/b&gt; : 
 HTTP : 1
 DIRECT : 2
 SOCKS : 3
 &lt;b&gt;ProxyHost&lt;/b&gt; : "proxy"
 	&lt;b&gt;Example :&lt;/b&gt;
&lt;code&gt;MiniBuilder.proxy(1,"proxy",8080)&lt;/code&gt;
If your Proxy has Password use  proxyAuthenticator</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ProxyHost</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>proxyPort</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>HeaderRuntime</name>
            <comment>&lt;b&gt;Type :&lt;/b&gt;  ADD , REMOVE , UPDATE</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>addResponseProgress</name>
            <comment>&lt;b&gt; Event : &lt;/b&gt; &lt;code&gt;
 EventName_onResponseProgress(bytesRead As long,contentLength As long,done As boolean,Chain As Object,Response As Object)&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Sender</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>addCallAdapterFactory</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>factory</name>
                <type>retrofit2.CallAdapter.Factory</type>
            </parameter>
        </method>
        <method>
            <name>SkipHostnameVerifier</name>
            <comment>HostnameVerifier : &lt;b&gt;creatSkipHostnameVerifier&lt;/b&gt;

 The HostnameVerifier runs after the TLS handshake,
 over a TLS connection that is already valid from
 the TLS point of view, so at that point you know 
 that the certificate is valid, signed by a trusted 
 issuer, non-expired (?), etc., and all you have 
 to do is decide (a) whether it's from the 
 correct server and (b) whether you trust that 
 server.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>UnsafeMode2</name>
            <comment>Fix OpenSSL Handshake on PreLollipop OS with unsafe mode</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>RetryOnConnectionFailure</name>
            <comment>Configure this client to retry or not when a connectivity problem is encountered. By default,
 this client silently recovers from the following problems:

   &lt;strong&gt;Unreachable IP addresses.&lt;/strong&gt; If the URL's host has multiple IP addresses,
       failure to reach any individual IP address doesn't fail the overall request. This can
       increase availability of multi-homed services.
   &lt;strong&gt;Stale pooled connections.&lt;/strong&gt; The ConnectionPool reuses sockets
       to decrease request latency, but these connections will occasionally time out.
   &lt;strong&gt;Unreachable proxy servers.&lt;/strong&gt; A ProxySelector can be used to
       attempt multiple proxy servers in sequence, eventually falling back to a direct
       connection.

 Set this to false to avoid retrying requests when doing so is destructive. In this case the
 calling application should do its own recovery of connectivity failures.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>addHeader</name>
            <comment>Add Header for serialization and deserialization of objects.
If there are any authenticated query parameters, they can be added in the
 form of headers as shown below:
 
 &lt;i&gt;Type Is ADD. You Can Use Header Method For Set Type &lt;/i&gt;
 
&lt;b&gt;Example :&lt;/b&gt;
&lt;code&gt;MiniBuilder.addHeader(CreateMap("Authorization":"replace this text with your token"))&lt;/code&gt;
 
 The header fields of a single HTTP message. Values are uninterpreted strings; use  Request
 and  Response for interpreted headers. This class maintains the order of the header fields
 within the HTTP message.

 This class tracks header values line-by-line. A field with multiple comma- separated values on
 the same line will be treated as a field with a single value by this class. It is the caller's
 responsibility to detect and split on commas if their field permits multiple values. This
 simplifies use of single-valued fields whose values routinely contain commas, such as cookies or
 dates.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>headers</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>addParameters</name>
            <comment>Add parameters for serialization and deserialization of objects.
 &lt;b&gt;Type :&lt;/b&gt;  ADD , REMOVE , UPDATE</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>parameters</name>
                <type>java.util.Map</type>
            </parameter>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Encoded</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>addGsonConverterFactory</name>
            <comment>&lt;b&gt;GsonConverterFactory&lt;/b&gt;
 Add converter factory for serialization and deserialization of objects.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
        </method>
        <method>
            <name>CacheTimeOut</name>
            <comment>setCache</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>TimeOut</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>HostnameVerifier2</name>
            <comment>HostnameVerifier : &lt;b&gt;New HostnameVerifier With Urls&lt;/b&gt;
Just Set hostUrls</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>hostUrls</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>HttpUrl</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
        </method>
        <method>
            <name>baseUrl</name>
            <comment>Set an API base URL which can change over time.

For Example : 
Your BaseUrl is : "http://example.com"
In The Requests you can just Set Url Like this :"/arg.php"
Now Requests Address is : "http://example.com/arg.php"</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>baseUrl</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>readTimeout</name>
            <comment>Sets the handler that can accept cookies from incoming HTTP responses 
and provides cookies to outgoing HTTP requests. If unset, no cookies 
will be accepted nor provided.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>UnsafeMode</name>
            <comment>&lt;b&gt; Accept Any SSL Certificate &lt;/b&gt;
 It basically set OkHttp client with custom SSL verification, which accepts every certificate.
 Using this unsafe OkHttp client allows us to connect to the dangerous subdomains of BadSSL.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Enabled</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>CacheMaxSize</name>
            <comment>set Cache MaxSize
Parameters:size MaxSize unit kb def 10 * 1024 * 1024</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ValidateEagerly</name>
            <comment>When calling create on the resulting Retrofit instance, eagerly validate
 the configuration of all methods in the supplied interface.</comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>validateEagerly</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>addNetworkInterceptor</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder</returntype>
            <parameter>
                <name>Interceptor</name>
                <type>okhttp3.Interceptor</type>
            </parameter>
        </method>
        <property>
            <name>CallAdapterFactories</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ConverterFactories</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.MiniBuilder.RetryClass</name>
        <owner>process</owner>
        <method>
            <name>Response</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.RetryTypeClass</returntype>
        </method>
        <method>
            <name>CustomType</name>
            <comment>&lt;b&gt; Type : &lt;/b&gt;
 &lt;i&gt;Response : &lt;/i&gt;              &lt;code&gt;"IsNull"&lt;/code&gt;        &lt;code&gt;"IsBodyNull"&lt;/code&gt;       &lt;code&gt;"IsNotSuccessful"&lt;/code&gt;
 &lt;i&gt;NetworkResponse : &lt;/i&gt;&lt;code&gt;"IsNRNull"&lt;/code&gt;  &lt;code&gt;"IsNRBodyNull"&lt;/code&gt;  &lt;code&gt;"NRIsNotSuccessful"&lt;/code&gt;
 &lt;i&gt;PriorResponse : &lt;/i&gt;      &lt;code&gt;"IsPRNull"&lt;/code&gt;   &lt;code&gt;"IsPRBodyNull"&lt;/code&gt;  &lt;code&gt;"PRIsNotSuccessful"&lt;/code&gt;
 &lt;i&gt;CacheResponse : &lt;/i&gt;   &lt;code&gt;"IsCRNull"&lt;/code&gt;  &lt;code&gt;"IsCRBodyNull"&lt;/code&gt;  &lt;code&gt;"CRIsNotSuccessful"&lt;/code&gt;
 &lt;i&gt;Network : &lt;/i&gt;    &lt;code&gt;"NetworkAvailable"&lt;/code&gt;
 _______________________________
 &lt;b&gt; Custom Type Code : &lt;/b&gt;
 Dim CodeInt As int = 404 
 &lt;i&gt;Response : &lt;/i&gt;                   &lt;code&gt;"Code#"&amp;CodeInt&lt;/code&gt;
 &lt;i&gt;NetworkResponse : &lt;/i&gt;    &lt;code&gt;"NRCode#"&amp;CodeInt&lt;/code&gt;
 &lt;i&gt;PriorResponse : &lt;/i&gt;          &lt;code&gt;"PRCode#"&amp;CodeInt&lt;/code&gt;
 &lt;i&gt;CacheResponse : &lt;/i&gt;       &lt;code&gt;"CRCode#"&amp;CodeInt&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>CacheResponse</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.RetryTypeClass</returntype>
        </method>
        <method>
            <name>NetworkAvailable</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>PriorResponse</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.RetryTypeClass</returntype>
        </method>
        <method>
            <name>NetworkResponse</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.RetryTypeClass</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.MiniBuilder.RetryTypeClass</name>
        <owner>process</owner>
        <method>
            <name>IsBodyNull</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Message</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Msg</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsNull</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsNotSuccessful</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Code</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Code</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</name>
        <owner>process</owner>
        <method>
            <name>Scheme</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>scheme</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Query</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>query</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Username</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>username</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Log</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>Log</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Port</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>port</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Host</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>Host</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Fragment</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>fragment</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Password</name>
            <comment></comment>
            <returntype>aghajari.retromin.MiniBuilder.HttpUrlMiniBuilder</returntype>
            <parameter>
                <name>password</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.MiniBuilder.DeflaterMiniBuilder</name>
        <owner>process</owner>
        <method>
            <name>DEFAULT_STRATEGY</name>
            <comment>The default compression strategy.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DEFAULT_COMPRESSION</name>
            <comment>The default compression level.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SYNC_FLUSH</name>
            <comment>Flush buffers so recipients can immediately decode the data sent thus
 far. This mode may degrade compression.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>BEST_COMPRESSION</name>
            <comment>Upper bound for the compression level range.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>HUFFMAN_ONLY</name>
            <comment>A compression strategy.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NO_COMPRESSION</name>
            <comment>A compression level.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>NO_FLUSH</name>
            <comment>Use buffering for best compression.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>DEFLATED</name>
            <comment>The default compression method.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>BEST_SPEED</name>
            <comment>Lower bound for compression level range.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FILTERED</name>
            <comment>A compression strategy.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>FULL_FLUSH</name>
            <comment>Flush buffers so recipients can immediately decode the data sent thus
 far. The compression state is also reset to permit random access and
 recovery for clients who have discarded or damaged their own copy. This
 mode may degrade compression.</comment>
            <returntype>void</returntype>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.RequestBodyCreate</name>
        <shortname>Amir_RequestBody</shortname>
        <comment>&lt;b&gt; Request Body &lt;/b&gt;
 Returns a new request body that transmits content. If  contentType is non-null
 and lacks a charset, this will use UTF-8...</comment>
        <owner>process</owner>
        <method>
            <name>WithPartRequestBody</name>
            <comment></comment>
            <returntype>okhttp3.MultipartBody.Part</returntype>
            <parameter>
                <name>body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>WithPartRequestBodyAndHeader</name>
            <comment></comment>
            <returntype>okhttp3.MultipartBody.Part</returntype>
            <parameter>
                <name>Header</name>
                <type>java.util.Map</type>
            </parameter>
            <parameter>
                <name>body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>WithProgressRequestBodyObservable</name>
            <comment>&lt;b&gt; Events : &lt;/b&gt;
 &lt;code&gt; EventName_onProgressUpdate (Progress as float,uploaded as float,total as float)&lt;/code&gt;
 &lt;code&gt; EventName_WriteTo (BufferedSink as Object,buffer() as byte,Read as int,isFirst as boolean)&lt;/code&gt;
 _________________________________________________________________
 BufferSize : 2048
 
 You Can Use this Request for okhttp3.RequestBody</comment>
            <returntype>aghajari.retromin.ProgressRequestBodyObservable</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>MediaType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>BufferSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>WithFile</name>
            <comment></comment>
            <returntype>okhttp3.RequestBody</returntype>
            <parameter>
                <name>MediaType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithString</name>
            <comment></comment>
            <returntype>okhttp3.RequestBody</returntype>
            <parameter>
                <name>MediaType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Content</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithByte2</name>
            <comment></comment>
            <returntype>okhttp3.RequestBody</returntype>
            <parameter>
                <name>MediaType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Content</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bytecount</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>MultipartBody</name>
            <comment>An &lt;link&gt;RFC 2387|http://www.ietf.org/rfc/rfc2387.txt&lt;/link&gt;-compliant request body. 
  
 &lt;b&gt; Example : &lt;/b&gt;&lt;code&gt;
 Retrofit.Body("EV","Link", _
 Retrofit.RB.MultipartBody("").SetType("Type") _ 
 .AddPart2(Retrofit.RB.WithString("text/*","Hello")) _
 .AddPart2(Retrofit.RB.WithString("text/*","Text2")).Build)&lt;/code&gt;</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>boundary</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithPartFormData2</name>
            <comment></comment>
            <returntype>okhttp3.MultipartBody.Part</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>filename</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>WithPartFormData</name>
            <comment></comment>
            <returntype>okhttp3.MultipartBody.Part</returntype>
            <parameter>
                <name>name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithByte</name>
            <comment></comment>
            <returntype>okhttp3.RequestBody</returntype>
            <parameter>
                <name>MediaType</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Content</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <property>
            <name>Types</name>
            <returntype>aghajari.retromin.RequestBodyCreate.Types</returntype>
            <comment>&lt;b&gt;MULTIPART&lt;/b&gt; | &lt;b&gt;MIME&lt;/b&gt;</comment>
        </property>
    </class>
    <class>
        <name>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</name>
        <owner>process</owner>
        <method>
            <name>AddFormDataPart</name>
            <comment>Add a form data part to the body.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddPart</name>
            <comment>Add a part to the body.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>part</name>
                <type>okhttp3.MultipartBody.Part</type>
            </parameter>
        </method>
        <method>
            <name>SetType</name>
            <comment>&lt;b&gt;Set the MIME type. &lt;/b&gt;
 Expected values for type are  :
 1.Mixed : &lt;code&gt;"multipart/mixed"&lt;/code&gt; &lt;i&gt;(the default)&lt;/i&gt;
 2.Alternative : &lt;code&gt;"multipart/alternative"&lt;/code&gt;
 3.Digest : &lt;code&gt;"multipart/digest"&lt;/code&gt;
 4.Parallel : &lt;code&gt;"multipart/parallel"&lt;/code&gt;
 5.Form : &lt;code&gt;"multipart/form-data"&lt;/code&gt;
 _____________________________________________________________________________________________
 &lt;b&gt; MIXED : &lt;/b&gt;
 The "mixed" subtype of "multipart" is intended for use when the body parts are independent and
 need to be bundled in a particular order. Any "multipart" subtypes that an implementation does
 not recognize must be treated as being of subtype "mixed".
 _____________________________________________________________________________________________
 &lt;b&gt; ALTERNATIVE : &lt;/b&gt;
 The "multipart/alternative" type is syntactically identical to "multipart/mixed", but the
 semantics are different. In particular, each of the body parts is an "alternative" version of
 the same information.
 _____________________________________________________________________________________________
 &lt;b&gt; DIGEST : &lt;/b&gt;
 This type is syntactically identical to "multipart/mixed", but the semantics are different. In
 particular, in a digest, the default Content-Type value for a body part is changed from
 "text/plain" to "message/rfc822".
 _____________________________________________________________________________________________
 &lt;b&gt; PARALLEL : &lt;/b&gt;
 This type is syntactically identical to "multipart/mixed", but the semantics are different. In
 particular, in a parallel entity, the order of body parts is not significant.
 _____________________________________________________________________________________________
 &lt;b&gt; FORM : &lt;/b&gt;
 The media-type multipart/form-data follows the rules of all multipart MIME data streams as
 outlined in RFC 2046. In forms, there are a series of fields to be supplied by the user who
 fills out the form. Each field has a name. Within a given form, the names are unique.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>MultipartMediaType</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>AddFormDataPart2</name>
            <comment>Add a form data part to the body.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>Build</name>
            <comment>Assemble the specified parts into a request body.
 &lt;b&gt;  MultipartBody extends RequestBody  &lt;/b&gt;</comment>
            <returntype>okhttp3.MultipartBody</returntype>
        </method>
        <method>
            <name>AddPart3</name>
            <comment>Add a part to the body.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>Header</name>
                <type>java.util.Map</type>
            </parameter>
            <parameter>
                <name>Body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
        <method>
            <name>AddPart2</name>
            <comment>Add a part to the body.</comment>
            <returntype>aghajari.retromin.RequestBodyCreate.MultipartBodyBuilder</returntype>
            <parameter>
                <name>Body</name>
                <type>okhttp3.RequestBody</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>aghajari.retromin.RequestBodyCreate.Types</name>
        <owner>process</owner>
        <field>
            <name>MULTIPART_AUDIO_DATA</name>
            <comment>&lt;code&gt;audio/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_TEXT_DATA</name>
            <comment>&lt;code&gt;text/plain&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_IMAGE_DATA</name>
            <comment>&lt;code&gt;image/*; charset=utf-8&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_FORM_DATA</name>
            <comment>&lt;code&gt;multipart/form-data;&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MIME_TYPE_TEXT</name>
            <comment>&lt;code&gt;text/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MIME_TYPE_VIDEO</name>
            <comment>&lt;code&gt;video/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_JSON_DATA</name>
            <comment>&lt;code&gt;application/json; charset=utf-8&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MIME_TYPE_AUDIO</name>
            <comment>&lt;code&gt;audio/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MIME_TYPE_APP</name>
            <comment>&lt;code&gt;application/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_APK_DATA</name>
            <comment>&lt;code&gt;application/vnd.android.package-archive&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_JAVA_DATA</name>
            <comment>&lt;code&gt;java/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MIME_TYPE_IMAGE</name>
            <comment>&lt;code&gt;image/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_MESSAGE_DATA</name>
            <comment>&lt;code&gt;message/rfc822&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>MULTIPART_VIDEO_DATA</name>
            <comment>&lt;code&gt;video/*&lt;/code&gt;</comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <version>1.05</version>
    <author>AmirHosseinAghajari</author>
    <dependsOn>Amir_RetroMin.aar</dependsOn>
</root>
