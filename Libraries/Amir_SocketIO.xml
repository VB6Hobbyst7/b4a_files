<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>com.aghajari.socketio.Amir_SocketIO</name>
        <shortname>Amir_SocketIO</shortname>
        <comment>&lt;i&gt;&lt;b&gt;hi.&lt;/b&gt; Tnx For Select &lt;u&gt;Amir_SocketIO&lt;/u&gt; Library.&lt;/i&gt;
 This is the Socket.IO v1.x Client Library for Android, which is simply ported from the JavaScript client.
 &lt;b&gt;Amir_RecyclerView © Amir Hossein Aghajari&lt;/b&gt;</comment>
        <owner>process</owner>
        <event>onCall (Event As String,Args() As Object)</event>
        <method>
            <name>OffEvent</name>
            <comment>Removes all listeners of the specified event.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ToJSONObject</name>
            <comment></comment>
            <returntype>org.json.JSONObject</returntype>
            <parameter>
                <name>Data</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Once</name>
            <comment>Adds a one time listener for the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>EmitJsonObject</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>java.util.Map</type>
            </parameter>
        </method>
        <method>
            <name>Connect</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ToJSONArray</name>
            <comment></comment>
            <returntype>org.json.JSONArray</returntype>
            <parameter>
                <name>Data</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>Off</name>
            <comment>Removes all registered listeners.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
        </method>
        <method>
            <name>HasListeners</name>
            <comment>Check if this emitter has listeners for the specified event.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Send</name>
            <comment>Send messages.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>Emit</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>OffListener</name>
            <comment>Removes the listener.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Listener</name>
                <type>io.socket.emitter.Emitter.Listener</type>
            </parameter>
        </method>
        <method>
            <name>Disconnect</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>EmitJsonArray</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>java.util.List</type>
            </parameter>
        </method>
        <method>
            <name>Initializer</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO.Initializer</returntype>
        </method>
        <method>
            <name>FixHttpsURLConnection</name>
            <comment>when use custom SSL settings, you should add the following code, or you will failed</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>EmitArray</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>EmitAck</name>
            <comment>Emits an event. When you pass Ack at the last argument, then the acknowledge is done.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>AckEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetListeners</name>
            <comment>Returns a list of listeners for the specified event.</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>On</name>
            <comment>Listens on the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>DefaultOkHttpWebSocketFactory</name>
            <parameter>
                <name>factory</name>
                <type>okhttp3.WebSocket.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Connected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IO</name>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Id</name>
            <returntype>java.lang.String</returntype>
            <comment>A property on the socket instance that is equal to the underlying engine.io socket id.

 The value is present once the socket has connected, is removed when the socket disconnects 
 and is updated if the socket reconnects.</comment>
        </property>
        <property>
            <name>DefaultOkHttpCallFactory</name>
            <parameter>
                <name>factory</name>
                <type>okhttp3.Call.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Protocol</name>
            <returntype>int</returntype>
            <comment>Protocol version.</comment>
        </property>
        <property>
            <name>About</name>
            <returntype>java.lang.String</returntype>
            <comment>&lt;b&gt;Amir_SocketIO © Amir Hossein Aghajari&lt;/b&gt;</comment>
        </property>
        <field>
            <name>EVENT_PING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECT</name>
            <comment>Called on a connection.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_DISCONNECT</name>
            <comment>Called on a disconnection.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_PONG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_ERROR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_ATTEMPT</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECT_ERROR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_ERROR</name>
            <comment>Called on a connection error.

 Parameters: (Exception) error data.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECT_TIMEOUT</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_MESSAGE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_FAILED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketIO.Initializer</name>
        <owner>process</owner>
        <method>
            <name>WithUri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithOptions</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Options</name>
                <type>com.aghajari.socketio.Amir_SocketOptions</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketManager</name>
        <shortname>Amir_SocketManager</shortname>
        <owner>process</owner>
        <event>onOpenCallback (Message As String)</event>
        <method>
            <name>OffEvent</name>
            <comment>Removes all listeners of the specified event.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Once</name>
            <comment>Adds a one time listener for the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Socket2</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>nsp</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Options</name>
                <type>com.aghajari.socketio.Amir_SocketOptions</type>
            </parameter>
        </method>
        <method>
            <name>Off</name>
            <comment>Removes all registered listeners.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
        </method>
        <method>
            <name>HasListeners</name>
            <comment>Check if this emitter has listeners for the specified event.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
        </method>
        <method>
            <name>Emit</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>OffListener</name>
            <comment>Removes the listener.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>OpenWithCallback</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Initializer</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager.Initializer</returntype>
        </method>
        <method>
            <name>EmitArray</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>EmitAck</name>
            <comment>Emits an event. When you pass Ack at the last argument, then the acknowledge is done.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketManager</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>AckEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetListeners</name>
            <comment>Returns a list of listeners for the specified event.</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Socket</name>
            <comment></comment>
            <returntype>com.aghajari.socketio.Amir_SocketIO</returntype>
            <parameter>
                <name>nsp</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>On</name>
            <comment>Listens on the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>RandomizationFactor</name>
            <returntype>double</returntype>
            <parameter>
                <name>arg</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionDelay</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Reconnection</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionAttempts</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimeOut</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionDelayMax</name>
            <returntype>long</returntype>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>EVENT_PING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_PACKET</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CLOSE</name>
            <comment>Called on a disconnection.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_PONG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT</name>
            <comment>Called on a successful reconnection.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_ERROR</name>
            <comment>Called on a reconnection attempt error.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_ATTEMPT</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECT_ERROR</name>
            <comment>Called on a connection error.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_OPEN</name>
            <comment>Called on a successful connection.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_TRANSPORT</name>
            <comment>Called when a new transport is created. (experimental)</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_ERROR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CONNECT_TIMEOUT</name>
            <comment>Called on a connection timeout.</comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECTING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RECONNECT_FAILED</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketManager.Initializer</name>
        <owner>process</owner>
        <method>
            <name>New</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>WithUri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>WithOptions</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Uri</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Options</name>
                <type>com.aghajari.socketio.Amir_SocketOptions</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketOptions</name>
        <shortname>Amir_SocketOptions</shortname>
        <objectwrapper>io.socket.client.IO.Options</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ConnectToAmirRetrofit</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Retrofit</name>
                <type>aghajari.retrofit.Retrofit</type>
            </parameter>
            <parameter>
                <name>UseClient</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddTransport</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>key</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>io.socket.engineio.client.Transport.Options</type>
            </parameter>
        </method>
        <property>
            <name>RandomizationFactor</name>
            <parameter>
                <name>arg</name>
                <type>double</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionDelay</name>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Query</name>
            <parameter>
                <name>arg</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ForceNew</name>
            <parameter>
                <name>forceNew</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimestampRequests</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Multiplex</name>
            <parameter>
                <name>multiplex</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimeOut</name>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <parameter>
                <name>arg</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Decoder</name>
            <parameter>
                <name>Decoder</name>
                <type>io.socket.parser.Parser.Decoder</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Upgrade</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Reconnection</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionAttempts</name>
            <parameter>
                <name>arg</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimestampParam</name>
            <parameter>
                <name>arg</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WebSocketFactory</name>
            <parameter>
                <name>arg</name>
                <type>okhttp3.WebSocket.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CallFactory</name>
            <parameter>
                <name>arg</name>
                <type>okhttp3.Call.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HostName</name>
            <parameter>
                <name>hostname</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Path</name>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Transports</name>
            <parameter>
                <name>arg</name>
                <type>java.lang.String[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Host</name>
            <parameter>
                <name>host</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>RememberUpgrade</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Secure</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PolicyPort</name>
            <parameter>
                <name>policyPort</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReconnectionDelayMax</name>
            <parameter>
                <name>arg</name>
                <type>long</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketPackets</name>
        <shortname>Amir_SocketPacket</shortname>
        <objectwrapper>io.socket.engineio.parser.Packet</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <property>
            <name>Type</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Type</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Data</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Data</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>MESSAGE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>NOOP</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PING</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>UPGRADE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>ERROR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>CLOSE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>PONG</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>OPEN</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_SocketTransport</name>
        <objectwrapper>io.socket.engineio.client.Transport</objectwrapper>
        <owner>process</owner>
        <method>
            <name>OffEvent</name>
            <comment>Removes all listeners of the specified event.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Once</name>
            <comment>Adds a one time listener for the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>PutHeader</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Args</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Value</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetHeaderValue</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Args</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>Name</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Off</name>
            <comment>Removes all registered listeners.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
        </method>
        <method>
            <name>HasListeners</name>
            <comment>Check if this emitter has listeners for the specified event.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Open</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Emit</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>arg</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>OffListener</name>
            <comment>Removes the listener.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Listener</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Close</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>EmitArray</name>
            <comment>Executes each of listeners with the given args.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>EmitAck</name>
            <comment>Emits an event. When you pass Ack at the last argument, then the acknowledge is done.</comment>
            <returntype>com.aghajari.socketio.Amir_SocketTransport</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>args</name>
                <type>java.lang.Object[]</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>AckEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetListeners</name>
            <comment>Returns a list of listeners for the specified event.</comment>
            <returntype>java.util.List</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>On</name>
            <comment>Listens on the event.</comment>
            <returntype>io.socket.emitter.Emitter.Listener</returntype>
            <parameter>
                <name>Event</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>ListenerEventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Query</name>
            <returntype>java.util.Map</returntype>
            <parameter>
                <name>arg</name>
                <type>java.util.Map</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Writable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Name</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>arg</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>EVENT_REQUEST_HEADERS</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_RESPONSE_HEADERS</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_OPEN</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_PACKET</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_DRAIN</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_CLOSE</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>EVENT_ERROR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>com.aghajari.socketio.Amir_TransportOptions</name>
        <shortname>Amir_TransportOptions</shortname>
        <objectwrapper>io.socket.engineio.client.Transport.Options</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ConnectToAmirRetrofit</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Retrofit</name>
                <type>aghajari.retrofit.Retrofit</type>
            </parameter>
            <parameter>
                <name>UseClient</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Path</name>
            <parameter>
                <name>path</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Query</name>
            <parameter>
                <name>arg</name>
                <type>java.util.Map</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimestampRequests</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Port</name>
            <parameter>
                <name>arg</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Secure</name>
            <parameter>
                <name>arg</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PolicyPort</name>
            <parameter>
                <name>policyPort</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TimestampParam</name>
            <parameter>
                <name>arg</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WebSocketFactory</name>
            <parameter>
                <name>arg</name>
                <type>okhttp3.WebSocket.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CallFactory</name>
            <parameter>
                <name>arg</name>
                <type>okhttp3.Call.Factory</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HostName</name>
            <parameter>
                <name>hostname</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <version>1.0</version>
    <author>AmirHosseinAghajari</author>
</root>
