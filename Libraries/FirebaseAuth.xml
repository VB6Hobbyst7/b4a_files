<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4a.objects.FirebaseAuthWrapper</name>
        <shortname>FirebaseAuth</shortname>
        <owner>process</owner>
        <event>SignedIn (User As FirebaseUser)</event>
        <event>TokenAvailable (User As FirebaseUser, Success As Boolean, TokenId As String)</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the object. The SignedIn event will be raised if there is already a signed in user.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetUserTokenId</name>
            <comment>Retrieves the token id. This token can be sent to your backend server. The server can use it to verify the user.
The TokenAvailable event will be raised in the current module.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>User</name>
                <type>anywheresoftware.b4a.objects.FirebaseAuthWrapper.FirebaseUserWrapper</type>
            </parameter>
            <parameter>
                <name>ForceRefresh</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SignInWithGoogle</name>
            <comment>Start the sign in process.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>SignOutFromGoogle</name>
            <comment>Sign outs from Firebase and Google.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>CurrentUser</name>
            <returntype>anywheresoftware.b4a.objects.FirebaseAuthWrapper.FirebaseUserWrapper</returntype>
            <comment>Returns the current signed in user. Returns an uninitialized object if there is no user.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.objects.FirebaseAuthWrapper.FirebaseUserWrapper</name>
        <shortname>FirebaseUser</shortname>
        <objectwrapper>com.google.firebase.auth.FirebaseUser</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Email</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>PhotoUrl</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>DisplayName</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Uid</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
    </class>
    <version>1.02</version>
    <dependsOn>com.google.firebase:firebase-auth</dependsOn>
    <dependsOn>com.google.android.gms:play-services-auth</dependsOn>
</root>
