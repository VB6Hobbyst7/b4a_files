<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.07</doclet-version-NOT-library-version>
    <class>
        <name>de.donmanfred.CameraSourcePreviewwrapper</name>
        <shortname>CameraSourcePreview</shortname>
        <objectwrapper>com.google.firebase.samples.mlkit.common.CameraSourcePreview</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>release</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>start2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cameraSource</name>
                <type>com.google.firebase.samples.mlkit.common.CameraSource</type>
            </parameter>
            <parameter>
                <name>overlay</name>
                <type>com.google.firebase.samples.mlkit.common.GraphicOverlay</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cameraSource</name>
                <type>com.google.firebase.samples.mlkit.common.CameraSource</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBackgroundImage">SetBackgroundImageNew</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Elementwrapper</name>
        <shortname>Element</shortname>
        <objectwrapper>com.google.firebase.ml.vision.text.FirebaseVisionText.Element</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Confidence</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BoundingBox</name>
            <returntype>Rect</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CornerPoints</name>
            <returntype>Point[]</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.FirebaseDetectorwrapper</name>
        <shortname>FirebaseDetector</shortname>
        <owner>process</owner>
        <event>TextDetected(success As Boolean, textlist As List)</event>
        <event>CloudLandmarkDetected(success As Boolean, landmarks As List)</event>
        <event>CloudDocumentTextDetected(success As Boolean, textlist As List)</event>
        <event>CloudTextDetected(success As Boolean, textlist As List)</event>
        <event>CloudImageLabeled(success As Boolean, labels As List)</event>
        <event>BarcodeDetected(success As Boolean, Barcodes As List)</event>
        <event>FaceContourDetected(success As Boolean, contours As List)</event>
        <event>FaceDetected(success As Boolean, faces As List, CameraImageObj As Object)</event>
        <event>ImageLabeled(success As Boolean, labels As List)</event>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>onPause</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>camsrcpreview</name>
                <type>com.google.firebase.samples.mlkit.common.CameraSourcePreview</type>
            </parameter>
            <parameter>
                <name>overlay</name>
                <type>com.google.firebase.samples.mlkit.common.GraphicOverlay</type>
            </parameter>
            <parameter>
                <name>overlayBitmappathName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>selectedModel</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>onResume</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>switchRecognizer</name>
            <comment>One of FACE_DETECTION, FACE_CONTOUR, TEXT_DETECTION, 
 BARCODE_DETECTION or IMAGE_LABEL_DETECTION</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>recognizer</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>CreateMetadata</name>
            <comment>480x360 is typically sufficient for image recognition</comment>
            <returntype>com.google.firebase.ml.vision.common.FirebaseVisionImageMetadata</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rotation</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Img</name>
            <returntype>com.google.firebase.ml.vision.common.FirebaseVisionImage</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Facing</name>
            <parameter>
                <name>facing</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CameraFacing</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImgFormatYV12</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImgFormatNV21</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TEXT_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>IMAGE_LABEL_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FACE_CONTOUR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BARCODE_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FACE_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionBarcodewrapper</name>
        <shortname>FirebaseVisionBarcode</shortname>
        <objectwrapper>com.google.firebase.ml.vision.barcode.FirebaseVisionBarcode</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Format</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ValueType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BoundingBox</name>
            <returntype>Rect</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BarcodeType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>RawValue</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TYPE_CONTACT_INFO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_PDF417</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_GEO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_AZTEC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_QR_CODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_CODE_128</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_ISBN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_PRODUCT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_ALL_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_SMS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_UNKNOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_EAN_8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_URL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_EMAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_WIFI</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_UPC_A</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_CODE_39</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_UPC_E</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_CALENDAR_EVENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_DATA_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_UNKNOWN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_CODABAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_ITF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_CODE_93</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_PHONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>TYPE_DRIVER_LICENSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FORMAT_EAN_13</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionFaceContourwrapper</name>
        <shortname>FirebaseVisionFaceContour</shortname>
        <objectwrapper>com.google.firebase.ml.vision.face.FirebaseVisionFaceContour</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>FaceContourType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Points</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <field>
            <name>RIGHT_EYE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RIGHT_EYEBROW_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOWER_LIP_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UPPER_LIP_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>UPPER_LIP_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_EYEBROW_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_EYEBROW_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NOSE_BRIDGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RIGHT_EYEBROW_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LOWER_LIP_TOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NOSE_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ALL_POINTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_EYE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionFaceLandmarkwrapper</name>
        <shortname>FirebaseVisionFaceLandmark</shortname>
        <objectwrapper>com.google.firebase.ml.vision.face.FirebaseVisionFaceLandmark</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Position</name>
            <returntype>com.google.firebase.ml.vision.common.FirebaseVisionPoint</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LandmarkType</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <field>
            <name>MOUTH_LEFT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_CHEEK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MOUTH_RIGHT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RIGHT_EAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_EAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RIGHT_CHEEK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RIGHT_EYE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>MOUTH_BOTTOM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>NOSE_BASE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>LEFT_EYE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionFacewrapper</name>
        <shortname>FirebaseVisionFace</shortname>
        <objectwrapper>com.google.firebase.ml.vision.face.FirebaseVisionFace</objectwrapper>
        <owner>process</owner>
        <method>
            <name>getLandmark</name>
            <comment></comment>
            <returntype>com.google.firebase.ml.vision.face.FirebaseVisionFaceLandmark</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getContour</name>
            <comment></comment>
            <returntype>com.google.firebase.ml.vision.face.FirebaseVisionFaceContour</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>RightEyeOpenProbability</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HeadEulerAngleY</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>BoundingBox</name>
            <returntype>Rect</returntype>
            <comment></comment>
        </property>
        <property>
            <name>LeftEyeOpenProbability</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HeadEulerAngleZ</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TrackingId</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SmilingProbability</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionPointwrapper</name>
        <shortname>FirebaseVisionPoint</shortname>
        <objectwrapper>com.google.firebase.ml.vision.common.FirebaseVisionPoint</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>X</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Y</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Z</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionTextwrapper</name>
        <shortname>FirebaseVisionText</shortname>
        <objectwrapper>com.google.firebase.ml.vision.text.FirebaseVisionText</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TextBlocks</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.FirebaseVisionwrapper</name>
        <shortname>FirebaseVision</shortname>
        <owner>process</owner>
        <event>CloudLandmarkDetected(success As Boolean, landmarks As List)</event>
        <event>CloudDocumentTextDetected(success As Boolean, textlist As List)</event>
        <event>CloudTextDetected(success As Boolean, textlist As List)</event>
        <event>CloudImageLabeled(success As Boolean, labels As List)</event>
        <event>TextDetected(success As Boolean, textlist As List)</event>
        <event>BarcodeDetected(success As Boolean, Barcodes As List)</event>
        <event>FaceContourDetected(success As Boolean, contours As List)</event>
        <event>FaceDetected(success As Boolean, faces As List, CameraImageObj As Object)</event>
        <event>ImageLabeled(success As Boolean, labels As List)</event>
        <method>
            <name>switchRecognizer</name>
            <comment>One of FACE_DETECTION, FACE_CONTOUR, TEXT_DETECTION, 
 BARCODE_DETECTION or IMAGE_LABEL_DETECTION</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>recognizer</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitfromUriString</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>uriString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>InitfromBitmap</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>InitfromByteArray</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bytearray</name>
                <type>byte[]</type>
            </parameter>
            <parameter>
                <name>meta</name>
                <type>com.google.firebase.ml.vision.common.FirebaseVisionImageMetadata</type>
            </parameter>
        </method>
        <method>
            <name>detectText</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>InitfromByteBuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bytebuffer</name>
                <type>java.nio.ByteBuffer</type>
            </parameter>
            <parameter>
                <name>meta</name>
                <type>com.google.firebase.ml.vision.common.FirebaseVisionImageMetadata</type>
            </parameter>
        </method>
        <method>
            <name>CreateMetadata</name>
            <comment>480x360 is typically sufficient for image recognition</comment>
            <returntype>com.google.firebase.ml.vision.common.FirebaseVisionImageMetadata</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>format</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rotation</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InitfromMediaImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>image</name>
                <type>Image</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>selectedModel</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Img</name>
            <returntype>com.google.firebase.ml.vision.common.FirebaseVisionImage</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImgFormatYV12</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ImgFormatNV21</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>TEXT_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>IMAGE_LABEL_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FACE_CONTOUR</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>BARCODE_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
        <field>
            <name>FACE_DETECTION</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
        </field>
    </class>
    <class>
        <name>de.donmanfred.GraphicOverlaywrapper</name>
        <shortname>GraphicOverlay</shortname>
        <objectwrapper>com.google.firebase.samples.mlkit.common.GraphicOverlay</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>setCameraInfo</name>
            <comment>Sets the camera attributes for size and facing direction, which informs how to transform image
 coordinates later.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>previewWidth</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>previewHeight</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>facing</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>remove</name>
            <comment>Removes a graphic from the overlay.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>graphic</name>
                <type>com.google.firebase.samples.mlkit.common.GraphicOverlay.Graphic</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>add</name>
            <comment>Adds a graphic to the overlay.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>graphic</name>
                <type>com.google.firebase.samples.mlkit.common.GraphicOverlay.Graphic</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clear</name>
            <comment>Removes all graphics from the overlay.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBackgroundImage">SetBackgroundImageNew</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.Linewrapper</name>
        <shortname>TextBlock</shortname>
        <objectwrapper>com.google.firebase.ml.vision.text.FirebaseVisionText.Line</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Confidence</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CornerPoints</name>
            <returntype>Point[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Elements</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TextBlocks</name>
            <returntype>Rect</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>de.donmanfred.TextBlockwrapper</name>
        <shortname>TextBlock</shortname>
        <objectwrapper>com.google.firebase.ml.vision.text.FirebaseVisionText.TextBlock</objectwrapper>
        <owner>process</owner>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Confidence</name>
            <returntype>java.lang.Float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <comment></comment>
        </property>
        <property>
            <name>CornerPoints</name>
            <returntype>Point[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TextBlocks</name>
            <returntype>Rect</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Lines</name>
            <returntype>java.util.List</returntype>
            <comment></comment>
        </property>
    </class>
    <version>0.8</version>
    <comment>&lt;link&gt;...|http://www.b4x.com&lt;/link&gt;</comment>
    <author>DonManfred</author>
</root>
