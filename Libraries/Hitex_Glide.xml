<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>com.glide.Glide</name>
        <objectwrapper>com.bumptech.glide.Glide</objectwrapper>
        <owner>process</owner>
        <method>
            <name>MemoryCategory</name>
            <comment>"HIGH"
 "NORMAL"
 "LOW"</comment>
            <returntype>void</returntype>
            <parameter>
                <name>MemoryCategory</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ClearDiskCache</name>
            <comment>Call &lt;b&gt;Glide.ClearDiskCache&lt;/b&gt; on outside the UI thread.
 (also consider &lt;b&gt;ClearMemory&lt;/b&gt; too to prevent surprises after clearing disk cache)
 Read &lt;a href="https://github.com/bumptech/glide/wiki/Caching-and-Cache-Invalidation"&gt;Cache invalidation&lt;/a&gt;, because it's not otherwise possible to remove a single file from cache,
 see &lt;a href="https://github.com/bumptech/glide/issues/94"&gt;#94&lt;/a&gt; for arguments.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ClearMemory</name>
            <comment>Evict all items from the memory cache.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>TrimMemory</name>
            <comment>&lt;code&gt;"TRIM_MEMORY_BACKGROUND"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_COMPLETE"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_MODERATE"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_RUNNING_CRITICAL"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_RUNNING_LOW"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_RUNNING_MODERATE"&lt;/code&gt;
 &lt;code&gt;"TRIM_MEMORY_UI_HIDDEN"&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Level</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>com.glide.Hitex_Glide</name>
        <shortname>Hitex_Glide</shortname>
        <owner>activity</owner>
        <event>onResourceReady (Tag As Object, Drawable As Object)
	
	
	Dim BD = Drawable As BitmapDrawable
	
	ImageView.Bitmap = BD.Bitmap</event>
        <event>onLoadCleared (Tag As Object, Placeholder As Object)</event>
        <event>onLoadStarted (Tag As Object, Placeholder As Object)</event>
        <event>onLoadFailed (Tag As Object, ErrorDrawable As Object)</event>
        <event>onGetBitmap (Tag As Object, getBitmap As Bitmap)</event>
        <event>onListenerLoadFailed (Tag As Object, ErrorException As String)</event>
        <event>onListenerResourceReady (Tag As Object, Drawable As Object)</event>
        <event>onSizeReady (Tag As Object, Width As Int, Height As Int)</event>
        <permission>android.permission.INTERNET</permission>
        <method>
            <name>TearDown</name>
            <comment>This method should only be accessed from tests or within private scope .</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetPhotoCacheDir2</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>CacheName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Load</name>
            <comment>&lt;b&gt;Created By Sadeq Nameni (Hitexroid)&lt;/b&gt;

 Loads an image file and prepares it for showing.
 Advanced: you can pass "http" to the Dir parameter and then a full URL (including http) to the FileName ,
 or using &lt;b&gt;Load2&lt;/b&gt; method'.

 Simple basic image usage : &lt;code&gt;
 Glide.Load(File.DirAssets,"image.jpg").Into(ImageView)
 &lt;/code&gt;
 ____________________________________________________________
 Simple link usage : &lt;code&gt;
 Glide.Load2("http://yourHost.com/image.jpg").Into(ImageView)
 &lt;/code&gt;
 ____________________________________________________________
 Simple path usage : &lt;code&gt;
 Glide.Load2("/storage/emulated/0/image.jpg").Into(ImageView)
 &lt;/code&gt;
 ____________________________________________________________
 Simple RequestOptions usage : &lt;code&gt;
 Glide.Load(File.DirAssets,"image.jpg").Apply(Glide.RequestOptions.CenterCrop).Into(imageView)
 &lt;/code&gt;
 ____________________________________________________________
 Other ... &lt;code&gt;
 Dim RequestOptions As Hitex_RequestOptions
 RequestOptions.Initialize.CenterCrop.Placeholder(bitmap)

 Glide.Load(File.DirAssets,"image.jpg").Apply(RequestOptions).Into(imageView)
 &lt;/code&gt;</comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetPhotoCacheDir</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>GetBitmap</name>
            <comment>Example : &lt;code&gt;
 Glide.GetBitmap("Glide",imageLink)&lt;/code&gt;
 ______________________________________________________________________
 Event : &lt;code&gt;
 Sub Glide_onGetBitmap (Tag As Object, getBitmap As Bitmap)
 Log(getBitmap)
 End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Get</name>
            <comment></comment>
            <returntype>com.glide.Glide</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>GetBitmap2</name>
            <comment>Example : &lt;code&gt;
 Dim RequestOptions As Hitex_RequestOptions
 RequestOptions.Initialize.CircleCrop

 Glide.GetBitmap2("Glide", "someTag", imageLink, RequestOptions)&lt;/code&gt;
 ____________________________________________________________________
 Event : &lt;code&gt;
 Sub Glide_onGetBitmap (Tag As Object, getBitmap As Bitmap)
 Log(Tag)
 Log(getBitmap)
 imageView.Bitmap = getBitmap
 End Sub&lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>requestOptions</name>
                <type>com.glide.Hitex_RequestOptions</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment>Simple Usage : &lt;code&gt;
 Glide.Load2("Path Or Link").Into(ImageView)
 &lt;/code&gt;</comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>With</name>
            <comment>Example : &lt;code&gt;
 Glide.With.Load3(LoadBitmap(File.DirAssets,"placeholder.png")).Into(imageView)&lt;/code&gt;</comment>
            <returntype>com.glide.Hitex_RequestManager</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <property>
            <name>RequestOptions</name>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.glide.Hitex_ImageView</name>
        <shortname>Hitex_ImageView</shortname>
        <objectwrapper>pack.ImageView2</objectwrapper>
        <owner>process</owner>
        <event>Click</event>
        <event>LongClick</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBackgroundImage">SetBackgroundImageNew</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.objects.drawable.BitmapDrawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Bitmap</name>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>value</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <comment>Gets or sets the bitmap assigned to the ImageView.
 Example: &lt;code&gt;
 ImageView1.Bitmap = LoadBitmap(File.DirAssets, "SomeImage.jpg")&lt;/code&gt;</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Padding</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag2</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the Tag value. This is a place holder which can used to store additional data.

 &lt;b&gt;Customized by Sadeq Nameni ;) (Hitexroid)&lt;/b&gt;</comment>
        </property>
    </class>
    <class>
        <name>com.glide.Hitex_Request</name>
        <shortname>Hitex_Request</shortname>
        <objectwrapper>com.bumptech.glide.request.Request</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Pause</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsResourceSet</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsRunning</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsCancelled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsEquivalentTo</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>yourRequest</name>
                <type>com.glide.Hitex_Request</type>
            </parameter>
        </method>
        <method>
            <name>IsPaused</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsComplete</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Recycle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Begin</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsFailed</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
    </class>
    <class>
        <name>com.glide.Hitex_RequestBuilder</name>
        <shortname>Hitex_RequestBuilder</shortname>
        <objectwrapper>com.bumptech.glide.RequestBuilder</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Into</name>
            <comment></comment>
            <returntype>com.glide.Hitex_ViewTarget</returntype>
            <parameter>
                <name>ImageView</name>
                <type>anywheresoftware.b4a.objects.ImageViewWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Listener</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Apply</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>requestOptions</name>
                <type>com.glide.Hitex_RequestOptions</type>
            </parameter>
        </method>
        <method>
            <name>ThumbnailSize</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Error</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>requestBuilder</name>
                <type>com.glide.Hitex_RequestBuilder</type>
            </parameter>
        </method>
        <method>
            <name>Preload2</name>
            <comment></comment>
            <returntype>com.glide.Hitex_TargetDrawable</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Into2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Thumbnail</name>
            <comment>Glide.Load2(imageLink).Thumbnail(Glide.Load(File.DirAssets,"placeholder.gif")).Into(imageView)</comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>ThumbnailRequest</name>
                <type>com.glide.Hitex_RequestBuilder</type>
            </parameter>
        </method>
        <method>
            <name>Preload</name>
            <comment></comment>
            <returntype>com.glide.Hitex_TargetDrawable</returntype>
        </method>
        <method>
            <name>PlaceholderGif</name>
            <comment>Sets an animated gif display while a resource is loading.</comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>GifPath</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>TransitionCrossFade</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Clone</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
        </method>
    </class>
    <class>
        <name>com.glide.Hitex_RequestManager</name>
        <shortname>Hitex_RequestManager</shortname>
        <objectwrapper>com.bumptech.glide.RequestManager</objectwrapper>
        <owner>process</owner>
        <method>
            <name>Load</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>ResumeRequestsRecursive</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ApplyDefaultRequestOptions</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestManager</returntype>
            <parameter>
                <name>requestOptions</name>
                <type>com.glide.Hitex_RequestOptions</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Load4</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Drawable</name>
                <type>anywheresoftware.b4a.objects.drawable.BitmapDrawable</type>
            </parameter>
        </method>
        <method>
            <name>ResumeRequests</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Load5</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Model</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>Load2</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Clear</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>view</name>
                <type>anywheresoftware.b4a.objects.ConcreteViewWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Load3</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>bitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Load8</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>uri</name>
                <type>android.net.Uri</type>
            </parameter>
        </method>
        <method>
            <name>Load9</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>file</name>
                <type>java.io.File</type>
            </parameter>
        </method>
        <method>
            <name>Load6</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>bytes</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>Load7</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestBuilder</returntype>
            <parameter>
                <name>resourceId</name>
                <type>java.lang.Integer</type>
            </parameter>
        </method>
        <method>
            <name>PauseRequests</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>PauseRequestsRecursive</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>IsPaused</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.glide.Hitex_RequestOptions</name>
        <shortname>Hitex_RequestOptions</shortname>
        <objectwrapper>com.bumptech.glide.request.RequestOptions</objectwrapper>
        <owner>process</owner>
        <method>
            <name>SizeMultiplier</name>
            <comment>Applies a multiplier to the Target's size before loading the resource. Useful for loading thumbnails or trying to avoid loading huge resources (particularly Bitmaps on devices with overly dense screens.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>SizeMultiplier</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Placeholder</name>
            <comment>Sets a bitmap display while a resource is loading.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Loadingbitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>Frame</name>
            <comment>Sets the time position of the frame to extract from a video.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>FrameTimeMicros</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>EncodeFormat</name>
            <comment>"PNG"
 "JPEG"
 "WEBP"</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Format</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DisallowHardwareConfig</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Skip</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Apply</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>OtherRequestOptions</name>
                <type>com.glide.Hitex_RequestOptions</type>
            </parameter>
        </method>
        <method>
            <name>FallBack</name>
            <comment>Sets an Drawable to display if the model provided to RequestBuilder.load(Object) is null.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>fallBack</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>Format</name>
            <comment>"DEFAULT"
 "PREFER_ARGB_8888"
 "PREFER_RGB_565"
 "PREFER_ARGB_8888_DISALLOW_HARDWARE" --&gt; DEPRECATED</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>DecodeFormat</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SkipMemoryCache</name>
            <comment>Allows the loaded resource to skip the memory cache.
 Note - this is not a guarantee. If a request is already pending for this resource and that request is not also skipping the memory cache, the resource will be cached in memory.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Skip</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>BitmapTransform</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Transformation</name>
                <type>com.bumptech.glide.load.Transformation</type>
            </parameter>
        </method>
        <method>
            <name>FitCenter</name>
            <comment>Applies FitCenter to all default types and throws an exception if asked to transform an unknown type.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>DiskCacheStrategy</name>
            <comment>Sets the DiskCacheStrategy to use for this load.
 Defaults to DiskCacheStrategy.AUTOMATIC.

 For most applications DiskCacheStrategy.RESOURCE is ideal.
 Applications that use the same resource multiple times in multiple sizes and are willing to trade off some speed and disk space in return for lower bandwidth usage may want to consider using DiskCacheStrategy.DATA or DiskCacheStrategy.ALL.
 ________________________________________________________________
 &lt;code&gt;"NONE"&lt;/code&gt;
 Saves no data to cache.
 _______________________________________________________________
 &lt;code&gt;"ALL"&lt;/code&gt;
 Caches remote data with both DATA and RESOURCE, and local data with RESOURCE only.
 _______________________________________________________________
 &lt;code&gt;"RESOURCE"&lt;/code&gt;
 Writes resources to disk after they've been decoded.
 _______________________________________________________________
 &lt;code&gt;"AUTOMATIC"&lt;/code&gt;
 Tries to intelligently choose a strategy based on the data source of the DataFetcher and the EncodeStrategy of the ResourceEncoder (if an ResourceEncoder is available).
 _______________________________________________________________
 &lt;code&gt;"DATA"&lt;/code&gt;
 Writes retrieved data directly to the disk cache before it's decoded.
 _______________________________________________________________</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Strategy</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>DontAnimate</name>
            <comment>Disables resource decoders that return animated resources so any resource returned will be static.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>Override</name>
            <comment>Overrides the Target's width and height with the given values.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>OptionalCenterCrop</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>OptionalCircleCrop</name>
            <comment>Applies CircleCrop to all default types, and ignores unknown types.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>EncodeQuality</name>
            <comment>Sets the value for key BitmapEncoder.COMPRESSION_QUALITY.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Quality</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Priority</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Priority</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Timeout</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Timeout</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>CenterCrop</name>
            <comment>Applies CenterCrop to all default types and throws an exception if asked to transform an unknown type.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>Error</name>
            <comment>Sets a bitmap to display if a load fails.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>ErrorBitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>DontTransform</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>CenterInside</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>OnlyRetrieveFromCache</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Lock</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>UseUnlimitedSourceGeneratorsPool</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Equals</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>o</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>CircleCrop</name>
            <comment>Applies CircleCrop to all default types and throws an exception if asked to transform an unknown type.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
        </method>
        <method>
            <name>UseAnimationPool</name>
            <comment></comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Override2</name>
            <comment>Overrides the Target's width and height with the given size.</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DownSample</name>
            <comment>&lt;code&gt;"NONE"&lt;/code&gt;
 &lt;code&gt;"DEFAULT"&lt;/code&gt;
 &lt;code&gt;"AT_MOST"&lt;/code&gt;
 &lt;code&gt;"AT_LEAST"&lt;/code&gt;
 &lt;code&gt;"FIT_CENTER"&lt;/code&gt;
 &lt;code&gt;"CENTER_INSIDE"&lt;/code&gt;
 &lt;code&gt;"AT_LEAST"&lt;/code&gt;</comment>
            <returntype>com.glide.Hitex_RequestOptions</returntype>
            <parameter>
                <name>Strategy</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>OverrideHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>OverrideWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetUseUnlimitedSourceGeneratorsPool</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsTransformationRequired</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsLocked</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsPrioritySet</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsTransformationAllowed</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetOnlyRetrieveFromCache</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetErrorPlaceholder</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsValidOverride</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetPlaceholder</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetUseAnimationPool</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsSkipMemoryCacheSet</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsDiskCacheStrategySet</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>GetFallback</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IsMemoryCacheable</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.glide.Hitex_TargetDrawable</name>
        <shortname>Hitex_TargetDrawable</shortname>
        <objectwrapper>com.bumptech.glide.request.target.Target</objectwrapper>
        <owner>process</owner>
        <method>
            <name>onResourceReady</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>onLoadFailed</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>onLoadCleared</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>GetSize</name>
            <comment>Sub EventName_onSizeReady (Tag As Object, Width As Int, Height As Int)
 mEditDeskLayout.setImageSize(Width, Height)
 End Sub</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>RemoveGetSizeCallback</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onLoadStarted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>bitmap</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <property>
            <name>Request</name>
            <returntype>com.glide.Hitex_Request</returntype>
            <parameter>
                <name>request</name>
                <type>com.glide.Hitex_Request</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>com.glide.Hitex_ViewTarget</name>
        <shortname>Hitex_ViewTarget</shortname>
        <objectwrapper>com.bumptech.glide.request.target.ViewTarget</objectwrapper>
        <owner>process</owner>
        <method>
            <name>ClearOnDetach</name>
            <comment></comment>
            <returntype>com.glide.Hitex_ViewTarget</returntype>
        </method>
        <method>
            <name>onLoadCleared</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>placeholder</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <method>
            <name>GetSize</name>
            <comment>Example : &lt;code&gt;
 Glide.Load2(imageLink).Into(imageView).GetSize("Glide","someTag")
 &lt;/code&gt;
 ___________________________________________________________________________
 Event : &lt;code&gt;
 Sub Glide_onSizeReady (Tag As Object, Width As Int, Height As Int)
 Log(Width)
 Log(Height)
 End Sub
 &lt;/code&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Tag</name>
                <type>java.lang.Object</type>
            </parameter>
        </method>
        <method>
            <name>RemoveGetSizeCallback</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>WaitForLayout</name>
            <comment>By using this 'Glide' will always wait for any pending layout pass
 before checking for the size a View.
 If not use , 'Glide' will only wait for a pending
 layout pass if it's unable to resolve the size from layout parameters or an existing View size.</comment>
            <returntype>com.glide.Hitex_ViewTarget</returntype>
        </method>
        <method>
            <name>onLoadStarted</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>placeholder</name>
                <type>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</type>
            </parameter>
        </method>
        <property>
            <name>Request</name>
            <returntype>com.glide.Hitex_Request</returntype>
            <parameter>
                <name>request</name>
                <type>com.glide.Hitex_Request</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ImageView</name>
            <returntype>anywheresoftware.b4a.objects.ImageViewWrapper</returntype>
            <comment></comment>
        </property>
    </class>
    <version>4.4</version>
    <author>Sadeq Nameni (Hitexroid)</author>
    <dependsOn>com.android.support:support-v4</dependsOn>
    <dependsOn>glide-4.4.0</dependsOn>
</root>
