<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4a.htmlview.R</name>
        <owner>process</owner>
    </class>
    <class>
        <name>anywheresoftware.b4a.htmlview.R.attr</name>
        <owner>process</owner>
    </class>
    <class>
        <name>anywheresoftware.b4a.htmlview.R.drawable</name>
        <owner>process</owner>
        <field>
            <name>ic_launcher</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ic_action_search</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.htmlview.R.string</name>
        <owner>process</owner>
        <field>
            <name>app_name</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.htmlview.R.style</name>
        <owner>process</owner>
        <field>
            <name>AppBaseTheme</name>
            <comment>Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.


            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.


        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.

 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.

 API 14 theme customizations can go here.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>AppTheme</name>
            <comment>Application theme. 
 All customizations that are NOT specific to a particular API-level can go here.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.htmlview.BuildConfig</name>
        <owner>process</owner>
        <field>
            <name>DEBUG</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.student.URLImageParser</name>
        <owner>process</owner>
        <method>
            <name>getDrawable</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>source</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.student.URLImageParser.ImageGetterAsyncTask</name>
        <owner>process</owner>
        <method>
            <name>fetchDrawable</name>
            <comment>Get the Drawable from URL
urlString: 
Return type: @return:</comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>urlString</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>execute</name>
            <comment></comment>
            <returntype>android.os.AsyncTask</returntype>
            <parameter>
                <name>arg0</name>
                <type>Params[]</type>
            </parameter>
        </method>
        <method>
            <name>get</name>
            <comment></comment>
            <returntype>Result</returntype>
            <parameter>
                <name>arg0</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type EnumType="true">java.util.concurrent.TimeUnit</type>
            </parameter>
        </method>
        <method>
            <name>executeOnExecutor</name>
            <comment></comment>
            <returntype>android.os.AsyncTask</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.util.concurrent.Executor</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>Params[]</type>
            </parameter>
        </method>
        <method>
            <name>isCancelled</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>cancel</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name></name>
            <returntype>Result</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Status</name>
            <returntype EnumType="true">android.os.AsyncTask.Status</returntype>
            <comment></comment>
        </property>
        <field>
            <name>SERIAL_EXECUTOR</name>
            <comment></comment>
            <returntype>java.util.concurrent.Executor</returntype>
        </field>
        <field>
            <name>THREAD_POOL_EXECUTOR</name>
            <comment></comment>
            <returntype>java.util.concurrent.Executor</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.student.URLDrawable</name>
        <owner>process</owner>
        <method>
            <name>unscheduleSelf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
        </method>
        <method>
            <name>setLevel</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>getPadding</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>createFromXml</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Resources</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.xmlpull.v1.XmlPullParser</type>
            </parameter>
        </method>
        <method>
            <name>setVisible</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>setTileModeXY</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.Shader.TileMode</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type EnumType="true">android.graphics.Shader.TileMode</type>
            </parameter>
        </method>
        <method>
            <name>invalidateSelf</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>draw</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>canvas</name>
                <type>android.graphics.Canvas</type>
            </parameter>
        </method>
        <method>
            <name>scheduleSelf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Runnable</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>isVisible</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>copyBounds</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>jumpToCurrentState</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>createFromPath</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>inflate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Resources</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.xmlpull.v1.XmlPullParser</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.util.AttributeSet</type>
            </parameter>
        </method>
        <method>
            <name>createFromStream</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>clearColorFilter</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setState</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>createFromXmlInner</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Resources</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>org.xmlpull.v1.XmlPullParser</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>android.util.AttributeSet</type>
            </parameter>
        </method>
        <method>
            <name>setColorFilter</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type EnumType="true">android.graphics.PorterDuff.Mode</type>
            </parameter>
        </method>
        <method>
            <name>createFromResourceStream</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.content.res.Resources</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>android.util.TypedValue</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>java.io.InputStream</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>resolveOpacity</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>mutate</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>isStateful</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>ConstantState</name>
            <returntype>android.graphics.drawable.Drawable.ConstantState</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TargetDensity</name>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Canvas</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>IntrinsicWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Alpha</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Bitmap</name>
            <returntype>android.graphics.Bitmap</returntype>
            <comment></comment>
        </property>
        <property>
            <name>IntrinsicHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TileModeY</name>
            <returntype EnumType="true">android.graphics.Shader.TileMode</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.Shader.TileMode</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AntiAlias</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Bounds</name>
            <returntype>android.graphics.Rect</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ColorFilter</name>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.ColorFilter</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TileModeX</name>
            <returntype EnumType="true">android.graphics.Shader.TileMode</returntype>
            <parameter>
                <name>arg0</name>
                <type EnumType="true">android.graphics.Shader.TileMode</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TransparentRegion</name>
            <returntype>android.graphics.Region</returntype>
            <comment></comment>
        </property>
        <property>
            <name>State</name>
            <returntype>int[]</returntype>
            <comment></comment>
        </property>
        <property>
            <name>FilterBitmap</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ChangingConfigurations</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Paint</name>
            <returntype>android.graphics.Paint</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Callback</name>
            <returntype>android.graphics.drawable.Drawable.Callback</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable.Callback</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Level</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinimumHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinimumWidth</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Current</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Dither</name>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.student.HtmlView</name>
        <shortname>HtmlView</shortname>
        <owner>process</owner>
        <method>
            <name>EditText2Html</name>
            <comment>Show Html style and tag in TextView
Example :  
Dim a1 As HtmlView
a1.EditText2Html(EditText1,"&lt;font color='#FFFFFF'&gt;&lt;b&gt;Hello World&lt;/b&gt;&lt;/font&gt;")</comment>
            <returntype>void</returntype>
            <parameter>
                <name>b4a</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>tv1</name>
                <type>android.widget.TextView</type>
            </parameter>
            <parameter>
                <name>HtmlCode</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <version>1.0</version>
</root>
