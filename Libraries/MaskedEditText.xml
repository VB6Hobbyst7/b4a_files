<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.05</doclet-version-NOT-library-version>
    <class>
        <name>flm.b4a.maskededittext.MaskedEditTextWrapper</name>
        <shortname>MaskedEditText</shortname>
        <objectwrapper>flm.b4a.maskededittext.MaskedEditText</objectwrapper>
        <owner>activity</owner>
        <event>EnterPressed</event>
        <event>Filter(NewText As String, Position As Int, Replace As Boolean) As String</event>
        <event>FocusChanged(HasFocus As Boolean)</event>
        <event>TextChanged(Old As String, New As String)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SelectAll</name>
            <comment>Selects the entire text.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetTextSizeAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>EnableFloatingHint</name>
            <comment>A floating hint is a hint that moves above the EditText when the user starts typing.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SetTextColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>SetFromHTML</name>
            <comment>Replaces the text with a conversion of the provided HTML string.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>HTML</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>ShowError</name>
            <comment>Sets an icon and an error message that will be displayed in a popup when the EditText has focus.
 The icon and error message will be cleared if Message is empty or the text is modified.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Message</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>CompactText</name>
            <returntype>java.lang.String</returntype>
            <comment>Returns a copy of the text without the leading and trailing spaces, and without the placeholders if Format is not empty.</comment>
        </property>
        <property>
            <name>Placeholder</name>
            <returntype>char</returntype>
            <parameter>
                <name>Placeholder</name>
                <type>char</type>
            </parameter>
            <comment>Gets or sets the placeholder character for the input mask.
 Default = '_'</comment>
        </property>
        <property>
            <name>Wrap</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the text content will wrap within the EditText bounds. Relevant when the EditText is in multiline mode.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ForceDoneButton</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment>By default the OS sets the virtual keyboard action key to display Done or Next according to the specific layout.
 You can force it to display Done by setting this value to True.</comment>
        </property>
        <property>
            <name>Hint</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the text that will appear when the EditText is empty.</comment>
        </property>
        <property>
            <name>Parent</name>
            <returntype>java.lang.Object</returntype>
            <comment></comment>
        </property>
        <property>
            <name>SelectionStart</name>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the selection start position (or the cursor position).
 Returns -1 if there is no selection or cursor.</comment>
        </property>
        <property>
            <name>Format</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Format</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Gets or sets the input mask.
 Mask characters:
 # = Digit
 L = Letter
 A = Alphanumeric
 H = Hexadecimal
 ? = Any character
 Examples:
 - Date &amp;amp; time = "##/##/#### ##:##"
 - Phone number = "(###) ###-####"
 - IP address = "###.###.###.###"
 - MAC address = "HH:HH:HH:HH:HH:HH"
 - Parental lock password = "AAAA"</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>Visible</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ReadOnly</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>ReadOnly</name>
                <type>boolean</type>
            </parameter>
            <comment>Gets or sets whether the EditText is editable.
 Default = False</comment>
        </property>
        <property>
            <name>HintColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the hint text color.</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Typeface</name>
            <returntype>android.graphics.Typeface</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Typeface</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextSize</name>
            <returntype>float</returntype>
            <parameter>
                <name>arg0</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>PasswordMode</name>
            <parameter>
                <name>PasswordMode</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the EditText should be in password mode and hide the actual characters.
 Default = False</comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>Text</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment>Gets or sets the text.
 Ignores the ReadOnly setting.</comment>
        </property>
        <property>
            <name>InputType</name>
            <returntype>int</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the input type flag. This flag is used to determine the settings of the virtual keyboard.
 The value is one of the INPUT_TYPE constants.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>WithSuggestions</name>
            <parameter>
                <name>value</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the virtual keyboard displays any dictionary-based candidates.
 This setting is automatically set to False if Format is not empty or there's a handler for the Filter event (this incompatibility is due to a bug in ICS and JellyBean).
 This setting is ignored when InputType is Numbers or Phone, or when PasswordMode is True.
 Default = False</comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectionEnd</name>
            <returntype>int</returntype>
            <comment>Gets the selection end position (or the cursor position).
 Returns -1 if there is no selection or cursor.</comment>
        </property>
        <property>
            <name>SingleLine</name>
            <parameter>
                <name>singleLine</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the EditText should be in single line mode or multiline mode.
 Default = False</comment>
        </property>
        <field>
            <name>INPUT_TYPE_NONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_TEXT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_NUMBERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_NUMBERS_WITH_SIGN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_DECIMAL_NUMBERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_TEXT_WITH_CAPS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>INPUT_TYPE_PHONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <designerProperty>key:FloatingHint, displayname:FloatingHint, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:ForceDoneButton, displayname:ForceDoneButton, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:Format, displayname:Format, defaultvalue:, fieldtype:String, description:Mask characters: #=Digit L=Letter A=Alphanumeric H=Hexadecimal ?=Any character.</designerProperty>
        <designerProperty>key:Hint, displayname:Hint, defaultvalue:, fieldtype:String</designerProperty>
        <designerProperty>key:InputType, displayname:InputType, defaultvalue:INPUT_TYPE_TEXT, fieldtype:String, list:INPUT_TYPE_NONE|INPUT_TYPE_NUMBERS|INPUT_TYPE_NUMBERS_WITH_SIGN|INPUT_TYPE_DECIMAL_NUMBERS|INPUT_TYPE_PHONE|INPUT_TYPE_TEXT|INPUT_TYPE_TEXT_WITH_CAPS</designerProperty>
        <designerProperty>key:PasswordMode, displayname:PasswordMode, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:Placeholder, displayname:Placeholder, defaultvalue:_, fieldtype:String</designerProperty>
        <designerProperty>key:ReadOnly, displayname:ReadOnly, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:SingleLine, displayname:SingleLine, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:WithSuggestions, displayname:WithSuggestions, defaultvalue:False, fieldtype:Boolean</designerProperty>
        <designerProperty>key:Wrap, displayname:Wrap, defaultvalue:True, fieldtype:Boolean</designerProperty>
    </class>
    <version>1.52</version>
    <author>Fr\u00e9d\u00e9ric Leneuf-Magaud</author>
</root>
