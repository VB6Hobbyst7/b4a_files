<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.02</doclet-version-NOT-library-version>
    <class>
        <name>flm.media.browser.MediaBrowser</name>
        <shortname>MediaBrowser</shortname>
        <owner>process</owner>
        <event>MediaCompleted</event>
        <event>ScanCompleted(Path As String)</event>
        <event>SeekCompleted</event>
        <method>
            <name>MediaSeek</name>
            <comment>Seeks to specified time position (in ms).
Raises the event "SeekCompleted" when the position change has been completed.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetExtImageFileInfo</name>
            <comment>Returns a Map containing info from the MediaStore about an external image file.
Location = complete path name for the file.
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Height" (with Android 3.0+)
"Width" (with Android 3.0+)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Location</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetImageFileInfoByID</name>
            <comment>Returns a Map containing info from the MediaStore about an image file.
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Height" (with Android 3.0+)
"Width" (with Android 3.0+)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ID</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>GetAudioFileInfo</name>
            <comment>Returns a Map containing info from the MediaStore about an audio file.
  
The fields that are returned are:
"ID"
"Title"
"Album"
"Artist"
"Track"
"Year"
"Location"
"DisplayName"
"Duration" (in ms)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Path</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>File</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MediaPosition</name>
            <comment>Gets the current playback position.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>ScanNewMedia</name>
            <comment>Requests the media scanner to scan the given files and add them to the MediaStore.
 Raises the "ScanCompleted" event after each file is scanned.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>Paths</name>
                <type>java.lang.String[]</type>
            </parameter>
        </method>
        <method>
            <name>GetVideoFileInfoByID</name>
            <comment>Returns a Map containing info from the MediaStore about a video file.
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Resolution" (can be Null for some files)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ID</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>MediaSetVolume</name>
            <comment>Sets the volume on this player (and this player only).
Note that the passed volume values are raw scalars. UI controls should be scaled logarithmically.
This function must be called AFTER MediaAudioPlay.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>leftVolume</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>rightVolume</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>GetImageDimensions</name>
            <comment>Returns a map containing width and height of the specified file.
Location = complete path name for the file.</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Location</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MediaStop</name>
            <comment>Stops the playback and releases the allocated resources.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>MediaAudioPlay</name>
            <comment>Plays an audio file.
Raises the "MediaCompleted" event when the file end is reached.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ID</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>GetMediaVideoList</name>
            <comment>Returns a Map containing a list of all Video files in the MediaStore which can be sorted.
  
The allowed fields for sorting are:
Null (if Null is used, it will sort on the ID)
"_data" (location)
"_display_name"
"datetaken"
"_size"
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Resolution" (can be Null for some files)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>SortCol</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MediaLength</name>
            <comment>Returns the duration in ms.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetImgThumbnailByID</name>
            <comment>Returns the micro thumbnail (96x96) or mini thumbnail (512x384) of an image file (it is generated if it doesn't exist).</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>ID</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Mini</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>MediaIsPlaying</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>MediaIsLooping</name>
            <comment>Checks whether the player is looping or non-looping.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>GetMediaImageList</name>
            <comment>Returns a Map containing a list of all Image files in the MediaStore which can be sorted.

The allowed fields for sorting are:
Null (if Null is used, it will sort on the ID)
"_data" (location)
"_display_name"
"datetaken"
"size"
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Height" (with Android 3.0+)
"Width" (with Android 3.0+)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>SortCol</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetMediaAudioList</name>
            <comment>Returns a Map containing a list of all Audio files in the MediaStore which can be sorted.

The allowed fields for sorting are:
Null (if Null is used, it will sort on the ID)
"title"
"album"
"artist"
"track"
"year"
"_data" (location)
"_display_name"
"duration"
  
The fields that are returned are:
"ID"
"Title"
"Album"
"Artist"
"Track"
"Year"
"Location"
"DisplayName"
"Duration" (in ms)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>SortCol</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>GetExtVideoFileInfo</name>
            <comment>Returns a Map containing info from the MediaStore about an external video file.
Location = complete path name for the file.
  
The fields that are returned are:
"ID"
"Location"
"DisplayName"
"DateTaken" (in ticks from 1970)
"Resolution" (can be Null for some files)
"Size" (in bytes)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>Location</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>MediaResume</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>MediaPause</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>GetAudioFileInfoByID</name>
            <comment>Returns a Map containing info from the MediaStore about an audio file.
  
The fields that are returned are:
"ID"
"Title"
"Album"
"Artist"
"Track"
"Year"
"Location"
"DisplayName"
"Duration" (in ms)</comment>
            <returntype>anywheresoftware.b4a.objects.collections.Map</returntype>
            <parameter>
                <name>External</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>ID</name>
                <type>long</type>
            </parameter>
        </method>
        <method>
            <name>MediaSetLooping</name>
            <comment>Sets the player to be looping or non-looping.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Looping</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>GetVideoThumbnailByID</name>
            <comment>Returns the micro thumbnail (96x96) or mini thumbnail (512x384) of a video file (it is generated if it doesn't exist). 
There's a known bug on some Android versions with micro thumbnails:
If the micro thumbnail can't be generated (e.g. video file format not recognized), the result is either null or a random thumbnail. Thus, for video files, it is strongly recommended to check if the mini thumbnail is initialized before trying to get the micro thumbnail.</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>ID</name>
                <type>long</type>
            </parameter>
            <parameter>
                <name>Mini</name>
                <type>boolean</type>
            </parameter>
        </method>
        <field>
            <name>Tag</name>
            <comment></comment>
            <returntype>java.lang.Object</returntype>
        </field>
    </class>
    <version>1.31</version>
    <author>Edward Smith and F. Leneuf-Magaud</author>
</root>
