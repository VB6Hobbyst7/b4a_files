<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4a.agraham.opengl.GLWrapper</name>
        <shortname>GL1</shortname>
        <comment>This object does all the drawing work and is an exposure one or more of the Android OpenGL interfaces.

The GL1 function and parameter names mirror those of the GL10, GL10Ext, GL11, GL11Ext and
GL11ExtensionPack interfaces. These interfaces should be present on all Android versions
from 1.6 but just in case not the ability to check the presence of each is provided.

Some variations of functions that use native buffers instead of arrays are omitted, generally
where there is an array equivalent. Where there is not an equivalent using a float array has
been synthesised and the name suffixed with an "f".

Note that although documented in the Android documentation, and included in this library for
completeness, it seems that most, if not all, of the GL11ExtensionPack glget... functions throw
an UnsupportedOperationException.</comment>
        <owner>activity</owner>
        <method>
            <name>glFrustumf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glPointParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetBooleanv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>boolean[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexEnvx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightModelxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightModelf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTexEnvxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFrustumx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zNear</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glScissor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glActiveTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightModelfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPointParameterxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMatrixIndexPointerOES2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPixelStorei</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexiOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexGenfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetFramebufferAttachmentParameterivOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glColorPointerf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>colors</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glMaterialx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFogfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetError</name>
            <comment>Note that calling this method probably resets the error so the return value may need
to be saved for further use.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glEnableClientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>array</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFogf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameteri</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPointSizex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsRenderbufferOES</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClearStencil</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>s</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>InterfacesString</name>
            <comment>Returns a string containing the interface names implemented.</comment>
            <returntype>java.lang.String</returntype>
        </method>
        <method>
            <name>glTexEnvfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFogx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsFramebufferOES</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexGeni</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexGenf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glFinish</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glLineWidth</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glStencilOp</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>fail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zfail</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zpass</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glSampleCoveragex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>invert</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexxOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexGenx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glQueryMatrixxOES</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>mantissa</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>mantissaOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>exponent</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>exponentOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetString</name>
            <comment></comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>name</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexEnviv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferTexture2DOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMaterialfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMaterialf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glBindFramebufferOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClearColorx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquation</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glOrthof</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexxvOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coords</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetIntegerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glSampleCoverage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>invert</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glGetFloatv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenRenderbuffersOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glHint</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexParameterxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexGeniv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glColorPointer2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteTextures</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>textures</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexEnvi</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindRenderbufferOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFogxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexEnvf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glCullFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteBuffers</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glViewport</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClientActiveTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glRotatex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>angle</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGenFramebuffersOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPolygonOffset</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>factor</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glRotatef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>angle</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glPushMatrix</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glPopMatrix</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glColor4ub</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>byte</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>byte</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>byte</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>byte</type>
            </parameter>
        </method>
        <method>
            <name>glReadPixels</name>
            <comment>Returns an array containing the ARGB pixels in the specified area of the frame-buffer.</comment>
            <returntype>int[]</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Implements</name>
            <comment>Given an InterfaceGLxxx constant returns whether that interface is implemented or not.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>glinterface</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>gluLookAt</name>
            <comment>Define a viewing transformation in terms of an eye point, a center of view, and an up vector.
  eyeX  eye point X 
  eyeY  eye point Y
  eyeZ  eye point Z
  centerX  center of view X
  centerY  center of view Y
  centerZ  center of view Z
  upX  up vector X
  upY  up vector Y
  upZ  up vector Z</comment>
            <returntype>void</returntype>
            <parameter>
                <name>eyeX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>eyeY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>eyeZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centerX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centerY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>centerZ</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>upZ</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>gluErrorString</name>
            <comment>Return an error string from a GL or GLU error code.</comment>
            <returntype>java.lang.String</returntype>
            <parameter>
                <name>error</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawElements2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClipPlanex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>plane</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>equation</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glWeightPointerOESf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPolygonOffsetx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>factor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>units</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glNormalPointer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClipPlanef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>plane</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>equation</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetFixedv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTranslatef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glIsTexture</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLineWidthx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteRenderbuffersOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsEnabled</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>gluPerspective</name>
            <comment>Set up a perspective projection matrix.
fovy  specifies the field of view angle, in degrees, in the Y direction.
aspect  specifies the aspect ratio that determines the field of view in the x direction.
  Aspect ratio is the ratio of x (width) to y (height).
zNear  specifies the distance from the viewer to the near clipping plane (always positive).
zFar  specifies the distance from the viewer to the far clipping plane (always positive).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>fovy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>aspect</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glMatrixMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexfOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTranslatex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glEnable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPointSizePointerOESf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glFramebufferRenderbufferOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>attachment</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffertarget</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>renderbuffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexCoordPointerf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glClearDepthf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>depth</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetBufferParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glColor4x</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDisable</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>cap</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClearDepthx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>depth</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>sfactor</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dfactor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glNormal3f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>nx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>ny</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>nz</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glTexGeniv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCopyTexImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>border</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexEnvxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>env</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawElements</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indices</name>
                <type>short[]</type>
            </parameter>
        </method>
        <method>
            <name>glRenderbufferStorageOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>internalformat</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCurrentPaletteMatrixOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>matrixpaletteindex</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDepthRangex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>zNear</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glNormal3x</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>nx</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ny</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>nz</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawArrays</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>first</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexCoordPointer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glAlphaFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glMatrixIndexPointerOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>byte[]</type>
            </parameter>
        </method>
        <method>
            <name>glDepthRangef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>zNear</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetPointerv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
        </method>
        <method>
            <name>glStencilMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClearColor</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glColorMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>boolean</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glDisableClientState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>array</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetClipPlanef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>eqn</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPointParameterf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glBindTexture</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>texture</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glClear</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glReadPixelBitmap</name>
            <comment>Returns the specified portion of the framebuffer as an ARGB_8888 Bitmap);</comment>
            <returntype>android.graphics.Bitmap</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBufferSubDataf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glColor4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>red</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>green</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>blue</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glPointParameterx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetClipPlanex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>eqn</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexEnviv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>env</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexivOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coords</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Interfaces</name>
            <comment>Returns the logical OR (sum) of the InterfaceGLxxx constants for the interfaces implemented.</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>glDepthFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexGenfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBufferDataf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>data</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>usage</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glScalex</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glOrthox</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zNear</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>zFar</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetLightxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMultMatrixf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexPointer2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMultiTexCoord4f</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>s</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>t</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>r</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>q</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glScalef</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetMaterialxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glAlphaFuncx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glIsBuffer</name>
            <comment></comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDeleteFramebuffersOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>n</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>framebuffers</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMultMatrixx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLoadIdentity</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glTexSubImage2D</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>level</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>xoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>yoffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexfvOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coords</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetTexGenxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glStencilFunc</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>func</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>ref</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glCheckFramebufferStatusOES</name>
            <comment></comment>
            <returntype>int</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>gluOrtho2D</name>
            <comment>Set up a 2D orthographic projection matrix.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glLightfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFlush</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glGetLightfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glShadeModel</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glLoadMatrixx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glVertexPointerf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>points</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexsOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>x</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type>short</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type>short</type>
            </parameter>
        </method>
        <method>
            <name>glLoadPaletteFromModelViewMatrixOES</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>glNormalPointerf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pointer</name>
                <type>float[]</type>
            </parameter>
        </method>
        <method>
            <name>glGenerateMipmapOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendFuncSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>srcRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>srcAlpha</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>dstAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>light</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLoadMatrixf</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameterxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDrawTexsvOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coords</name>
                <type>short[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLogicOp</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>opcode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glPointSize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>glGetRenderbufferParameterivOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMultiTexCoord4x</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>s</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>t</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>r</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>q</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBindBuffer</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>buffer</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glGetMaterialfv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glMaterialxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>face</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glDepthMask</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>flag</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>glTexParameteriv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>target</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glBlendEquationSeparate</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>modeRGB</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>modeAlpha</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glFrontFace</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glTexGenxv</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>coord</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glWeightPointerOES</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stride</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>glLightModelx</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pname</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>param</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Version</name>
            <returntype>double</returntype>
            <comment>Returns the version of the library.</comment>
        </property>
        <field>
            <name>GL_COLOR_ATTACHMENT14_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_EQUATION_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COMBINE_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ONE_MINUS_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT13_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CONSTANT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND2_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CULL_FACE_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL11All</name>
            <comment>Constant for checking implementation of the all Android GL1 interfaces.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INCR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_GEN_STR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EXP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_EQUATION_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_END</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ONE_MINUS_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNSIGNED_SHORT_5_6_5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_COMPLETE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SHADE_MODEL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MULTISAMPLE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FLOAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE4_RGB5_A1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LUMINANCE_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE20</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_TEXTURE_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_RED_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_REPEAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINE_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_COMPONENT16</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT2_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_ALPHA_TO_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE19</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE18</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE17</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE16</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE15</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_COMPONENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE14</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE13</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE12</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE11</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE10</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE30</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE31</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE4_R5_G6_B5_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_DISTANCE_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_ATTACHMENT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_COMPONENT24</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POLYGON_OFFSET_UNITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GREATER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NOTEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_ELEMENTS_INDICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE29</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE26</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VENDOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE25</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE28</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE27</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE22</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE21</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE24</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE23</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC1_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_START</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC0_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_SRC_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC1_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_COMPONENT32</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_AMBIENT_AND_DIFFUSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WRITE_ONLY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLUE_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ZERO</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ONE_MINUS_DST_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_BINDING_CUBE_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT11_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINE_LOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINEAR_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FALSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COPY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_RENDERBUFFER_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PROJECTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_UNSUPPORTED_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC0_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_INDEX1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_BUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_COLOR_ATTACHMENTS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EXTENSIONS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_ARRAY_STRIDE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GENERATE_MIPMAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INVALID_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_AND_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_MODELVIEW_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA_SCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SPRITE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_POSITIVE_X</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_POSITIVE_Y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_POSITIVE_Z</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CURRENT_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MIRRORED_REPEAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LUMINANCE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BUFFER_ACCESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_TEXTURE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ADD_SIGNED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_ALPHA_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NO_ERROR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POLYGON_OFFSET_FACTOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE4_RGBA8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINEAR_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND0_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE8_RGB8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INVALID_ENUM</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_REPLACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NUM_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNSIGNED_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_STRIDE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_FADE_THRESHOLD_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CURRENT_TEXTURE_COORDS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT_MODEL_TWO_SIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_QUADRATIC_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALIASED_POINT_SIZE_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STACK_UNDERFLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL11</name>
            <comment>Constant for checking implementation of the Android GL11 interface.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINEAR_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_COVERAGE_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FLAT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALWAYS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SET</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL10</name>
            <comment>Constant for checking implementation of the Android GL10 interface.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT_MODEL_AMBIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BYTE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIENT_ACTIVE_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNSIGNED_SHORT_4_4_4_4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA_TEST_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SUBPIXEL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_GREEN_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SPOT_DIRECTION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MODELVIEW_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_COVERAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TRIANGLE_FAN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PREVIOUS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_VALUE_MASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_REFLECTION_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INTERPOLATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NEAREST_MIPMAP_NEAREST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BUFFER_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EQUIV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC_ALPHA_SATURATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COPY_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GENERATE_MIPMAP_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_DST_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_ALPHA_TO_ONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NAND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_INDEX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_PROJECTION_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_DEPTH_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FUNC_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE8_RGBA8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT9_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_BLUE_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DECAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INVALID_OPERATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DONT_CARE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NICEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLIP_PLANE2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_POINTER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_CLEAR_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT6_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POSITION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLAMP_TO_EDGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BUFFER_USAGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRONT_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND2_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC2_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DOT3_RGBA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE8_RGBA4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND1_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_CUBE_MAP_TEXTURE_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_PASS_DEPTH_PASS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_STENCIL_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_LIGHTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POLYGON_OFFSET_FILL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_ENV</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_BINDING_2D</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT15_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND1_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DECR_WRAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SHININESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VIEWPORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LOGIC_OP_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TRUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT10_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DECR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SCISSOR_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DYNAMIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ADD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_WRAP_T</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_WRAP_S</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ONE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INCR_WRAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MODELVIEW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGB565_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SMOOTH_POINT_SIZE_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP_NEGATIVE_X</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_ARRAY_POINTER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FIXED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_XOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FUNC_REVERSE_SUBTRACT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RED_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NEAREST_MIPMAP_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COMPRESSED_TEXTURE_FORMATS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_HEIGHT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_ENV_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_GEN_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PROJECTION_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE8_RGB5_A1_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OR_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SCISSOR_BOX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POLYGON_SMOOTH_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGB5_A1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PRIMARY_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ACTIVE_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_MAG_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_PALETTE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INVERT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHTING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LESS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_DST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CCW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NOOP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_COVERAGE_VALUE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CONSTANT_ATTENUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_STRIDE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OR_REVERSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_WEIGHT_ARRAY_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SMOOTH_LINE_WIDTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNSIGNED_SHORT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA_TEST_REF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CUBE_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_INDEX8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_WRITEMASK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STATIC_DRAW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FASTEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_PASS_DEPTH_FAIL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRONT_AND_BACK</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_MAX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT12_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMALIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LEQUAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_INDEX4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_ARRAY_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_MIN_FILTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DIFFUSE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PROJECTION_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TRIANGLES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE4_RGBA4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_MIN</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_POINTER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MODULATE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LIGHT2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_MATERIAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT0_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_KEEP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ELEMENT_ARRAY_BUFFER_BINDING</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SPOT_EXPONENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SRC2_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_AND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_CROP_RECT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE4_RGB8_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINE_SMOOTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PERSPECTIVE_CORRECTION_HINT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SAMPLE_BUFFERS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SPECULAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_AND_INVERTED</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_PALETTE_MATRICES_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OUT_OF_MEMORY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_WIDTH_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CLEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ONE_MINUS_DST_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FOG_DENSITY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STACK_OVERFLOW</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_VIEWPORT_DIMS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRONT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_BUFFER_BIT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_INVALID_FRAMEBUFFER_OPERATION_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_CLIP_PLANES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COMBINE_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL11Ext</name>
            <comment>Constant for checking implementation of the Android GL11Ext interface.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_INDEX_ARRAY_SIZE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_ELEMENTS_VERTICES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_GREEN_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_COORD_ARRAY</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TRIANGLE_STRIP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY_POINTER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL11ExtensionPack</name>
            <comment>Constant for checking implementation of the Android GL11ExtensionPack interface.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MATRIX_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NORMAL_MAP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_AMBIENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_SPOT_CUTOFF</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COMBINE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_PALETTE8_R5_G6_B5_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FUNC_ADD</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RESCALE_NORMAL</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EMISSION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ELEMENT_ARRAY_BUFFER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT3_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINEAR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALPHA_BITS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_ALIASED_LINE_WIDTH_RANGE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNSIGNED_SHORT_5_5_5_1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINTS</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DOT3_RGB</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_ATTACHMENT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_LOGIC_OP</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COORD_REPLACE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT7_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGB_SCALE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE1</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_NEVER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_STENCIL_FUNC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE3</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DITHER</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE5</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE6</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE7</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT5_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE9</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MODELVIEW_MATRIX</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_IMPLEMENTATION_COLOR_READ_TYPE_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ATTACHMENT4_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_TEXTURE_STACK_DEPTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_UNPACK_ALIGNMENT</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_COLOR_ARRAY_TYPE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_SRC</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND_EQUATION</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE0</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_MAX_VERTEX_UNITS_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>InterfaceGL10Ext</name>
            <comment>Constant for checking implementation of the Android GL10Ext interface.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_BLEND</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_TEXTURE_ENV_MODE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RENDERBUFFER_INTERNAL_FORMAT_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGB8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CULL_FACE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_EXP2</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGBA4</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_DEPTH_TEST</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_OPERAND0_ALPHA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGBA8</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_POINT_SIZE_ARRAY_OES</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY_STRIDE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_RGBA</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_CURRENT_COLOR</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_LINE_WIDTH</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>GL_VERTEX_ARRAY_SIZE</name>
            <comment></comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.agraham.opengl.GLWrapper.GLSurfaceViewWrapper</name>
        <shortname>GLSurfaceView</shortname>
        <comment>An implementation of SurfaceView that uses the dedicated surface for displaying OpenGL
rendering. A GLSurfaceView provides the following features:

  Manages a surface, which is a special piece of memory that can be composited into the Android view system.
  Manages an EGL display, which enables OpenGL to render into a surface.
  Renders on a dedicated thread to decouple rendering performance from the UI thread.
  Supports both on-demand and continuous rendering. 
  
At present a reasonable set of drawing defaults are used to set up the GLSurfaceView.
More control may be available in a future release of this library
glFrustrumf must be called in the SurfaceChanged event to define a frustrum
otherwise the GLSurfaceView is ready to be drawn on.

Presently there is an unwanted field "ba" visible to Basic4android. Ignore this field.
This field appears due to a feature (bug?) in the Basic4android documentation doclet.

This view raises the following three events all of which run on a separate rendering thread
and NOT on the main thread of the application. Because of this cosw running in these events
must no attempt to manipulate GUI elements. The RunOnGuiThread method can be used to
invoke a Sub to tun on the main thread and QueueEvent used to invoke a Sub to run on the
rendering thread.

SurfaceCreated
Called when the surface is created or recreated.
Called when the rendering thread starts and whenever the EGL context is lost.
The EGL context will typically be lost when the Android device awakes after going to sleep.
Since this method is called at the beginning of rendering, as well as every time the EGL
context is lost, this method is a convenient place to put code to create resources that need
to be created when the rendering starts, and that need to be recreated when the EGL context is lost.
Textures are an example of a resource that you might want to create here. 
Note that when the EGL context is lost, all OpenGL resources associated with that context will be
automatically deleted. You do not need to call the corresponding "glDelete" methods such as
glDeleteTextures to manually delete these lost resources. 

SurfaceChanged
Called when the surface has changed size.
Called after the surface is created and whenever the OpenGL ES surface size changes.
Typically you will set your viewport here. If your camera is fixed then you could also set your
projection matrix here

Draw
Called to draw the current frame.</comment>
        <objectwrapper>android.opengl.GLSurfaceView</objectwrapper>
        <owner>activity</owner>
        <event>Click</event>
        <event>LongClick</event>
        <event>Draw(gl As GL1) 'The view wants to be drawn using the supplied GL10</event>
        <event>SurfaceChanged(gl As GL1, width As Int, height As Int) 'Called when the surface has changed size.</event>
        <event>SurfaceCreated(gl As GL1) 'Called when the surface is created or recreated.</event>
        <method>
            <name>Initialize</name>
            <comment>Initializes the GLSurfaceView in the specified render mode installing a config chooser
which will choose a config as close to 16-bit RGB as possible, with a depth buffer as
close to 16-bits as possible. Calls SetEGLConfigChooser(true);</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>RenderMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>RunOnGuiThread</name>
            <comment>Causes the specified Sub to be scheduled for execution on the main GUI thread.
This mechanism is the only way a thread can access GUI items. This call returns
immediately. If it is necessary for the thread to wait for the result of the
GUI operation then it should wait on a Lock that will be reset by the called Sub
after it haas completed the GUI operation. Sometimes it seems that if the user
presses the back button, and maybe in other scenarions, then Android loses the
message and the GUI thread doesn't get it and the Sub isn't run and the Lock
isn't freed so it may be advisable in this case to use WaitFor with a reasonably
long timeout and retry until it returns True.

Returns True if the Sub was found otherwise returns False.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>sub</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>RequestRender</name>
            <comment>Request that the renderer render a frame.
This method is typically used when the render mode has been set to RENDERMODE_WHEN_DIRTY,
so that frames are only rendered on demand.
May be called from any thread.
Must not be called before a renderer has been set.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>QueueEvent</name>
            <comment>Queue a Sub to be run on the GL rendering thread.
This can be used to communicate with the Renderer on the rendering thread and
safely run non-atomic functions without any further thread synchronisation.
Using this method to update data used while rendering ensures that the data will
only be changed when rendering is not occurring,.
If an uncaught exception occurs when running the event it is saved in the
QueuedEventException property.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>eventname</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>params</name>
                <type>java.lang.Object[]</type>
            </parameter>
        </method>
        <method>
            <name>Resume</name>
            <comment>Inform the view that the activity is resumed.
The owner of this view must call this method when the activity is resumed.
Calling this method will recreate the OpenGL display and resume the rendering thread.
Must not be called before a renderer has been set.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Pause</name>
            <comment>Inform the view that the activity is paused.
The owner of this view must call this method when the activity is paused.
Calling this method will pause the rendering thread.
Must not be called before a renderer has been set.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>Initialize2</name>
            <comment>Initializes the GLSurfaceView in the specified render mode installing a config chooser
which will choose a config with 8bit RGBA with the specified depth size and stencil size.

Calls SetEGLConfigChooser(8, 8, 8, 8, depthSize, stencilSize);</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>RenderMode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>depthSize</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stencilSize</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DebugFlags</name>
            <returntype>int</returntype>
            <parameter>
                <name>debugFlags</name>
                <type>int</type>
            </parameter>
            <comment>Get or set the debug flags to a new value.
The value is constructed by OR-together zero or more of the DEBUG_CHECK_* constants.
The debug flags take effect whenever a surface is created.
The default value is zero.</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>QueuedEventException</name>
            <returntype>java.lang.Exception</returntype>
            <parameter>
                <name>ex</name>
                <type>java.lang.Exception</type>
            </parameter>
            <comment>If an uncaught exception occurs when running a queued event it is saved here
because an uncaught exception on a non-main thread will close the application.</comment>
        </property>
        <property>
            <name>RenderMode</name>
            <returntype>int</returntype>
            <parameter>
                <name>renderMode</name>
                <type>int</type>
            </parameter>
            <comment>Gets or sets the rendering mode.
When renderMode is RENDERMODE_CONTINUOUSLY, the renderer is called repeatedly
to re-render the scene. When renderMode is RENDERMODE_WHEN_DIRTY, the scene
is only rendered when the surface is created, or when requestRender() is called.
Defaults to RENDERMODE_CONTINUOUSLY.

Using RENDERMODE_WHEN_DIRTY can improve battery life and overall system performance
by allowing the GPU and CPU to idle when the view does not need to be updated.

This method can only be called after setRenderer(Renderer)</comment>
        </property>
        <field>
            <name>DEBUG_CHECK_GL_ERROR</name>
            <comment>Check glError() after every GL call and throw an exception if glError indicates that an error has occurred. This can be used to help track down which OpenGL ES call is causing an error.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
        <field>
            <name>DEBUG_LOG_GL_CALLS</name>
            <comment>Log GL calls to the system log at "verbose" level with tag "GLSurfaceView".</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RENDERMODE_CONTINUOUSLY</name>
            <comment>The renderer is called continuously to re-render the scene.</comment>
            <returntype>int</returntype>
        </field>
        <field>
            <name>RENDERMODE_WHEN_DIRTY</name>
            <comment>The renderer only renders when the surface is created, or when requestRender() is called.</comment>
            <returntype>int</returntype>
        </field>
    </class>
    <class>
        <name>anywheresoftware.b4a.agraham.opengl.GLWrapper.MatrixWrapper</name>
        <shortname>Matrix</shortname>
        <comment>This Matrix object  operates on OpenGL ES format matrices and vectors stored in float arrays.

Matrices are 4 x 4 column-vector matrices stored in column-major order: 
  m[offset +  0] m[offset +  4] m[offset +  8] m[offset + 12]
  m[offset +  1] m[offset +  5] m[offset +  9] m[offset + 13]
  m[offset +  2] m[offset +  6] m[offset + 10] m[offset + 14]
  m[offset +  3] m[offset +  7] m[offset + 11] m[offset + 15]
 
Vectors are 4 row x 1 column column-vectors stored in order:
  v[offset + 0] v[offset + 1] v[offset + 2] v[offset + 3]
  
More than one matrix or vector may be in an array. The offset parameter defines the location
of the required item in the array.</comment>
        <owner>process</owner>
        <method>
            <name>SetRotateEulerM</name>
            <comment>Converts Euler angles x, y, z to a rotation matrix.

Parameters
  rm  returns the result.
  rmOffset  index into rm where the result matrix starts.
  x  angle of rotation, in degrees.
  y  angle of rotation, in degrees.
  z  angle of rotation, in degrees.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>rmOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>SetRotateM</name>
            <comment>Rotates matrix m by angle a (in degrees) around the axis (x, y, z).
Parameters
  rm  returns the result.
  rmOffset  index into rm where the result matrix starts.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>rmOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TransposeM</name>
            <comment>Transposes a 4 x 4 matrix.

Parameters
  mTrans  the array that holds the output inverted matrix.
  mTransOffset  an offset into mInv where the inverted matrix is stored.
  m  the input array.
  mOffset  an offset into m where the matrix is stored.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>mTrans</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mTransOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>FrustumM</name>
            <comment>Define a projection matrix in terms of six clip planes. 

Parameters
  m  the float array that holds the perspective matrix 
  offset  the offset into float array m where the perspective matrix data is written</comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>near</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>far</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>OrthoM</name>
            <comment>Computes an orthographic projection matrix.

Parameters
  m  source matrix.
  mOffset  index into m where the matrix starts.
  a  angle to rotate in degrees.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>right</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>bottom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>near</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>far</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>TranslateM2</name>
            <comment>Translates matrix m by x, y, and z, putting the result in tm.

Parameters
  tm  returns the result.
  tmOffset  index into sm where the result matrix starts.
  m  source matrix.
  mOffset  index into m where the source matrix starts.
  x  translation factor x.
  y  translation factor y.
  z  translation factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>tm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>tmOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>ScaleM2</name>
            <comment>Scales matrix m by x, y, and z, putting the result in sm.

Parameters
  sm  returns the result.
  smOffset  index into sm where the result matrix starts.
  m  source matrix.
  mOffset  index into m where the source matrix starts.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>sm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>smOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>InvertM</name>
            <comment>Inverts a 4 x 4 matrix into another matrix.

Parameters
  mInv  the array that holds the output inverted matrix 
  mInvOffset  an offset into mInv where the inverted matrix is stored.
  m  the input array
  mOffset  an offset into m where the matrix is stored.
  
Returns
  true if the matrix could be inverted, false if it could not.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>mInv</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mInvOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetIdentityM</name>
            <comment>Sets matrix m to the identity matrix.

Parameters
  m  returns the result.
  mOffset  index into m where the result matrix starts.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>sm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>smOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>TranslateM</name>
            <comment>Translates matrix m by x, y, and z in place.

Parameters
  m  matrix.
  mOffset  index into m where the matrix starts.
  x  translation factor x.
  y  translation factor y.
  z  translation factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MultiplyMM</name>
            <comment>Multiply two 4x4 matrices together and store the result in a third 4x4 matrix.
In matrix notation: result = lhs x rhs. Due to the way matrix multiplication works,
the result matrix will have the same effect as first multiplying by the rhs matrix,
then multiplying by the lhs matrix. This is the opposite of what you might expect.
The same float array may be passed for result, lhs, and/or rhs.
However, the result element values are undefined if the result elements overlap either
the lhs or rhs elements.

Parameters
  result  The float array that holds the result.
  resultOffset  The offset into the result array where the result is stored.
  lhs  The float array that holds the left-hand-side matrix.
  lhsOffset  The offset into the lhs array where the lhs is stored.
  rhs  The float array that holds the right-hand-side matrix.
  rhsOffset  The offset into the rhs array where the rhs is stored.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>result</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>resultOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>lhs</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>lhsOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rhs</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>rhsOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>ScaleM</name>
            <comment>Scales matrix m in place by x, y, and z.

Parameters
  m  matrix to scale.
  mOffset  index into m where the matrix starts.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>Length</name>
            <comment>Computes the length of a vector.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>MultiplyMV</name>
            <comment>Multiply a 4 element vector by a 4x4 matrix and store the result in a 4 element column vector.
In matrix notation: result = lhs x rhs The same float array may be passed for resultVec, lhsMat,
and/or rhsVec. However, the resultVec element values are undefined if the resultVec elements
overlap either the lhsMat or rhsVec elements.

Parameters
  resultVec  The float array that holds the result vector.
  resultVecOffset  The offset into the result array where the result vector is stored.
  lhsMat  The float array that holds the left-hand-side matrix.
  lhsMatOffset  The offset into the lhs array where the lhs is stored.
  rhsVec  The float array that holds the right-hand-side vector.
  rhsVecOffset  The offset into the rhs vector where the rhs vector is stored.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>resultVec</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>resultVecOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>lhsMat</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>lhsMatOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>rhsVec</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>rhsVecOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RotateM2</name>
            <comment>Rotates matrix m by angle a (in degrees) around the axis (x, y, z) to another matrix.

Parameters
  rm  returns the result.
  rmOffset  index into rm where the result matrix starts.
  m  source matrix.
  mOffset  index into m where the source matrix starts.
  a  angle to rotate in degrees.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>rm</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>rmOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>RotateM</name>
            <comment>Rotates matrix m in place by angle a (in degrees) around the axis (x, y, z).

Parameters
  rm  returns the result.
  rmOffset  index into rm where the result matrix starts.
  m  source matrix.
  mOffset  index into m where the source matrix starts.
  a  angle to rotate in degrees.
  x  scale factor x.
  y  scale factor y.
  z  scale factor z.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>m</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>a</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>z</name>
                <type>float</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>anywheresoftware.b4a.agraham.opengl.GLWrapper.VisibilityWrapper</name>
        <shortname>Visibility</shortname>
        <comment>A collection of utility methods for computing the visibility of triangle meshes.</comment>
        <owner>process</owner>
        <method>
            <name>frustumCullSpheres</name>
            <comment>Given an OpenGL ES ModelView-Projection matrix (which implicitly describes a frustum)
and a list of spheres, determine which spheres intersect the frustum.

A ModelView-Projection matrix can be computed by multiplying a Projection matrix by
a ModelView matrix (in that order.). There are several possible ways to obtain the current
ModelView and Projection matrices. The most generally applicable way is to keep track of the
current matrices in application code. If that is not convenient, there are two optional
OpenGL ES extensions which may be used to read the current matrices from OpenGL ES:

GL10 - Ext.glQueryMatrixxOES
GL11 - GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES and
GL11 - GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES

The problem with reading back the matrices is that your application will only work with devices
that support the extension(s) that it uses.

A frustum is a six-sided truncated pyramid that defines the portion of world space that is visible in the view.

Spheres are described as four floating point values: x, y, z, and r, in world-space coordinates.
R is the radius of the sphere. 

Parameters
  mvp  a float array containing the mode-view-projection matrix 
  mvpOffset  The offset of the mvp data within the mvp array. 
  spheres  a float array containing the sphere data. 
  spheresOffset  an offset into the sphere array where the sphere data starts
  spheresCount  the number of spheres to cull.
  results  an integer array containing the indices of the spheres that are either contained entirely within or intersect the frustum.
  resultsOffset  an offset into the results array where the results start.
  resultsCapacity  the number of array elements available for storing results.
  
Returns
  the number of spheres that intersected the frustum. Can be larger than resultsCapacity,
  in which case only the first resultsCapacity results are written into the results array.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>mvp</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>mvpOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>spheres</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>spheresOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>spheresCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>results</name>
                <type>int[]</type>
            </parameter>
            <parameter>
                <name>resultsOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>resultsCapacity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>computeBoundingSphere</name>
            <comment>Compute a bounding sphere for a set of points.
It is approximately the minimal bounding sphere of an axis-aligned box that bounds the points.

Parameters
  positions  positions in x, y, z triples
  positionsOffset  offset into positions array
  positionsCount  number of position triples to process
  sphere  array containing the output as (x, y, z, r)
  sphereOffset offset where the sphere data will be written</comment>
            <returntype>void</returntype>
            <parameter>
                <name>positions</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>positionsOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>positionsCount</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>sphere</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>sphereOffset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>visibilityTest</name>
            <comment>Test whether a given triangle mesh is visible on the screen.
The mesh is specified as an indexed triangle list.

Parameters
  ws  the world space to screen space transform matrix, as an OpenGL column matrix.
  wsOffset  an index into the ws array where the data starts.
  positions  the vertex positions (x, y, z).
  positionsOffset  the index in the positions array where the data starts.
  indices  the indices of the triangle list. The indices are expressed as chars because they are unsigned 16-bit values.
  indicesOffset  the index in the indices array where the index data starts.
  indexCount  the number of indices in use. Typically a multiple of three. If not a multiple of three, the remaining one or two indices will be ignored.

Returns
  2 if all of the mesh is visible, 1 if some part of the mesh is visible, 0 if no part is visible.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>ws</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>wsOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>positions</name>
                <type>float[]</type>
            </parameter>
            <parameter>
                <name>positionsOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indices</name>
                <type>char[]</type>
            </parameter>
            <parameter>
                <name>indicesOffset</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>indexCount</name>
                <type>int</type>
            </parameter>
        </method>
    </class>
    <version>1.7</version>
    <comment>Android includes support for high performance 3D graphics via the OpenGL ES API.
OpenGL ES is a flavor of the OpenGL specification intended for embedded devices.
Versions of OpenGL ES are loosely peered to versions of the primary OpenGL standard.
Android currently supports OpenGL ES 1.0, which corresponds to OpenGL 1.3.
If the application you have in mind is possible with OpenGL 1.3 on a desktop system,
it should be possible on Android.

Android does include some basic support for OpenGL ES 1.1, the support is not complete,
and should not be relied upon at this time.

Support for the Android OpenGL Interfaces GL10, GL10Ext, GL11, GL11Ext and
GL11ExtensionPack is implemented in this library.

The specific API provided by Android is similar to the J2ME JSR239 OpenGL ES API.
However, it may not be identical, so watch out for deviations.

This library also contains a Matrix object that operates on 4x4 OpenGL matrices and
a Visibility object that imlpements a collection of utility methods for computing the visibility
of triangle meshes.</comment>
    <author>Andrew Graham</author>
</root>
