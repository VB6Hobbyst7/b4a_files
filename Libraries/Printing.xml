<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.06</doclet-version-NOT-library-version>
    <class>
        <name>anywheresoftware.b4a.objects.PdfDocumentWrapper</name>
        <shortname>PdfDocument</shortname>
        <comment>PdfDocument can be used to create Pdf files with one or more pages.
Example:&lt;code&gt;
pdf.Initialize
pdf.StartPage(595, 842) 'A4 size
pdf.Canvas.DrawLine(2, 2, 593 , 840, Colors.Blue, 4)
pdf.Canvas.DrawText("Hello", 100, 100, Typeface.DEFAULT_BOLD, 30, Colors.Yellow, "CENTER")
pdf.FinishPage
Dim out As OutputStream = File.OpenOutput(File.DirRootExternal, "1.pdf", False)
pdf.WriteToStream(out)
out.Close
pdf.Close&lt;/code&gt;</comment>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Close</name>
            <comment>Closes the document.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>WriteToStream</name>
            <comment>Writes the document to the output stream.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>out</name>
                <type>java.io.OutputStream</type>
            </parameter>
        </method>
        <method>
            <name>FinishPage</name>
            <comment>Finalizes the page drawings.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>StartPage</name>
            <comment>Starts a new page. Make sure to call FinishPage when you are done drawing.
Width / Height - Page dimension measured in Postscript (1/72th of an inch).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>int</type>
            </parameter>
        </method>
        <property>
            <name>Canvas</name>
            <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper</returntype>
            <comment>Returns the canvas that is used to draw on the current page.
Note that you &lt;b&gt;should not&lt;/b&gt; use DIP units with this canvas.
Canvas.Bitmap will return a stub bitmap.</comment>
        </property>
    </class>
    <class>
        <name>anywheresoftware.b4a.objects.PdfDocumentWrapper.Printer</name>
        <shortname>Printer</shortname>
        <comment>The printer object allows printing bitmaps, html strings and WebView content using the system printing feature.</comment>
        <owner>activity</owner>
        <method>
            <name>Initialize</name>
            <comment>Initializes the printer object. Currently there are no events.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>PrintWebView</name>
            <comment>Prints the WebView content. Make sure to wait for the PageFinished event.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JobName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>WebView</name>
                <type>android.webkit.WebView</type>
            </parameter>
        </method>
        <method>
            <name>PrintHtml</name>
            <comment>Prints the provided html string.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JobName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Html</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>PrintPdf</name>
            <comment>Prints a pdf document.
JobName - The print job name.
Dir / FileName - PDF file.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JobName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Dir</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>FileName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>PrintBitmap</name>
            <comment>Prints a bitmap. The system printing dialog will appear.
JobName - The print job name. 
Bitmap - Bitmap to print.
Fit - If true then the bitmap will be scaled to fit, otherwise it will be scaled to fill and will be cropped.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>JobName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>Bitmap</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
            <parameter>
                <name>Fit</name>
                <type>boolean</type>
            </parameter>
        </method>
        <property>
            <name>PrintSupported</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
    </class>
    <version>1.1</version>
    <dependsOn>com.android.support:support-v4</dependsOn>
</root>
