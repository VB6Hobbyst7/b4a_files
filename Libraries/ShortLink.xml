<?xml version="1.0" encoding="utf-8"?>
<root>
  <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
  <dependsOn>phone</dependsOn>
  <dependsOn>xmlsax</dependsOn>
  <dependsOn includesSingletonModules="true">dateutils</dependsOn>
  <dependsOn>okhttp</dependsOn>
  <dependsOn>stringutils</dependsOn>
  <dependsOn>okhttp-2.4.0</dependsOn>
  <dependsOn>okio-1.4.0</dependsOn>
  <class b4a_type="Service">
    <name>devil.app.shortlink.httputils2service</name>
    <shortname>HttpUtils2Service</shortname>
    <owner>process</owner>
    <objectwrapper>java.lang.Class</objectwrapper>
    <permission>android.permission.INTERNET</permission>
    <field>
      <name DesignerName="TempFolder">_tempfolder</name>
      <returntype>String</returntype>
    </field>
    <method>
      <name>process_globals</name>
      <returntype>void</returntype>
    </method>
  </class>
  <class>
    <name>devil.app.shortlink.shortlink._typelevel</name>
    <shortname>typeLevel</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>error</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>link</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>devil.app.shortlink.shortlink</name>
    <shortname>ShortLink</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Do you want create Short Link:
Example:
Dim createshortlink As ShortLink
Dim url As String
url = "https://www.google.it/search?sclient=psy-ab&amp;biw=1600&amp;bih=775&amp;site=webhp&amp;q=link+molto+lunghi+ma+molto+molto+lunghi&amp;oq=link+molto+lunghi+ma+molto+molto+lunghi&amp;gs_l=hp.3...1985656.1989803.0.1990495.22.14.0.0.0.0.0.0..0.0....0...1c.1.64.psy-ab..22.0.0.BN3qzQhL1aY&amp;pbx=1&amp;bav=on.2,or.r_cp.&amp;bvm=bv.98197061,d.bGQ&amp;ion=1&amp;ech=1&amp;psi=DKqsVY_pAcKtygPz_pjYAw.1437379086446.7&amp;ei=DaqsVbuaDcjXygO3qK_oCA&amp;emsg=NCSR&amp;noj=1"
createshortlink.Initialize(url,"Fe5pwHzYKdmshHMC2Kq7NUIN0X3Ap1J54u4jsn62nFgdNmBJX9", Me, "check_short")
...
Sub check_short(valore As typeLevel)
LogColor(valore.link, Colors.Red)
End Sub
******
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>url</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>yourkey</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Module</name>
        <type>Object</type>
      </parameter>
      <parameter>
        <name>EventName</name>
        <type>String</type>
      </parameter>
    </method>
  </class>
  <class>
    <name>devil.app.shortlink.httpjob._multipartfiledata</name>
    <shortname>MultipartFileData</shortname>
    <owner>process</owner>
    <method>
      <name>Initialize</name>
      <comment>Initializes the fields to their default value.</comment>
      <returntype>void</returntype>
    </method>
    <field>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name>Dir</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>FileName</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>KeyName</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name>ContentType</name>
      <returntype>String</returntype>
    </field>
  </class>
  <class>
    <name>devil.app.shortlink.httpjob</name>
    <shortname>HttpJob</shortname>
    <owner>process</owner>
    <method>
      <name>IsInitialized</name>
      <comment>Tests whether the object has been initialized.</comment>
      <returntype>boolean</returntype>
    </method>
    <method>
      <name DesignerName="Class_Globals">_class_globals</name>
      <comment>HttpUtils2 version 2.01
Class module
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="Complete">_complete</name>
      <comment>Called by the service when job completes
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>id</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Download">_download</name>
      <comment>Submits a HTTP GET request.
Consider using Download2 if the parameters should be escaped.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Download2">_download2</name>
      <comment>Submits a HTTP GET request.
Encodes illegal parameter characters.
&lt;code&gt;Example:
job.Download2("http://www.example.com", _
	Array As String("key1", "value1", "key2", "value2"))&lt;/code&gt;
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Parameters</name>
        <type>String[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GetBitmap">_getbitmap</name>
      <comment>Returns the response as a bitmap
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
    </method>
    <method>
      <name DesignerName="GetBitmapSample">_getbitmapsample</name>
      <comment>Returns the response as a bitmap loaded with LoadBitmapSample.
</comment>
      <returntype>anywheresoftware.b4a.objects.drawable.CanvasWrapper.BitmapWrapper</returntype>
      <parameter>
        <name>Width</name>
        <type>int</type>
      </parameter>
      <parameter>
        <name>Height</name>
        <type>int</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="GetInputStream">_getinputstream</name>
      <returntype>anywheresoftware.b4a.objects.streams.File.InputStreamWrapper</returntype>
    </method>
    <method>
      <name DesignerName="GetRequest">_getrequest</name>
      <comment>Called by the service to get the request
</comment>
      <returntype>anywheresoftware.b4h.okhttp.OkHttpClientWrapper.OkHttpRequest</returntype>
    </method>
    <method>
      <name DesignerName="GetString">_getstring</name>
      <comment>Returns the response as a string encoded with UTF8.
</comment>
      <returntype>String</returntype>
    </method>
    <method>
      <name DesignerName="GetString2">_getstring2</name>
      <comment>Returns the response as a string.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Encoding</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Initialize">_initialize</name>
      <comment>Initializes the Job.
Name - The job's name. Note that the name doesn't need to be unique.
TargetModule - The activity or service that will handle the JobDone event.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>ba</name>
        <type>anywheresoftware.b4a.BA</type>
      </parameter>
      <parameter>
        <name>Name</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>TargetModule</name>
        <type>Object</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PostBytes">_postbytes</name>
      <comment>Sends a POST request with the given string as the post data
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Data</name>
        <type>byte[]</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PostFile">_postfile</name>
      <comment>Sends a POST request with the given file as the post data.
This method doesn't work with assets files.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Dir</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>FileName</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PostMultipart">_postmultipart</name>
      <comment>Sends a multipart POST request.
NameValues - A map with the keys and values. Pass Null if not needed.
Files - List of MultipartFileData items. Pass Null if not needed.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>NameValues</name>
        <type>anywheresoftware.b4a.objects.collections.Map</type>
      </parameter>
      <parameter>
        <name>Files</name>
        <type>anywheresoftware.b4a.objects.collections.List</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="PostString">_poststring</name>
      <comment>Sends a POST request with the given data as the post data.
</comment>
      <returntype>String</returntype>
      <parameter>
        <name>Link</name>
        <type>String</type>
      </parameter>
      <parameter>
        <name>Text</name>
        <type>String</type>
      </parameter>
    </method>
    <method>
      <name DesignerName="Release">_release</name>
      <comment>Should be called to free resources held by this job.
</comment>
      <returntype>String</returntype>
    </method>
    <field>
      <name DesignerName="JobName">_jobname</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Success">_success</name>
      <returntype>boolean</returntype>
    </field>
    <field>
      <name DesignerName="Username">_username</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Password">_password</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="ErrorMessage">_errormessage</name>
      <returntype>String</returntype>
    </field>
    <field>
      <name DesignerName="Tag">_tag</name>
      <returntype>Object</returntype>
    </field>
  </class>
  <version>1.02</version>
  <author>Devil-App</author>
</root>