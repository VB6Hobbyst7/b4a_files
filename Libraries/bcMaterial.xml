<?xml version="1.0" encoding="UTF-8"?>
<root>
    <doclet-version-NOT-library-version>1.04</doclet-version-NOT-library-version>
    <class>
        <name>b4a.community.MaterialWrapper</name>
        <shortname>Material</shortname>
        <owner>process</owner>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
    </class>
    <class>
        <name>b4a.community.donmanfred.drawables.bcArrowDrawable</name>
        <shortname>bcArrowDrawable</shortname>
        <owner>process</owner>
        <method>
            <name>mutate</name>
            <comment></comment>
            <returntype>android.graphics.drawable.Drawable</returntype>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isRunning</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>setMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <property>
            <name>Color</name>
            <parameter>
                <name>colorStateList</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Mode</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Opacity</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Current</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcButton</name>
        <shortname>bcButton</shortname>
        <objectwrapper>com.rey.material.widget.Button</objectwrapper>
        <owner>process</owner>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Textsize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcCheckBox</name>
        <shortname>bcCheckBox</shortname>
        <objectwrapper>com.rey.material.widget.CheckBox</objectwrapper>
        <owner>process</owner>
        <event>onCheckedChanged(tag as Object, checked As boolean)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>checked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Textsize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcCheckedTextView</name>
        <shortname>msCheckedTextView</shortname>
        <objectwrapper>com.rey.material.widget.CheckedTextView</objectwrapper>
        <owner>process</owner>
        <event>onClick(v as Object)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Checked</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>checked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundDrawable</name>
            <parameter>
                <name>drawable</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Textsize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcCircularProgressView</name>
        <shortname>bcCircularProgressView</shortname>
        <objectwrapper>com.rey.material.widget.CircularProgressView</objectwrapper>
        <owner>process</owner>
        <event>onCheckedChanged(tag as Object, checked As boolean)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isAutostart</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Progress</name>
            <returntype>float</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Autostart</name>
            <parameter>
                <name>Autostart</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Colors</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>Colors</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SecondaryProgress</name>
            <returntype>float</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>mProgressId</name>
            <returntype>int</returntype>
            <parameter>
                <name>ProgressId</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ProgressMode</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ProgressDrawable</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcEditText</name>
        <shortname>bcEditText</shortname>
        <objectwrapper>com.rey.material.widget.EditText</objectwrapper>
        <owner>process</owner>
        <event>onselectionchanged(v As Object, selStart As Int, selEnd As Int)</event>
        <event>onfocuschange(v As Object, focused As boolean)</event>
        <method>
            <name>appendAt</name>
            <comment>Convenience method: Append the specified text slice to the TextView's
 display buffer, upgrading it to BufferType.EDITABLE if it was not already
 editable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>end</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>setSingleLine</name>
            <comment>Sets the properties of this field (lines, horizontally scrolling,
 transformation method) to be for a single-line input.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>moveCursorToVisibleOffset</name>
            <comment>Move the cursor, if needed, so that it is at an offset that is visible to
 the user. This will not move the cursor if it represents more than one
 character (a selection range). This will only work if the TextView contains
 spannable text; otherwise it will do nothing.
Return type: @return:True if the cursor was actually moved, false otherwise.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>extendSelection</name>
            <comment>Convenience for {@link android.text.Selection#extendSelection}.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>cancelLongPress</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>dismissDropDown</name>
            <comment>&lt;p&gt;
 Closes the drop down if present on screen.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isPopupShowing</name>
            <comment>&lt;p&gt;
 Indicates whether the popup menu is showing.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;
Return type: @return:true if the popup menu is showing, false otherwise</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>onFilterComplete</name>
            <comment>&lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>void</returntype>
            <parameter>
                <name>count</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>showDropDown</name>
            <comment>&lt;p&gt;
 Displays the drop down on screen.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>setTypeface2</name>
            <comment>Sets the typeface and style in which the text should be displayed, and
 turns on the fake bold and italic bits in the Paint if the Typeface that
 you provided does not have all the bits in the style that you specified.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>tf</name>
                <type>android.graphics.Typeface</type>
            </parameter>
            <parameter>
                <name>style</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>canCut</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>selectAll</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setSelection</name>
            <comment>Convenience for
 {@link android.text.Selection#setSelection(android.text.Spannable, int, int)}
 .</comment>
            <returntype>void</returntype>
            <parameter>
                <name>start</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>stop</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setLineSpacing</name>
            <comment>Sets line spacing for this TextView. Each line will have its height
 multiplied by &lt;code&gt;mult&lt;/code&gt; and have &lt;code&gt;add&lt;/code&gt; added to it.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>add</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>mult</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>enoughToFilter</name>
            <comment>Returns &lt;code&gt;true&lt;/code&gt; if the amount of text in the field meets or
 exceeds the {@link #getThreshold} requirement. You can override this to
 impose a different standard for when filtering will be triggered.
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isSuggestionsEnabled</name>
            <comment>Return whether or not suggestions are enabled on this TextView. The
 suggestions are generated by the IME or by the spell checker as the user
 types. This is done by adding {@link android.text.style.SuggestionSpan}s to
 the text.

 When suggestions are enabled (default), this list of suggestions will be
 displayed when the user asks for them on these parts of the text. This
 value depends on the inputType of this TextView.

 The class of the input type must be
 {@link android.text.InputType#TYPE_CLASS_TEXT}.

 In addition, the type variation must be one of
 {@link android.text.InputType#TYPE_TEXT_VARIATION_NORMAL},
 {@link android.text.InputType#TYPE_TEXT_VARIATION_EMAIL_SUBJECT},
 {@link android.text.InputType#TYPE_TEXT_VARIATION_LONG_MESSAGE},
 {@link android.text.InputType#TYPE_TEXT_VARIATION_SHORT_MESSAGE} or
 {@link android.text.InputType#TYPE_TEXT_VARIATION_WEB_EDIT_TEXT}.

 And finally, the
 {@link android.text.InputType#TYPE_TEXT_FLAG_NO_SUGGESTIONS} flag must
 &lt;i&gt;not&lt;/i&gt; be set.
Return type: @return:true if the suggestions popup window is enabled, based on the
         inputType.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getOffsetForPosition</name>
            <comment>Get the character offset closest to the specified absolute position. A
 typical use case is to pass the result of
 {@link android.view.MotionEvent#getX()} and
 {@link android.view.MotionEvent#getY()} to this method.
x: The horizontal absolute position of a point on screen
y: The vertical absolute position of a point on screen
Return type: @return:the character offset for the character whose position is closest to
         the specified position. Returns -1 if there is no layout.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>x</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name>canPaste</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>clearListSelection</name>
            <comment>&lt;p&gt;
 Clear the list selection. This may only be temporary, as user input will
 often bring it back.
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>beginBatchEdit</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setShadowLayer</name>
            <comment>Gives the text a shadow of the specified blur radius and color, the
 specified distance from its drawn position.
 &lt;p&gt;
 The text shadow produced does not interact with the properties on view that
 are responsible for real time shadows,
 {@link android.view.View#getElevation() elevation} and
 {@link android.view.View#getTranslationZ() translationZ}.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>radius</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dx</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>dy</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isInputMethodTarget</name>
            <comment>Returns whether this text view is a current input method target. The
 default implementation just checks with
 {@link android.view.inputmethod.InputMethodManager}.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>isTextSelectable</name>
            <comment>Returns the state of the {@code textIsSelectable} flag (See
 {@link #setTextIsSelectable setTextIsSelectable()}). Although you have to
 set this flag to allow users to select and copy text in a non-editable
 TextView, the content of an {@link EditText} can always be selected,
 independently of the value of this flag.
 &lt;p&gt;
Return type: @return:True if the text displayed in this TextView can be selected by the
         user.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>didTouchFocusSelect</name>
            <comment>Returns true, only while processing a touch gesture, if the initial touch
 down event caused focus to move to the text view and as a result its
 selection changed. Only valid while processing the touch gesture of
 interest, in an editable text view.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>performCompletion</name>
            <comment>&lt;p&gt;
 Performs the text completion by converting the selected item from the drop
 down list into a string, replacing the text box's content with this string
 and finally dismissing the drop down menu.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>endBatchEdit</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>clearError</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>canCopy</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isCursorVisible</name>
            <comment>
Return type: @return:whether or not the cursor is visible (assuming this TextView is
         editable)</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>clearFocus</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>bringPointIntoView</name>
            <comment>Move the point, specified by the offset, into the view if it is needed.
 This has to be called after layout. Returns true if anything changed.</comment>
            <returntype>boolean</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>getLineBounds</name>
            <comment>Return the baseline for the specified line (0...getLineCount() - 1) If
 bounds is not null, return the top, left, right, bottom extents of the
 specified line in it. If the internal Layout has not been built, return 0
 and set bounds to (0, 0, 0, 0)
line: which line to examine (0..getLineCount() - 1)
bounds: Optional. If not null, it returns the extent of the line
Return type: @return:the Y-coordinate of the baseline</comment>
            <returntype>int</returntype>
            <parameter>
                <name>line</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>bounds</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>length</name>
            <comment>Returns the length, in characters, of the text managed by this TextView</comment>
            <returntype>int</returntype>
        </method>
        <method>
            <name>hasSelection</name>
            <comment>Return true iff there is a selection inside this text view.</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>clearComposingText</name>
            <comment>Use
 {@link android.view.inputmethod.BaseInputConnection#removeComposingSpans
 BaseInputConnection.removeComposingSpans()} to remove any IME composing
 state from this text view.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isPerformingCompletion</name>
            <comment>Identifies whether the view is currently performing a text completion, so
 subclasses can decide whether to respond to text changed events.
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>getInputExtras</name>
            <comment>Retrieve the input extras currently associated with the text view, which
 can be viewed as well as modified.
create: If true, the extras will be created if they don't already exist.
          Otherwise, null will be returned if none have been created.</comment>
            <returntype>android.os.Bundle</returntype>
            <parameter>
                <name>create</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>append</name>
            <comment>Convenience method: Append the specified text to the TextView's display
 buffer, upgrading it to BufferType.EDITABLE if it was not already editable.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>setImeActionLabel</name>
            <comment>Change the custom IME action associated with the text view, which will be
 reported to an IME with
 {@link android.view.inputmethod.EditorInfo#actionLabel} and
 {@link android.view.inputmethod.EditorInfo#actionId} when it has focus.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>label</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <parameter>
                <name>actionId</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <property>
            <name>EditableText</name>
            <returntype>android.text.Editable</returntype>
            <comment>Return the text the TextView is displaying as an Editable object. If the
 text is not editable, null is returned.</comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxLines</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxlines</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at most this many lines tall.

 Setting this value overrides any other (maximum) height setting.</comment>
        </property>
        <property>
            <name>ExtendedPaddingTop</name>
            <returntype>int</returntype>
            <comment>Returns the extended top padding of the view, including both the top
 Drawable if any and any extra space to keep more than maxLines of text from
 showing. It is only valid to call this after measuring.</comment>
        </property>
        <property>
            <name>TextKeepState</name>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Like {@link #setText(CharSequence)}, except that the cursor position (if
 any) is retained in the new text.</comment>
        </property>
        <property>
            <name>MaxEms</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxems</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at most this many ems wide</comment>
        </property>
        <property>
            <name>ImeOptions</name>
            <returntype>int</returntype>
            <parameter>
                <name>imeOptions</name>
                <type>int</type>
            </parameter>
            <comment>Get the type of the IME editor.</comment>
        </property>
        <property>
            <name>CompoundDrawablePadding</name>
            <returntype>int</returntype>
            <parameter>
                <name>pad</name>
                <type>int</type>
            </parameter>
            <comment>Returns the padding between the compound drawables and the text.</comment>
        </property>
        <property>
            <name>LineSpacingMultiplier</name>
            <returntype>float</returntype>
            <comment>Gets the line spacing multiplier</comment>
        </property>
        <property>
            <name>TextColor</name>
            <parameter>
                <name>colors</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment>Sets the text color.</comment>
        </property>
        <property>
            <name>RawInputType</name>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <comment>Directly change the content type integer of the text view, without
 modifying any other state.</comment>
        </property>
        <property>
            <name>Threshold</name>
            <returntype>int</returntype>
            <parameter>
                <name>threshold</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Returns the number of characters the user must type before the drop down
 list is shown.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>HintTextColor</name>
            <parameter>
                <name>colors</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment>Sets the color of the hint text.</comment>
        </property>
        <property>
            <name>DropDownAnchor</name>
            <returntype>int</returntype>
            <parameter>
                <name>id</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Returns the id for the view that the auto-complete drop down list is
 anchored to.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>ImeActionLabel</name>
            <returntype>java.lang.CharSequence</returntype>
            <comment>Get the IME action label previous set with {@link #setImeActionLabel}.</comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Typeface</name>
            <returntype>android.graphics.Typeface</returntype>
            <parameter>
                <name>tf</name>
                <type>android.graphics.Typeface</type>
            </parameter>
            <comment>Sets the typeface and style in which the text should be displayed. Note
 that not all Typeface families actually have bold and italic variants, so
 you may need to use {@link #setTypeface(android.graphics.Typeface, int)} to
 get the appearance that you actually want.</comment>
        </property>
        <property>
            <name>HorizontallyScrolling</name>
            <parameter>
                <name>whether</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the text should be allowed to be wider than the View is. If
 false, it will be wrapped to the width of the View.</comment>
        </property>
        <property>
            <name>CompoundPaddingStart</name>
            <returntype>int</returntype>
            <comment>Returns the start padding of the view, plus space for the start Drawable if
 any.</comment>
        </property>
        <property>
            <name>PrivateImeOptions</name>
            <returntype>java.lang.String</returntype>
            <comment>Get the private type of the content.</comment>
        </property>
        <property>
            <name>Urls</name>
            <returntype>android.text.style.URLSpan[]</returntype>
            <comment>Returns the list of URLSpans attached to the text (by
 {@link android.text.util.Linkify} or otherwise) if any. You can call
 {@link android.text.style.URLSpan#getURL} on them to find where they link
 to or use {@link android.text.Spanned#getSpanStart} and
 {@link android.text.Spanned#getSpanEnd} to find the region of the text they
 are attached to.</comment>
        </property>
        <property>
            <name>ImeActionId</name>
            <returntype>int</returntype>
            <comment>Get the IME action ID previous set with {@link #setImeActionLabel}.</comment>
        </property>
        <property>
            <name>ShadowDy</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ShadowDx</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>InputType</name>
            <returntype>int</returntype>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
            <comment>Get the type of the editable content.</comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DropDownVerticalOffset</name>
            <returntype>int</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Gets the vertical offset used for the auto-complete drop-down list.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>TotalPaddingStart</name>
            <returntype>int</returntype>
            <comment>Returns the total start padding of the view, including the start Drawable
 if any.</comment>
        </property>
        <property>
            <name>IncludeFontPadding</name>
            <parameter>
                <name>includepad</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether the TextView includes extra top and bottom padding to make room
 for accents that go above the normal ascent and descent. The default is
 true.</comment>
        </property>
        <property>
            <name>CompletionHint</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>hint</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Gets the optional hint text displayed at the bottom of the the matching
 list.
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>TextIsSelectable</name>
            <parameter>
                <name>selectable</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets whether the content of this view is selectable by the user. The
 default is {@code false}, meaning that the content is not selectable.
 &lt;p&gt;
 When you use a TextView to display a useful piece of information to the
 user (such as a contact's address), make it selectable, so that the user
 can select and copy its content. You can also use set the XML attribute
 {@link android.R.styleable#TextView_textIsSelectable} to "true".
 &lt;p&gt;
 When you call this method to set the value of {@code textIsSelectable}, it
 sets the flags {@code focusable}, {@code focusableInTouchMode},
 {@code clickable}, and {@code longClickable} to the same value. These flags
 correspond to the attributes {@link android.R.styleable#View_focusable
 android:focusable}, {@link android.R.styleable#View_focusableInTouchMode
 android:focusableInTouchMode}, {@link android.R.styleable#View_clickable
 android:clickable}, and {@link android.R.styleable#View_longClickable
 android:longClickable}. To restore any of these flags to a state you had
 set previously, call one or more of the following methods:
 {@link #setFocusable(boolean) setFocusable()},
 {@link #setFocusableInTouchMode(boolean) setFocusableInTouchMode()},
 {@link #setClickable(boolean) setClickable()} or
 {@link #setLongClickable(boolean) setLongClickable()}.</comment>
        </property>
        <property>
            <name>FreezesText</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>freezesText</name>
                <type>boolean</type>
            </parameter>
            <comment>Return whether this text view is including its entire text contents in
 frozen icicles.</comment>
        </property>
        <property>
            <name>LineHeight</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>TotalPaddingTop</name>
            <returntype>int</returntype>
            <comment>Returns the total top padding of the view, including the top Drawable if
 any, the extra space to keep more than maxLines from showing, and the
 vertical offset for gravity, if any.</comment>
        </property>
        <property>
            <name>DropDownWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>width</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Returns the current width for the auto-complete drop down list. This can be
 a fixed width, or {@link ViewGroup.LayoutParams#MATCH_PARENT} to fill the
 screen, or {@link ViewGroup.LayoutParams#WRAP_CONTENT} to fit the width of
 its anchor view.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>Helper</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>helper</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CursorVisible</name>
            <parameter>
                <name>visible</name>
                <type>boolean</type>
            </parameter>
            <comment>Set whether the cursor is visible. The default is true. Note that this
 property only makes sense for editable TextView.</comment>
        </property>
        <property>
            <name>SelectAllOnFocus</name>
            <parameter>
                <name>selectAllOnFocus</name>
                <type>boolean</type>
            </parameter>
            <comment>Set the TextView so that when it takes focus, all the text is selected.</comment>
        </property>
        <property>
            <name>MaxWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxpixels</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at most this many pixels wide</comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DropDownHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>height</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Returns the current height for the auto-complete drop down list. This can
 be a fixed height, or {@link ViewGroup.LayoutParams#MATCH_PARENT} to fill
 the screen, or {@link ViewGroup.LayoutParams#WRAP_CONTENT} to fit the
 height of the drop down's content.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>MinEms</name>
            <returntype>int</returntype>
            <parameter>
                <name>minems</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at least this many ems wide</comment>
        </property>
        <property>
            <name>DropDownHorizontalOffset</name>
            <returntype>int</returntype>
            <parameter>
                <name>offset</name>
                <type>int</type>
            </parameter>
            <comment>&lt;p&gt;
 Gets the horizontal offset used for the auto-complete drop-down list.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <returntype>android.text.Editable</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AutoLinkMask</name>
            <returntype>int</returntype>
            <parameter>
                <name>mask</name>
                <type>int</type>
            </parameter>
            <comment>Gets the autolink mask of the text. See
 {@link android.text.util.Linkify#ALL Linkify.ALL} and peers for possible
 values.</comment>
        </property>
        <property>
            <name>MinWidth</name>
            <returntype>int</returntype>
            <parameter>
                <name>minpixels</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at least this many pixels wide</comment>
        </property>
        <property>
            <name>LetterSpacing</name>
            <parameter>
                <name>letterSpacing</name>
                <type>float</type>
            </parameter>
            <comment>Sets text letter-spacing. The value is in 'EM' units. Typical values for
 slight expansion will be around 0.05. Negative values tighten text.</comment>
        </property>
        <property>
            <name>ExtendedPaddingBottom</name>
            <returntype>int</returntype>
            <comment>Returns the extended bottom padding of the view, including both the bottom
 Drawable if any and any extra space to keep more than maxLines of text from
 showing. It is only valid to call this after measuring.</comment>
        </property>
        <property>
            <name>Ellipsize</name>
            <returntype EnumType="true">android.text.TextUtils.TruncateAt</returntype>
            <comment>Returns where, if anywhere, words that are longer than the view is wide
 should be ellipsized.</comment>
        </property>
        <property>
            <name>CompoundPaddingTop</name>
            <returntype>int</returntype>
            <comment>Returns the top padding of the view, plus space for the top Drawable if
 any.</comment>
        </property>
        <property>
            <name>TransformationMethod</name>
            <returntype>android.text.method.TransformationMethod</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectionEnd</name>
            <returntype>int</returntype>
            <comment>Convenience for {@link android.text.Selection#getSelectionEnd}.</comment>
        </property>
        <property>
            <name>TextColors</name>
            <returntype>android.content.res.ColorStateList</returntype>
            <comment>Gets the text colors for the different states (normal, selected, focused)
 of the TextView.</comment>
        </property>
        <property>
            <name>MinHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>minHeight</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at least this many pixels tall.

 Setting this value overrides any other (minimum) number of lines setting.</comment>
        </property>
        <property>
            <name>Hint</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>hint</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment>Returns the hint that is displayed when the text of the TextView is empty.</comment>
        </property>
        <property>
            <name>LineCount</name>
            <returntype>int</returntype>
            <comment>Return the number of lines of text, or 0 if the internal Layout has not
 been built.</comment>
        </property>
        <property>
            <name>SelectionStart</name>
            <returntype>int</returntype>
            <parameter>
                <name>index</name>
                <type>int</type>
            </parameter>
            <comment>Convenience for {@link android.text.Selection#getSelectionStart}.</comment>
        </property>
        <property>
            <name>LineSpacingExtra</name>
            <returntype>float</returntype>
            <comment>Gets the line spacing extra space</comment>
        </property>
        <property>
            <name>Filters</name>
            <returntype>android.text.InputFilter[]</returntype>
            <parameter>
                <name>filters</name>
                <type>android.text.InputFilter[]</type>
            </parameter>
            <comment>Returns the current list of input filters.</comment>
        </property>
        <property>
            <name>CurrentTextColor</name>
            <returntype>int</returntype>
            <comment>&lt;p&gt;
 Return the current color selected for normal text.
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>ListSelection</name>
            <returntype>int</returntype>
            <parameter>
                <name>position</name>
                <type>int</type>
            </parameter>
            <comment>Get the position of the dropdown view selection, if there is one. Returns
 {@link android.widget.ListView#INVALID_POSITION ListView.INVALID_POSITION}
 if there is no dropdown or if there is no selection.
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>LinksClickable</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>whether</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns whether the movement method will automatically be set to
 {@link android.text.method.LinkMovementMethod} if {@link #setAutoLinkMask}
 has been set to nonzero and links are detected in {@link #setText}. The
 default is true.</comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>HighlightColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment>Sets the color used to display the selection highlight.</comment>
        </property>
        <property>
            <name>LinkTextColors</name>
            <returntype>android.content.res.ColorStateList</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ShadowColor</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>HintTextColors</name>
            <returntype>android.content.res.ColorStateList</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MarqueeRepeatLimit</name>
            <returntype>int</returntype>
            <parameter>
                <name>marqueeLimit</name>
                <type>int</type>
            </parameter>
            <comment>Gets the number of times the marquee animation is repeated. Only meaningful
 if the TextView has marquee enabled.</comment>
        </property>
        <property>
            <name>Lines</name>
            <parameter>
                <name>lines</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView exactly this many lines tall.

 Note that setting this value overrides any other (minimum / maximum) number
 of lines or height setting. A single line TextView will set this value to
 1.</comment>
        </property>
        <property>
            <name>TextScaleX</name>
            <returntype>float</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
            <comment>Sets the extent by which text should be stretched horizontally.</comment>
        </property>
        <property>
            <name>DropDownBackground</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment>&lt;p&gt;
 Gets the background of the auto-complete drop-down list.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>TotalPaddingEnd</name>
            <returntype>int</returntype>
            <comment>Returns the total end padding of the view, including the end Drawable if
 any.</comment>
        </property>
        <property>
            <name>AllCaps</name>
            <parameter>
                <name>allCaps</name>
                <type>boolean</type>
            </parameter>
            <comment>Sets the properties of this field to transform input to ALL CAPS display.
 This may use a "small caps" formatting if available. This setting will be
 ignored if this field is editable or selectable.

 This call replaces the current transformation method. Disabling this will
 not necessarily restore the previous behavior from before this was enabled.</comment>
        </property>
        <property>
            <name>MinLines</name>
            <returntype>int</returntype>
            <parameter>
                <name>minlines</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at least this many lines tall.

 Setting this value overrides any other (minimum) height setting. A single
 line TextView will set this value to 1.</comment>
        </property>
        <property>
            <name>ShowSoftInputOnFocus</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>show</name>
                <type>boolean</type>
            </parameter>
            <comment>Returns whether the soft input method will be made visible when this
 TextView gets focused. The default is true.</comment>
        </property>
        <property>
            <name>ShadowRadius</name>
            <returntype>float</returntype>
            <comment>Gets the radius of the shadow layer.</comment>
        </property>
        <property>
            <name>TotalPaddingBottom</name>
            <returntype>int</returntype>
            <comment>Returns the total bottom padding of the view, including the bottom Drawable
 if any, the extra space to keep more than maxLines from showing, and the
 vertical offset for gravity, if any.</comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Gravity</name>
            <returntype>int</returntype>
            <parameter>
                <name>gravity</name>
                <type>int</type>
            </parameter>
            <comment>Returns the horizontal and vertical alignment of this TextView.</comment>
        </property>
        <property>
            <name>TotalPaddingRight</name>
            <returntype>int</returntype>
            <comment>Returns the total right padding of the view, including the right Drawable
 if any.</comment>
        </property>
        <property>
            <name>CompoundPaddingEnd</name>
            <returntype>int</returntype>
            <comment>Returns the end padding of the view, plus space for the end Drawable if
 any.</comment>
        </property>
        <property>
            <name>FontFeatureSettings</name>
            <parameter>
                <name>fontFeatureSettings</name>
                <type>java.lang.String</type>
            </parameter>
            <comment>Sets font feature settings. The format is the same as the CSS
 font-feature-settings attribute:
 http://dev.w3.org/csswg/css-fonts/#propdef-font-feature-settings</comment>
        </property>
        <property>
            <name>DropDownBackgroundDrawable</name>
            <parameter>
                <name>d</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment>&lt;p&gt;
 Sets the background of the auto-complete drop-down list.
 &lt;/p&gt;
 &lt;p&gt;
 Only work when autoCompleMode is AUTOCOMPLETE_MODE_SINGLE or
 AUTOCOMPLETE_MODE_MULTI
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>Error</name>
            <returntype>java.lang.CharSequence</returntype>
            <parameter>
                <name>error</name>
                <type>java.lang.CharSequence</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextSize</name>
            <returntype>float</returntype>
            <parameter>
                <name>size</name>
                <type>float</type>
            </parameter>
            <comment>Set the default text size to the given value, interpreted as "scaled pixel"
 units. This size is adjusted based on the current density and user font
 size preference.</comment>
        </property>
        <property>
            <name>CompoundPaddingBottom</name>
            <returntype>int</returntype>
            <comment>Returns the bottom padding of the view, plus space for the bottom Drawable
 if any.</comment>
        </property>
        <property>
            <name>CurrentHintTextColor</name>
            <returntype>int</returntype>
            <comment>&lt;p&gt;
 Return the current color selected to paint the hint text.
 &lt;/p&gt;</comment>
        </property>
        <property>
            <name>TotalPaddingLeft</name>
            <returntype>int</returntype>
            <comment>Returns the total left padding of the view, including the left Drawable if
 any.</comment>
        </property>
        <property>
            <name>CompoundPaddingLeft</name>
            <returntype>int</returntype>
            <comment>Returns the left padding of the view, plus space for the left Drawable if
 any.</comment>
        </property>
        <property>
            <name>TextLocale</name>
            <returntype>java.util.Locale</returntype>
            <parameter>
                <name>locale</name>
                <type>java.util.Locale</type>
            </parameter>
            <comment>Get the default {@link java.util.Locale} of the text in this TextView.</comment>
        </property>
        <property>
            <name>CompoundPaddingRight</name>
            <returntype>int</returntype>
            <comment>Returns the right padding of the view, plus space for the right Drawable if
 any.</comment>
        </property>
        <property>
            <name>MaxHeight</name>
            <returntype>int</returntype>
            <parameter>
                <name>maxHeight</name>
                <type>int</type>
            </parameter>
            <comment>Makes the TextView at most this many pixels tall. This option is mutually
 exclusive with the {@link #setMaxLines(int)} method.

 Setting this value overrides any other (maximum) number of lines setting.</comment>
        </property>
        <property>
            <name>LinkTextColor</name>
            <parameter>
                <name>colors</name>
                <type>android.content.res.ColorStateList</type>
            </parameter>
            <comment>Sets the color of links in the text.</comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcFloatingActionButton</name>
        <shortname>bcFloatingActionButton</shortname>
        <objectwrapper>com.rey.material.widget.FloatingActionButton</objectwrapper>
        <owner>process</owner>
        <event>onclick(v As Object)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>show</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>x</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>y</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>gravity</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>setLineMorphingState</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>state</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>dismiss</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>setIcon</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>icon</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Radius</name>
            <returntype>int</returntype>
            <parameter>
                <name>radius</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>LineMorphingState</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Icon</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcLinearProgressView</name>
        <shortname>bcLinearProgressView</shortname>
        <objectwrapper>com.rey.material.widget.LinearProgressView</objectwrapper>
        <owner>process</owner>
        <event>onCheckedChanged(tag as Object, checked As boolean)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>start</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
            <parameter>
                <name>type</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>stop</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>isAutostart</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Progress</name>
            <returntype>float</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Autostart</name>
            <parameter>
                <name>Autostart</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Colors</name>
            <returntype>int[]</returntype>
            <parameter>
                <name>Colors</name>
                <type>int[]</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SecondaryProgress</name>
            <returntype>float</returntype>
            <parameter>
                <name>percent</name>
                <type>float</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>mProgressId</name>
            <returntype>int</returntype>
            <parameter>
                <name>ProgressId</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ProgressMode</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>ProgressDrawable</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <comment></comment>
        </property>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcRadiobutton</name>
        <shortname>bcRadiobutton</shortname>
        <objectwrapper>com.rey.material.widget.RadioButton</objectwrapper>
        <owner>process</owner>
        <event>onCheckedChanged(tag as Object, checked As boolean)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>toggle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>CheckedImmediately</name>
            <parameter>
                <name>checked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Text</name>
            <parameter>
                <name>text</name>
                <type>java.lang.String</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Textsize</name>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>isSelected</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Selected</name>
            <parameter>
                <name>selected</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcSlider</name>
        <shortname>bcSlider</shortname>
        <objectwrapper>com.rey.material.widget.Slider</objectwrapper>
        <owner>process</owner>
        <event>onPositionChanged(v As Object, oldPos As Float, newPos As Float, oldValue As Int, newValue As Int)</event>
        <method>
            <name>isDiscreteMode</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>setPosition</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>pos</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>setValue</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>value</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>ExactValue</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Position</name>
            <returntype>float</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>MaxValue</name>
            <returntype>int</returntype>
            <parameter>
                <name>MaxValue</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>DiscreteMode</name>
            <parameter>
                <name>DiscreteMode</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>StepValue</name>
            <returntype>int</returntype>
            <parameter>
                <name>StepValue</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Value</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>MinValue</name>
            <returntype>int</returntype>
            <parameter>
                <name>MinValue</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcSnackBar</name>
        <shortname>bcSnackBar</shortname>
        <objectwrapper>com.rey.material.widget.SnackBar</objectwrapper>
        <owner>activity</owner>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>show</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>actionTextColor</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setactionTextSize</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>duration</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>duration</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>TextColor</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>actionText</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>TextSize</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>size</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Text</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>text</name>
                <type>java.lang.CharSequence</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>singleLine</name>
            <comment></comment>
            <returntype>com.rey.material.widget.SnackBar</returntype>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcSwitch</name>
        <shortname>bcSwitch</shortname>
        <objectwrapper>com.rey.material.widget.Switch</objectwrapper>
        <owner>process</owner>
        <event>onCheckedChanged(v As Object, checked As Boolean)</event>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>toggle</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>isChecked</name>
            <returntype>boolean</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Checked</name>
            <parameter>
                <name>checked</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>tag</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <parameter>
                <name>color</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.bcTimePicker</name>
        <shortname>bcTimePicker</shortname>
        <objectwrapper>com.rey.material.widget.TimePicker</objectwrapper>
        <owner>process</owner>
        <event>onmodechanged(mode As Int)</event>
        <event>onhourchanged(oldValue As int, newValue As int)</event>
        <event>onminutechanged(oldValue As int, newValue As int)</event>
        <method>
            <name>isTwentyFour</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>DesignerCreateView</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>base</name>
                <type>anywheresoftware.b4a.objects.PanelWrapper</type>
            </parameter>
            <parameter>
                <name>lw</name>
                <type>anywheresoftware.b4a.objects.LabelWrapper</type>
            </parameter>
            <parameter>
                <name>props</name>
                <type>anywheresoftware.b4a.objects.collections.Map</type>
            </parameter>
        </method>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>AddToParent</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>Parent</name>
                <type>android.view.ViewGroup</type>
            </parameter>
            <parameter>
                <name>left</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>top</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>width</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>height</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>setMode</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>mode</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>animation</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>left</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TwentyFourHour</name>
            <parameter>
                <name>b</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextHighlightColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>textHighlightColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectionRadius</name>
            <returntype>int</returntype>
            <parameter>
                <name>selectionRadius</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tf</name>
            <returntype>android.graphics.Typeface</returntype>
            <parameter>
                <name>tf</name>
                <type>android.graphics.Typeface</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Minute</name>
            <returntype>int</returntype>
            <parameter>
                <name>minute</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TickSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>tickSize</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>textColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>SelectionColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>selectionColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>AnimDuration</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Typeface</name>
            <returntype>android.graphics.Typeface</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Hour</name>
            <returntype>int</returntype>
            <parameter>
                <name>hour</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Mode</name>
            <returntype>int</returntype>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TextSize</name>
            <returntype>int</returntype>
            <parameter>
                <name>textSize</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>top</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>TickColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>tickColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>BackgroundColor</name>
            <returntype>int</returntype>
            <parameter>
                <name>backgroundColor</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <class>
        <name>b4a.community.donmanfred.widget.TabPageIndicatorWrapper</name>
        <objectwrapper>com.rey.material.widget.TabPageIndicator</objectwrapper>
        <owner>process</owner>
        <event>onTimeChanged(oldHour As Int, oldMinute As Int, newHour As Int, newMinute As Int)</event>
        <method>
            <name>IsInitialized</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <method>
            <name>Initialize</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>ba</name>
                <type>anywheresoftware.b4a.BA</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>java.lang.String</type>
            </parameter>
        </method>
        <method>
            <name>BringToFront</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayout</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>SendToBack</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetVisibleAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>boolean</type>
            </parameter>
        </method>
        <method>
            <name>RemoveView</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>Invalidate3</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate2</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Rect</type>
            </parameter>
        </method>
        <method>
            <name>SetColorAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name>SetBackgroundImage</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.Bitmap</type>
            </parameter>
        </method>
        <method>
            <name>Invalidate</name>
            <comment></comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name>SetLayoutAnimated</name>
            <comment></comment>
            <returntype>void</returntype>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>arg1</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg2</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg3</name>
                <type Pixel="true">int</type>
            </parameter>
            <parameter>
                <name>arg4</name>
                <type Pixel="true">int</type>
            </parameter>
        </method>
        <method>
            <name>RequestFocus</name>
            <comment></comment>
            <returntype>boolean</returntype>
        </method>
        <property>
            <name>Left</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Background</name>
            <returntype>android.graphics.drawable.Drawable</returntype>
            <parameter>
                <name>arg0</name>
                <type>android.graphics.drawable.Drawable</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Top</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Color</name>
            <parameter>
                <name>arg0</name>
                <type>int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Visible</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Enabled</name>
            <returntype>boolean</returntype>
            <parameter>
                <name>arg0</name>
                <type>boolean</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Height</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Tag</name>
            <returntype>java.lang.Object</returntype>
            <parameter>
                <name>arg0</name>
                <type>java.lang.Object</type>
            </parameter>
            <comment></comment>
        </property>
        <property>
            <name>Width</name>
            <returntype>int</returntype>
            <parameter>
                <name>arg0</name>
                <type Pixel="true">int</type>
            </parameter>
            <comment></comment>
        </property>
        <field>
            <name>ba</name>
            <comment></comment>
            <returntype>anywheresoftware.b4a.BA</returntype>
        </field>
    </class>
    <version>0.05</version>
    <author>B4A Community</author>
</root>
